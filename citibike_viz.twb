<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0712.0907                               -->
<workbook locale='en_GB' source-build='2021.2.1 (20212.21.0712.0907)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='citibike_viz_16298989071570' path='/workbooks' revision='1.3' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='citibike_st+' inline='true' name='federated.0anjuk313x263d1chian6129x2c7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='citibike_st' name='textscan.03sngfx1c8g68w1h2nqmi0byehux'>
            <connection class='textscan' directory='D:/pr2/Data warehouse' filename='citibike_st.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.03sngfx1c8g68w1h2nqmi0byehux' name='citibike_st.csv' table='[citibike_st#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='station name' ordinal='0' />
            <column datatype='string' name='gender' ordinal='1' />
            <column datatype='integer' name='age' ordinal='2' />
            <column datatype='string' name='category' ordinal='3' />
            <column datatype='date' date-parse-format='MMMM' name='month' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.03sngfx1c8g68w1h2nqmi0byehux' name='citibike_st.csv' table='[citibike_st#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='string' name='station name' ordinal='0' />
              <column datatype='string' name='gender' ordinal='1' />
              <column datatype='integer' name='age' ordinal='2' />
              <column datatype='string' name='category' ordinal='3' />
              <column datatype='date' date-parse-format='MMMM' name='month' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.03sngfx1c8g68w1h2nqmi0byehux' name='expenses by age.csv' table='[expenses by age#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='it_IT' separator=';'>
              <column datatype='string' name='Item' ordinal='0' />
              <column datatype='string' name='Age range' ordinal='1' />
              <column datatype='real' name='Expense percentage' ordinal='2' />
            </columns>
          </relation>
          <relation connection='textscan.03sngfx1c8g68w1h2nqmi0byehux' name='station_location.csv' table='[station_location#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='it_IT' separator=','>
              <column datatype='string' name='station name' ordinal='0' />
              <column datatype='string' name='station latitude' ordinal='1' />
              <column datatype='string' name='station longitude' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Age range]' value='[expenses by age.csv].[Age range]' />
          <map key='[Expense percentage]' value='[expenses by age.csv].[Expense percentage]' />
          <map key='[Item]' value='[expenses by age.csv].[Item]' />
          <map key='[age]' value='[citibike_st.csv].[age]' />
          <map key='[category]' value='[citibike_st.csv].[category]' />
          <map key='[gender]' value='[citibike_st.csv].[gender]' />
          <map key='[month]' value='[citibike_st.csv].[month]' />
          <map key='[station latitude]' value='[station_location.csv].[station latitude]' />
          <map key='[station longitude]' value='[station_location.csv].[station longitude]' />
          <map key='[station name (station_location.csv)]' value='[station_location.csv].[station name]' />
          <map key='[station name]' value='[citibike_st.csv].[station name]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[citibike_st.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[expenses by age.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;it&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;it_IT&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[station_location.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;it&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;it_IT&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[station name]</local-name>
            <parent-name>[citibike_st.csv]</parent-name>
            <remote-alias>station name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[citibike_st.csv_5703AB65E32646C494960DF40F557829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[citibike_st.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[citibike_st.csv_5703AB65E32646C494960DF40F557829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age]</local-name>
            <parent-name>[citibike_st.csv]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[citibike_st.csv_5703AB65E32646C494960DF40F557829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[citibike_st.csv]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[citibike_st.csv_5703AB65E32646C494960DF40F557829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>7</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[citibike_st.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[citibike_st.csv_5703AB65E32646C494960DF40F557829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Item]</local-name>
            <parent-name>[expenses by age.csv]</parent-name>
            <remote-alias>Item</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[expenses by age.csv_9D1282295A4C468490F540FE47C0C193]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age range</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age range]</local-name>
            <parent-name>[expenses by age.csv]</parent-name>
            <remote-alias>Age range</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[expenses by age.csv_9D1282295A4C468490F540FE47C0C193]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Expense percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Expense percentage]</local-name>
            <parent-name>[expenses by age.csv]</parent-name>
            <remote-alias>Expense percentage</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[expenses by age.csv_9D1282295A4C468490F540FE47C0C193]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[station name (station_location.csv)]</local-name>
            <parent-name>[station_location.csv]</parent-name>
            <remote-alias>station name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[station_location.csv_A498EEFA3B3244268C24597722466E8C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[station latitude]</local-name>
            <parent-name>[station_location.csv]</parent-name>
            <remote-alias>station latitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[station_location.csv_A498EEFA3B3244268C24597722466E8C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[station longitude]</local-name>
            <parent-name>[station_location.csv]</parent-name>
            <remote-alias>station longitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[station_location.csv_A498EEFA3B3244268C24597722466E8C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' default-format='p0.00%' name='[Expense percentage]' role='measure' type='quantitative' />
      <column caption='Item1' datatype='string' name='[Item]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='citibike_st.csv' datatype='table' name='[__tableau_internal_object_id__].[citibike_st.csv_5703AB65E32646C494960DF40F557829]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='expenses by age.csv' datatype='table' name='[__tableau_internal_object_id__].[expenses by age.csv_9D1282295A4C468490F540FE47C0C193]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='station_location.csv' datatype='table' name='[__tableau_internal_object_id__].[station_location.csv_A498EEFA3B3244268C24597722466E8C]' role='measure' type='quantitative' />
      <column caption='age range' datatype='string' name='[category]' role='dimension' type='nominal' />
      <column datatype='string' name='[gender]' role='dimension' type='nominal' />
      <column datatype='date' datatype-customized='true' default-format='S' name='[month]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' datatype-customized='true' name='[station latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' datatype-customized='true' name='[station longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='string' name='[station name (station_location.csv)]' role='dimension' type='nominal' />
      <column datatype='string' name='[station name]' role='dimension' type='nominal' />
      <column-instance column='[category]' derivation='Attribute' name='[attr:category:nk]' pivot='key' type='nominal' />
      <column-instance column='[month]' derivation='Count' name='[cnt:month:qk]' pivot='key' type='quantitative' />
      <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
      <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
      <column-instance column='[station latitude]' derivation='None' name='[none:station latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[station longitude]' derivation='None' name='[none:station longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[station name (station_location.csv)]' derivation='None' name='[none:station name (station_location.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[station name]' derivation='None' name='[none:station name:nk]' pivot='key' type='nominal' />
      <column-instance column='[month]' derivation='Count' name='[pcto:cnt:month:qk:10]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[month]' derivation='Count' name='[pcto:cnt:month:qk:7]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[month]' derivation='Count' name='[pcto:cnt:month:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <group caption='Azione (category,station name)' hidden='true' name='[Action (category,station name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[category]' />
          <groupfilter function='level-members' level='[station name]' />
        </groupfilter>
      </group>
      <group caption='Azione (station name)' hidden='true' name='[Action (station name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[station name]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Esclusioni (station latitude,station longitude,station name (station_location.csv))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:station latitude:qk]' />
          <groupfilter function='level-members' level='[none:station longitude:qk]' />
          <groupfilter function='level-members' level='[none:station name (station_location.csv):nk]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='it_IT' class='hyper' dbname='D:/pr2/citibike_st+.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/24/2021 08:32:15 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='citibike_st.csv_5703AB65E32646C494960DF40F557829' table='[Extract].[citibike_st.csv_5703AB65E32646C494960DF40F557829]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='citibike_st.csv_5703AB65E32646C494960DF40F557829' table='[Extract].[citibike_st.csv_5703AB65E32646C494960DF40F557829]' type='table' />
            <relation name='expenses by age.csv_9D1282295A4C468490F540FE47C0C193' table='[Extract].[expenses by age.csv_9D1282295A4C468490F540FE47C0C193]' type='table' />
            <relation name='station_location.csv_A498EEFA3B3244268C24597722466E8C' table='[Extract].[station_location.csv_A498EEFA3B3244268C24597722466E8C]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[Age range]' value='[expenses by age.csv_9D1282295A4C468490F540FE47C0C193].[Age range]' />
            <map key='[Expense percentage]' value='[expenses by age.csv_9D1282295A4C468490F540FE47C0C193].[Expense percentage]' />
            <map key='[Item]' value='[expenses by age.csv_9D1282295A4C468490F540FE47C0C193].[Item]' />
            <map key='[age]' value='[citibike_st.csv_5703AB65E32646C494960DF40F557829].[age]' />
            <map key='[category]' value='[citibike_st.csv_5703AB65E32646C494960DF40F557829].[category]' />
            <map key='[gender]' value='[citibike_st.csv_5703AB65E32646C494960DF40F557829].[gender]' />
            <map key='[month]' value='[citibike_st.csv_5703AB65E32646C494960DF40F557829].[month]' />
            <map key='[station latitude]' value='[station_location.csv_A498EEFA3B3244268C24597722466E8C].[station latitude]' />
            <map key='[station longitude]' value='[station_location.csv_A498EEFA3B3244268C24597722466E8C].[station longitude]' />
            <map key='[station name (station_location.csv)]' value='[station_location.csv_A498EEFA3B3244268C24597722466E8C].[station name]' />
            <map key='[station name]' value='[citibike_st.csv_5703AB65E32646C494960DF40F557829].[station name]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='citibike_st+' increment-value='%null%' refresh-type='create' rows-inserted='41104455' timestamp-start='2021-08-24 20:32:15.968' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>station name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[station name]</local-name>
              <parent-name>[citibike_st.csv_5703AB65E32646C494960DF40F557829]</parent-name>
              <remote-alias>station name</remote-alias>
              <ordinal>0</ordinal>
              <family>citibike_st.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1129</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[citibike_st.csv_5703AB65E32646C494960DF40F557829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gender</remote-name>
              <remote-type>129</remote-type>
              <local-name>[gender]</local-name>
              <parent-name>[citibike_st.csv_5703AB65E32646C494960DF40F557829]</parent-name>
              <remote-alias>gender</remote-alias>
              <ordinal>1</ordinal>
              <family>citibike_st.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[citibike_st.csv_5703AB65E32646C494960DF40F557829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>age</remote-name>
              <remote-type>20</remote-type>
              <local-name>[age]</local-name>
              <parent-name>[citibike_st.csv_5703AB65E32646C494960DF40F557829]</parent-name>
              <remote-alias>age</remote-alias>
              <ordinal>2</ordinal>
              <family>citibike_st.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>95</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[citibike_st.csv_5703AB65E32646C494960DF40F557829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[category]</local-name>
              <parent-name>[citibike_st.csv_5703AB65E32646C494960DF40F557829]</parent-name>
              <remote-alias>category</remote-alias>
              <ordinal>3</ordinal>
              <family>citibike_st.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[citibike_st.csv_5703AB65E32646C494960DF40F557829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>133</remote-type>
              <local-name>[month]</local-name>
              <parent-name>[citibike_st.csv_5703AB65E32646C494960DF40F557829]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>4</ordinal>
              <family>citibike_st.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[citibike_st.csv_5703AB65E32646C494960DF40F557829]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Item</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Item]</local-name>
              <parent-name>[expenses by age.csv_9D1282295A4C468490F540FE47C0C193]</parent-name>
              <remote-alias>Item</remote-alias>
              <ordinal>5</ordinal>
              <family>expenses by age.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LIT_RIT' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[expenses by age.csv_9D1282295A4C468490F540FE47C0C193]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Age range</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Age range]</local-name>
              <parent-name>[expenses by age.csv_9D1282295A4C468490F540FE47C0C193]</parent-name>
              <remote-alias>Age range</remote-alias>
              <ordinal>6</ordinal>
              <family>expenses by age.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LIT_RIT' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[expenses by age.csv_9D1282295A4C468490F540FE47C0C193]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Expense percentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Expense percentage]</local-name>
              <parent-name>[expenses by age.csv_9D1282295A4C468490F540FE47C0C193]</parent-name>
              <remote-alias>Expense percentage</remote-alias>
              <ordinal>7</ordinal>
              <family>expenses by age.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>71</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[expenses by age.csv_9D1282295A4C468490F540FE47C0C193]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>station name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[station name (station_location.csv)]</local-name>
              <parent-name>[station_location.csv_A498EEFA3B3244268C24597722466E8C]</parent-name>
              <remote-alias>station name</remote-alias>
              <ordinal>8</ordinal>
              <family>station_location.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>977</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LIT_RIT' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[station_location.csv_A498EEFA3B3244268C24597722466E8C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>station latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[station latitude]</local-name>
              <parent-name>[station_location.csv_A498EEFA3B3244268C24597722466E8C]</parent-name>
              <remote-alias>station latitude</remote-alias>
              <ordinal>9</ordinal>
              <family>station_location.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>970</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[station_location.csv_A498EEFA3B3244268C24597722466E8C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>station longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[station longitude]</local-name>
              <parent-name>[station_location.csv_A498EEFA3B3244268C24597722466E8C]</parent-name>
              <remote-alias>station longitude</remote-alias>
              <ordinal>10</ordinal>
              <family>station_location.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>970</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[station_location.csv_A498EEFA3B3244268C24597722466E8C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;0-25&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;55-64&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;45-54&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;75+&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;35-44&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;65-74&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;25-34&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;65+&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:station name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;1 Ave &amp; E 110 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;10 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;11 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;28 Ave &amp; 44 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;3 St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;34 Ave &amp; 38 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;48 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;6 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Atlantic Ave &amp; Furman St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Berkeley Pl &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Broadway &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cadman Plaza E &amp; Tillary St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carroll St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Centre St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Columbia St &amp; Kane St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dean St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Division Ave &amp; Hooper St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Duffield St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 109 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 16 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 41 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 58 St &amp; 1 Ave (NE Corner)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 58 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 84 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Forsyth St &amp; Canal St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fulton St &amp; Waverly Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;George St &amp; Wilson Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Halsey St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Irving Ave &amp; Harman St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jackson St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Knickerbocker Ave &amp; Cooper St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lenox Ave &amp; W 111 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lispenard St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Metropolitan Ave &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myrtle Ave &amp; Grove St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;N 15 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Park Pl &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Perry St &amp; Greenwich Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prospect Pl &amp; Underhill Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;S 4 St &amp; Rodney St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St. Nicholas Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Union Ave &amp; Wallabout St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 15 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 31 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 52 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 90 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W Broadway &amp; W Houston St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Woodward Ave &amp; Harman St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1 Ave &amp; E 16 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1 Ave &amp; E 5 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;23 Ave &amp; 27 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;3 Ave &amp; E 71 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;31 St &amp; Astoria Blvd&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;40 Ave &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;5 Ave &amp; E 126 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;9 St &amp; 44 Rd&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Amsterdam Ave &amp; W 66 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bayard St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Broadway &amp; Moylan Pl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bushwick Ave &amp; Harman St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cadman Plaza E &amp; Red Cross Pl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Park S &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cliff St &amp; Fulton St (Old)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clinton St &amp; 4 Place&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Court St &amp; State St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Division Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 30 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 52 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 76 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 97 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East End Ave &amp; E 86 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Front St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grand St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grand St &amp; Greene St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hope St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jefferson Ave &amp; Evergreen Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lafayette Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lafayette St &amp; Jersey St S&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lexington Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marcus Garvey Blvd &amp; Macon St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Menahan St &amp; Wyckoff Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Murray St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Old Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pioneer St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Riverside Dr &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South St &amp; Whitehall St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Stanhope St &amp; Fairview Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sullivan Pl &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Van Vorst Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vernon Blvd &amp; 47 Rd&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 116 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 22 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 44 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 76 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Willoughby Ave &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;11 Ave &amp; W 27 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;27 Ave &amp; 4 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;3 Ave &amp; E 112 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;31 St &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;45 Rd &amp; 11 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;6 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Amsterdam Ave &amp; W 119 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bergen St &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Broadway &amp; W 32 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brooklyn Bridge Park - Pier 2&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bushwick Ave &amp; Stagg St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carlton Ave &amp; Dean St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Park West &amp; W 76 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Clinton St &amp; Union St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Crescent St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Driggs Ave &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 103 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 11 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 33 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 55 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 80 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 81 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Emerson Pl &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fulton St &amp; Clermont Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greene Ave &amp; Grandview Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greene Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Huron St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Irving Ave &amp; DeKalb Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LaGuardia Pl &amp; W 3 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lexington Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lexington Ave &amp; E 36 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madison St &amp; Forest Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;McKibbin St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morris Canal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Myrtle Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Park Ave &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pleasant Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rivington St &amp; Ridge St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Soissons Landing&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St Johns Pl &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Underhill Ave &amp; Lincoln Pl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 26 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 4 St &amp; 7 Ave S&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 42 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 47 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 84 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Warren St &amp; Court St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wilson Ave &amp; Moffat St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wyckoff St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;14 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;2 Ave &amp; E 31 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;30 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;35 St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;5 Ave &amp; 3 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;6 Ave &amp; W 34 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;7 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 118 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Avenue D &amp; E 12 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bond St &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broadway &amp; W 56 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carroll St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Ave &amp; Decatur St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clark St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Columbus Ave &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cypress Ave &amp; George St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Degraw St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 115 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 2 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 20 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 45 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 66 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 88 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Evergreen Ave &amp; Noll St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Franklin St &amp; Dupont St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Graham Ave &amp; Conselyea St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Handlebar @ Gowanus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Harrison St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jersey &amp; 3rd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Johnson St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Knickerbocker Ave &amp; Thames St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lenox Ave &amp; W 130 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MacDougal St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Monroe St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Newport PATH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Newton Rd &amp; 44 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Perry St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Picnic Point&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Queens Plaza North &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Schermerhorn St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stanton St &amp; Norfolk St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stuyvesant Walk &amp; 1 Av Loop&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;University Pl &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 100 St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 16 St &amp; The High Line&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 37 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 55 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Watts St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wyckoff St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1 Pl &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;12 Ave &amp; W 40 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;28 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;3 St &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;34 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;48 Ave &amp; 30 Pl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;6 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Avenue C &amp; E 18 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Berry St &amp; N 8 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broadway &amp; W 49 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bushwick Ave &amp; Dekalb Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carroll St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Centre St &amp; Seneca Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Centre St &amp; Worth St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Columbia St &amp; Lorraine St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dean St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dwight St &amp; Van Dyke St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 110 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 16 St &amp; Irving Pl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 43 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 58 St &amp;  1 Ave (NW Corner)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 59 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 84 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eldert St &amp; Bushwick Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Franklin Ave &amp; Empire Blvd&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fulton St &amp; William St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gold St &amp; Frankfort St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hancock St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Irving Ave &amp; Jefferson St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jay St &amp; Tech Pl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Knickerbocker Ave &amp; George St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lenox Ave &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Little West St &amp; 1 Pl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Metropolitan Ave &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Moffat St &amp; Bushwick&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nassau Ave &amp; Newell St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pearl St &amp; Anchorage Pl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pershing Field&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pulaski St &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;S 4 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stagg St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Union St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 15 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 33 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 45 St &amp; 6 Ave -&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 52 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 92 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Washington Pl &amp; Broadway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wyckoff Av &amp; Jefferson St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1 Ave &amp; E 68 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;11 Ave &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;27 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;3 Ave &amp; Schermerhorn St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;31 St &amp; Thomson Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;46 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;6 Ave &amp; 12 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Amsterdam Ave &amp; W 125 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bergen St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Broadway &amp; W 36 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brunswick St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carlton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central Park West &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central Park West &amp; W 85 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Coffey St &amp; Conover St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Crescent St &amp; Ditmars Blvd&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Devoe St &amp; Morgan Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Driggs Ave &amp; N 9 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 106 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 11 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 35 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 55 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 81 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FDR Drive &amp; E 35 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fulton St &amp; Grand Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greenpoint Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grove St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hart St &amp; Wyckoff Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;India St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kent St &amp; McGuinness Blvd&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Laight St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lexington Ave &amp; E 127 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marin Light Rail&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mercer St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;N 6 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Newark Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norman St &amp; Wyckoff Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Park Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;President St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Roebling St &amp; N 4 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St Marks Pl &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Underhill Ave &amp; Pacific St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 11 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 26 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 49 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 87 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 87 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington Ave &amp; Greene Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wilson Ave &amp; Troutman St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wyckoff St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;21 St &amp; Hoyt Ave S&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;3 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;31 St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;39 St &amp; 2 Ave - Citi Bike HQ at Industry City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;5 Ave &amp; E 93 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;9 Ave &amp; W 28 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Allen St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barrow St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broadway &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broadway &amp; Hancock St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Butler St &amp; Court St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Center Blvd &amp; 51 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central Ave &amp; Woodbine St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Clinton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Columbus Drive&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cooper Square &amp; Astor Pl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ditmars Blvd &amp; 19 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 123 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 25 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 51 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 7 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 74 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 93 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Forest Ave &amp; Summerfield St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Front St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grand Ave &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hancock St &amp; Wyckoff Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Henry St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jersey &amp; 6th St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kosciuszko St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lewis Ave &amp; Kosciuszko St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madison St &amp; Montgomery St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Menahan St &amp; Onderdonk Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mott St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NYCBS Depot - GOW&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pike St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Riverside Dr &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South End Ave &amp; Liberty St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Stephen St &amp; Seneca Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sterling St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suydam St &amp; St. Nicholas Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vernon Blvd &amp; 31 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 113 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 20 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 43 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 70 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;William St &amp; Pine St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Willoughby Ave &amp; Onderdonk Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1 Ave &amp; E 18 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;10 Hudson Yards&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;24 Ave &amp; 26 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;3 Ave &amp; Carroll St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;3 Ave &amp; E 72 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;31 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;43 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amsterdam Ave &amp; W 73 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bedford Ave &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broadway &amp; Roebling St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bushwick Ave &amp; Linden St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cadman Plaza West &amp; Montague St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Park W &amp; W 96 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clinton St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Crescent St &amp; 30 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Division St &amp; Bowery&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 10 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 12 St &amp; 4 Av&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 31 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 53 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 77 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 98 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eastern Pkwy &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Frost St &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fulton St &amp; Irving Pl&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grand St &amp; Havemeyer St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Howard St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jefferson St &amp; Cypress Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Journal Square&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lafayette Ave &amp; St James Pl&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lexington Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marcy Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montgomery St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Murray St &amp; West St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pacific St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pitt St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Riverside Dr &amp; W 91 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sip Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Spruce St &amp; Nassau St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sullivan St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vernon Blvd &amp; 50 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 120 St &amp; Claremont Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 17 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 22 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 45 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 78 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Willoughby Ave &amp; Walworth St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Willoughby Ave &amp; Wyckoff Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2 Ave &amp; E 104 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;21 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;31 Ave &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;37 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;5 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;8 Ave &amp; W 52 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Albany Ave &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Banker St &amp; Meserole Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broadway &amp; Battery Pl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broadway &amp; Furman Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bus Slip &amp; State St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Catherine St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central Ave &amp; Starr Street&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cleveland Pl &amp; Spring St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Concord St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 118 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 24 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 48 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 53 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 6 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 72 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 91 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 117 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Frost St &amp; Debevoise Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grand Army Plaza &amp; Central Park S&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hamilton Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Henry St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kingston Ave &amp; Herkimer St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Leonard St &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madison Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madison St &amp; Woodward Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Melrose St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morningside Ave &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nostrand Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pierrepont St &amp; Monroe Pl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Richardson St &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;S Portland Ave &amp; Atlantic Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Smith St &amp; 3 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sterling Pl &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Suydam St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vernon Blvd &amp; 10 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 107 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 20 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 42 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 64 St &amp; Thelonious Monk Circle&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;West St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;York St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;10 Ave &amp; W 28 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;11 Ave &amp; W 59 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;27 St &amp; Hunter St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;3 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;34 Ave &amp; 13 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;47 Ave &amp; 31 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;6 Ave &amp; Broome St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;6 Ave &amp; Canal St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Astoria Park S &amp; Shore Blvd&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bergen St &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Broadway &amp; W 37 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carlton Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cedar St &amp; Evergreen Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central Park West &amp; W 100 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Columbia Heights &amp; Cranberry St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Crown St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Driggs Ave &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 106 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 13 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 39 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 58 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 81 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 95 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Flushing Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fulton St &amp; Rockwell Pl&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenwich Ave &amp; Charles St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grove St PATH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Heights Elevator&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;India St &amp; West St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kingsland Ave &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lawrence St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liberty St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mercer St &amp; Spring St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Metropolitan Ave &amp; Stewart Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;N 11 St &amp; Kent Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Park Pl &amp; Church St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prospect Park West &amp; 8 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rogers Ave &amp; Sterling St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Somers St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St Marks Pl &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Union Ave &amp; Jackson St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Union St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 12 St &amp; W 4 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 27 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 50 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 88 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Washington Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waterbury St &amp; Stagg St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wythe Ave &amp; Metropolitan Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;19 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2 Ave &amp; E 72 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;27 Ave &amp; 3 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;31 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;35 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;5 Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;7 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Baltic St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bond St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broadway &amp; W 60 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carroll St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Classon Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbus Ave &amp; W 95 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cypress Ave &amp; Palmetto St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DeKalb Ave &amp; Hudson Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 116 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 2 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 20 St &amp; FDR Drive&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 47 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 67 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 88 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Exchange Place&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Franklin St &amp; W Broadway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Graham Ave &amp; Grand St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Henry St &amp; Atlantic Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;JC Medical Center&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kane St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leonard St &amp; Boerum St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Linden St &amp; Knickerbocker Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Macon St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monroe St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Newport Pkwy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Newtown Ave &amp; 23 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Onderdonk Ave &amp; Dekalb Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paulus Hook&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pershing Square North&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Railroad Ave &amp; Kay Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Schermerhorn St &amp; Court St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;State St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;University Pl &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;University Pl &amp; E 14 St (old)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 104 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 17 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 37 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 56 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Drive &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;White St &amp; Johnson Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2 Ave &amp; E 96 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;21 St &amp; 31 Dr&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;31 Ave &amp; 30 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;36 Ave &amp; 10 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;5 Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;8 Ave &amp; W 31 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bank St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Beaver St &amp; Fayette St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Broad St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Broadway &amp; W 122 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Carroll St &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Ave &amp; Himrod St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clermont Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus Ave &amp; W 103 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DeKalb Ave &amp; S Portland Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dock 72 Way &amp; Market St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 118 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 20 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 4 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 47 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 68 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 89 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fairview Ave &amp; Linden St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 112 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Graham Ave &amp; Herbert St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Halsey St &amp; Evergreen Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Henry St &amp; Bay St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kent Ave &amp; N 7 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Leonard St &amp; Church St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lorimer St &amp; Calyer St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Madison Ave &amp; E 82 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;McKibbin St &amp; Bogart St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montgomery St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norfolk St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Onderdonk Ave &amp; Gates Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pershing Square South&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Reade St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Riverview Park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Scholes St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Steinway St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Van Brunt St &amp; Van Dyke St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 106 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 18 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 38 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 47 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 59 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West End Ave &amp; W 94 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;White St &amp; Moore St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;12 Ave &amp; W 125 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;2 Ave &amp; E 122 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;21 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;31 Ave &amp; Steinway St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;37 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;5 Ave &amp; E 88 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;9 Ave &amp; W 22 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Allen St &amp; Hester St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barclay St &amp; Church St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broadway &amp; Berry St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bushwick Ave &amp; Powers St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Center Blvd &amp; 48 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central Ave &amp; Weirfield St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cliff St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Congress St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Devoe St &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 118 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 25 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 48 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 6 St &amp; Avenue D&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 71 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 72 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 91 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Flushing Ave &amp; Woodward Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 129 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grand Army Plaza &amp; Plaza St West&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Henry St &amp; Poplar St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hoboken Ave at Monmouth St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kosciuszko St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lewis Ave &amp; Decatur St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Madison St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manhattan Av &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Menahan St &amp; Central Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morningside Dr &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NYCBS DEPOT - DELANCEY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pike St &amp; E Broadway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Riverside Blvd &amp; W 67 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Smith St &amp; 9 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stagg St &amp; Morgan Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sterling Pl &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suydam St &amp; Knickerbocker Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vernon Blvd &amp; 30 Rd&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 110 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 20 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 42 St &amp; Dyer Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 67 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;West Thames St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Willoughby Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;21 St &amp; Queens Plaza North&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;3 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;31 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;40 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;5 Ave &amp; E 103 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;9 Ave &amp; W 45 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Allen St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bayard St &amp; Baxter St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broadway &amp; E 22 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broadway &amp; Kosciuszko St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bushwick Ave &amp; Furman Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cadman Plaza E &amp; Johnson St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clinton Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Court St &amp; Nelson St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DeKalb Ave &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Division Av &amp; Hooper St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 128 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 27 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 51 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 75 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 9 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 97 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Front St &amp; Maiden Ln&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Frost St &amp; Meeker St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grand St &amp; Elizabeth St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hicks St &amp; Montague St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JCBS Depot&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lafayette Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lewis Ave &amp; Madison St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maiden Ln &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Manila &amp; 1st&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Menahan St &amp; Seneca Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mt Morris Park W &amp; W 120 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Old Fulton St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pioneer St &amp; Richards St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Riverside Dr &amp; W 78 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sharon St &amp; Olive St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South St &amp; Gouverneur Ln&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suffolk St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Van Sinderen Ave &amp; Truxton St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vernon Blvd &amp; 41 Rd&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 116 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 21 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 43 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 74 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Willoughby Ave &amp; Hall St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;12 St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;28 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;35 Ave &amp; 10 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;4 Ave &amp; 2 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;49 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;7 Ave &amp; Central Park South&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Avenue D &amp; E 3 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Battery Pl &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bialystoker Pl &amp; Delancey St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway &amp; W 51 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Calyer St &amp; Jewel St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carroll St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cherry St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Columbia St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dean St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 114 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 17 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 2 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 43 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 60 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 63 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 84 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 85 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Franklin Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gansevoort St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greenwich Ave &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hanson Pl &amp; Ashland Pl&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Irving Ave &amp; Palmetto St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jay St &amp; York St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Knickerbocker Ave &amp; Halsey St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lenox Ave &amp; W 117 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lorimer St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Milton St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Monmouth and 6th&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nassau Ave &amp; Russell St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NYCBS Depot BAL - DYR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pearl St &amp; Hanover Square&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Putnam Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;S 5 Pl &amp; S 5 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stanton St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Union St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 15 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 34 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 53 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 95 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Warren St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Washington St &amp; Gansevoort St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wyckoff Av &amp; Stanhope St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1 Ave &amp; E 94 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;11 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;28 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;3 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;34 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;38 Ave &amp; 29 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;47 Ave &amp; Skillman Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;6 Ave &amp; Spring St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Atlantic Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Berkeley Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Broadway &amp; W 38 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carmine St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cedar St &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central Park West &amp; W 102 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Columbia St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cumberland St &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Duane St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 106 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 12 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 15 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 39 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 58 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 82 St &amp; East End Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Engert Ave &amp; McGuinness Blvd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Forsyth St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fulton St &amp; Utica Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenwich St &amp; W Houston St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Halsey St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Irving Ave &amp; Halsey St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jackson Ave &amp; 46 Rd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lefferts Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Liberty Light Rail&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lincoln Pl &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Meserole Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Metropolitan Ave &amp; Vandervoort Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;N 12 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Park Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prospect Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rockaway Ave &amp; Bainbridge St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;S 3 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St Nicholas Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Union Ave &amp; N 12 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 13 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 27 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 52 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 89 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W Broadway &amp; Spring St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washington Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Withers St &amp; Kingsland Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1 Ave &amp; E 30 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;24 Ave &amp; 29 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;3 Ave &amp; E 95 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;31 St &amp; Hoyt Ave N&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;44 Dr &amp; 21 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;5 St &amp; 51 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;9 Ave &amp; W 18 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Amsterdam Ave &amp; W 79 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bedford Ave &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Broadway &amp; W 25 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bushwick Ave &amp; McKibbin St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cambridge Pl &amp; Gates Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Park West &amp; W 68 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clinton St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Crescent St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Douglass St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 102 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 11 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 32 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 53 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 56 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 78 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eastern Pkwy &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fulton St &amp; Adams St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Great Jones St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Green St &amp; McGuinness Blvd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Harman St &amp; Seneca Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hudson St &amp; Reade St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lafayette St &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lexington Ave &amp; E 26 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lexington Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Madison St &amp; Cypress Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Market St &amp; Cherry St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morgan Ave &amp; Lombardy St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myrtle Ave &amp; Lewis Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pacific St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Plaza St West &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Riverside Dr &amp; W 104 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St James Pl &amp; Oliver St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stewart Ave &amp; Johnson Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Throop Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Verona Pl &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 129 St &amp; Convent Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 24 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 39 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 45 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 82 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Willoughby St &amp; Fleet St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2 Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;21 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;31 Ave &amp; 34 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;36 Ave &amp; 31 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;5 Ave &amp; E 73 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;8 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Adelphi St &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bank St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bedford Ave &amp; Montgomery St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Broadway &amp; 12 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Broadway &amp; Whipple St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cathedral Pkwy &amp; Broadway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central Ave &amp; Melrose St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clermont Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Commerce St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DeKalb Ave &amp; Skillman St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 118 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 23 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 47 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 5 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 51 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 68 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 89 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Front St &amp; Jay St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Graham Ave &amp; Withers St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Henry St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hilltop&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kent Ave &amp; S 11 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Leonard St &amp; Maujer St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madison Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madison St &amp; Seneca Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montague St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montrose Ave &amp; Bushwick Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Moore St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pier 40 - Hudson River Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Putnam Ave &amp; Wyckoff Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Richards St &amp; Delavan St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sigourney St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Steinway St &amp; 28 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Van Brunt St &amp; Wolcott St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Van Buren St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 106 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 13 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 18 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 41 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 63 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West End Ave &amp; W 107 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yankee Ferry Terminal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;14 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2 Ave &amp; 36 St - Citi Bike HQ at Industry City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;28 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;35 Ave &amp; 37 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;4 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;58th St Depot&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;7 Ave &amp; Park Pl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Avenue D &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Boerum St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broadway &amp; W 53 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bushwick Ave &amp; Forrest St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carroll St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central Ave &amp; Covert St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Christopher St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Columbia St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Degraw St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Division St &amp; Bowery (old)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 115 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 19 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 2 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 44 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 65 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 85 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Essex Light Rail&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Franklin Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Garfield Pl &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Harborside&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Henry St &amp; Middagh St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;John St &amp; William St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Knickerbocker Ave &amp; Hancock St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lenox Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MacDougal St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monroe St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myrtle Ave &amp; Linden St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nassau St &amp; Navy St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peck Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Putnam Ave &amp; Knickerbocker Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Putnam Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;S Portland Ave &amp; Hanson Pl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stanton St &amp; Mangin St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stockholm St &amp; Wilson Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Union St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 100 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 16 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 35 St &amp; Dyer Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 54 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Water - Whitehall Plaza&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1 Ave &amp; E 44 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;10 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;24 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;3 Ave &amp; E 100 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;31 St &amp; Newtown Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;44 Dr &amp; Jackson Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;5 St &amp; Market St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Amsterdam Ave &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bedford Ave &amp; S 9 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Broadway &amp; Madison St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Broadway &amp; W 29 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canal St &amp; Rutgers St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central Park West &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;City Hall&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clinton St &amp; Joralemon St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Crescent St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Douglass St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 102 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 11 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 33 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 55 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 56 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 81 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eckford St &amp; Engert Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fulton St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greene Av &amp; Myrtle Av&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greene Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Harrison Pl &amp; Porter Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Humboldt St &amp; Varet St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lafayette St &amp; Jersey St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lexington Ave &amp; E 111 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madison St &amp; Evergreen Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;McGuinness Blvd &amp; Eagle St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Morgan Ave &amp; Maspeth Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Myrtle Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Park Ave &amp; E 124 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pleasant Ave &amp; E 116 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Powers St &amp; Olive St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rivington St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St James Pl &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tompkins Ave &amp; Hopkins St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vesey Pl &amp; River Terrace&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 25 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 40 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 46 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 84 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W Broadway &amp; Spring Street&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Washington St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wolcott St &amp; Dwight St&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0anjuk313x263d1chian6129x2c7].[pcto:cnt:month:qk:7]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0anjuk313x263d1chian6129x2c7].[pcto:cnt:month:qk:10]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0anjuk313x263d1chian6129x2c7].[pcto:cnt:month:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;0-25&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;55-64&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;45-54&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;0-24&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;75+&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;35-44&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;65-74&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;25-34&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;65+&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:gender:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Italy&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='citibike_st.csv' id='citibike_st.csv_5703AB65E32646C494960DF40F557829'>
            <properties context=''>
              <relation connection='textscan.03sngfx1c8g68w1h2nqmi0byehux' name='citibike_st.csv' table='[citibike_st#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='string' name='station name' ordinal='0' />
                  <column datatype='string' name='gender' ordinal='1' />
                  <column datatype='integer' name='age' ordinal='2' />
                  <column datatype='string' name='category' ordinal='3' />
                  <column datatype='date' date-parse-format='MMMM' name='month' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='citibike_st.csv_5703AB65E32646C494960DF40F557829' table='[Extract].[citibike_st.csv_5703AB65E32646C494960DF40F557829]' type='table' />
            </properties>
          </object>
          <object caption='expenses by age.csv' id='expenses by age.csv_9D1282295A4C468490F540FE47C0C193'>
            <properties context=''>
              <relation connection='textscan.03sngfx1c8g68w1h2nqmi0byehux' name='expenses by age.csv' table='[expenses by age#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='it_IT' separator=';'>
                  <column datatype='string' name='Item' ordinal='0' />
                  <column datatype='string' name='Age range' ordinal='1' />
                  <column datatype='real' name='Expense percentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='expenses by age.csv_9D1282295A4C468490F540FE47C0C193' table='[Extract].[expenses by age.csv_9D1282295A4C468490F540FE47C0C193]' type='table' />
            </properties>
          </object>
          <object caption='station_location.csv' id='station_location.csv_A498EEFA3B3244268C24597722466E8C'>
            <properties context=''>
              <relation connection='textscan.03sngfx1c8g68w1h2nqmi0byehux' name='station_location.csv' table='[station_location#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='it_IT' separator=','>
                  <column datatype='string' name='station name' ordinal='0' />
                  <column datatype='string' name='station latitude' ordinal='1' />
                  <column datatype='string' name='station longitude' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='station_location.csv_A498EEFA3B3244268C24597722466E8C' table='[Extract].[station_location.csv_A498EEFA3B3244268C24597722466E8C]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[category]' />
              <expression op='[Age range]' />
            </expression>
            <first-end-point object-id='citibike_st.csv_5703AB65E32646C494960DF40F557829' />
            <second-end-point object-id='expenses by age.csv_9D1282295A4C468490F540FE47C0C193' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[station name]' />
              <expression op='[station name (station_location.csv)]' />
            </expression>
            <first-end-point object-id='citibike_st.csv_5703AB65E32646C494960DF40F557829' />
            <second-end-point object-id='station_location.csv_A498EEFA3B3244268C24597722466E8C' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Evidenzia 1 (generato)' name='[Action1_A973D5E720784C7ABF0E4E2A40CE6347]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='MONTHLY' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='MONTHLY' />
      </command>
    </action>
    <action caption='Evidenzia 1 (generato) 1' name='[Action3_96AAEE3097AD46F0A1F5A68F2A8AF34F]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='QUARTER' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='QUARTER' />
      </command>
    </action>
    <action caption='Evidenzia 1 (generato) 1 1' name='[Action5_75417A7EF9F34DE4B2B810B9215950AB]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='ANNUAL' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='ANNUAL' />
      </command>
    </action>
    <action caption='Filtra 2 (generato)' name='[Action6_4C0E576C42544F3C8958A5FDDE63110B]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='MONTH ANALYSIS' type='sheet' worksheet='MONTHLY' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='MONTH ANALYSIS' />
      </command>
    </action>
    <action caption='Filtra 1 (generato)' name='[Action6_57CA8299F95B4E4E8F0EAB7064FCACF8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='QUARTER ANALYSIS' type='sheet' worksheet='QUARTER' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='QUARTER ANALYSIS' />
      </command>
    </action>
    <action caption='Filtra 3 (generato)' name='[Action6_6D821D0B1AAA4BDE848A1FC9349AC4C6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='ANNUAL ANALYSIS' type='sheet' worksheet='ANNUAL' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='ANNUAL ANALYSIS' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='ANNUAL'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of riders and frequency per year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='citibike_st+' name='federated.0anjuk313x263d1chian6129x2c7' />
          </datasources>
          <datasource-dependencies datasource='federated.0anjuk313x263d1chian6129x2c7'>
            <column datatype='integer' name='[age]' role='measure' type='quantitative' />
            <column-instance column='[age]' derivation='Avg' name='[avg:age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[month]' derivation='Count' name='[cnt:month:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column datatype='date' datatype-customized='true' default-format='S' name='[month]' role='dimension' type='ordinal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[station name]' derivation='None' name='[none:station name:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[station name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' filter-group='9' included-values='in-range'>
            <min>35.0</min>
            <max>44.0</max>
          </filter>
          <filter class='quantitative' column='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' filter-group='6' included-values='in-range'>
            <min>1</min>
            <max>312111</max>
          </filter>
          <filter class='categorical' column='[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:gender:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0anjuk313x263d1chian6129x2c7].[none:station name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:station name:nk]' />
              <groupfilter function='member' level='[none:station name:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0anjuk313x263d1chian6129x2c7].[none:station name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[none:station name:nk]</column>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]</column>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]</column>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' scope='cols' value='Number of riders' />
            <format attr='stroke-size' value='0' />
            <format attr='tick-color' value='#00000000' />
            <format attr='tick-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' palette='red_green_diverging_10_0' type='interpolated' />
            <encoding attr='size-bar' field='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]' value='Gender' />
            <format attr='title' field='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' value='Number of riders' />
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <tooltip column='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>Number of riders</run>
                <run fontcolor='#787878'>: &#9;</run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[Average age:	<[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='size' value='1.6811602115631104' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' />
              <text column='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' />
              <tooltip column='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='size' value='1.6811602115631104' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' />
              <text column='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' />
              <tooltip column='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='size' value='1.6811602115631104' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0anjuk313x263d1chian6129x2c7].[none:station name:nk]</rows>
        <cols>([federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk] + [federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk])</cols>
      </table>
      <simple-id uuid='{5264B97A-57DA-42FB-AE30-84E5E7430CE7}' />
    </worksheet>
    <worksheet name='Annual percentage of riders per age range and gender'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='citibike_st+' name='federated.0anjuk313x263d1chian6129x2c7' />
          </datasources>
          <datasource-dependencies datasource='federated.0anjuk313x263d1chian6129x2c7'>
            <column caption='age range' datatype='string' name='[category]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column datatype='date' datatype-customized='true' default-format='S' name='[month]' role='dimension' type='ordinal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='Count' name='[pcto:cnt:month:qk:6]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' type='PctTotal' />
            </column-instance>
            <column-instance column='[month]' derivation='Count' name='[pcto:cnt:month:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0anjuk313x263d1chian6129x2c7].[pcto:cnt:month:qk]' scope='rows' value='Percentage of riders' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0anjuk313x263d1chian6129x2c7].[pcto:cnt:month:qk:6]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-size' data-class='subtotal' field='[federated.0anjuk313x263d1chian6129x2c7].[none:category:nk]' value='9' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='background-color' value='#00000000' />
            <format attr='font-family' value='Benton Sans SemiDemi' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0anjuk313x263d1chian6129x2c7].[none:category:nk]' value='true' />
            <format attr='font-size' field='[federated.0anjuk313x263d1chian6129x2c7].[none:category:nk]' value='12' />
            <format attr='font-weight' field='[federated.0anjuk313x263d1chian6129x2c7].[none:category:nk]' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0anjuk313x263d1chian6129x2c7].[pcto:cnt:month:qk:6]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='size-bar' field='[federated.0anjuk313x263d1chian6129x2c7].[pcto:cnt:month:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.0anjuk313x263d1chian6129x2c7].[pcto:cnt:month:qk:6]' value='14' />
            <format attr='font-size' field='[federated.0anjuk313x263d1chian6129x2c7].[pcto:cnt:month:qk]' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]' />
              <text column='[federated.0anjuk313x263d1chian6129x2c7].[pcto:cnt:month:qk:6]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='false' y-axis='true' />
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0anjuk313x263d1chian6129x2c7].[pcto:cnt:month:qk:6]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0anjuk313x263d1chian6129x2c7].[pcto:cnt:month:qk]</rows>
        <cols>[federated.0anjuk313x263d1chian6129x2c7].[none:category:nk]</cols>
      </table>
      <simple-id uuid='{EF0EF4E3-0AF5-4311-B934-FD4E39A0A82C}' />
    </worksheet>
    <worksheet name='MONTHLY'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of riders and frequency per month</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='citibike_st+' name='federated.0anjuk313x263d1chian6129x2c7' />
          </datasources>
          <datasource-dependencies datasource='federated.0anjuk313x263d1chian6129x2c7'>
            <column datatype='integer' name='[age]' role='measure' type='quantitative' />
            <column-instance column='[age]' derivation='Avg' name='[avg:age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[month]' derivation='Count' name='[cnt:month:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column-instance column='[month]' derivation='Month' name='[mn:month:ok]' pivot='key' type='ordinal' />
            <column datatype='date' datatype-customized='true' default-format='S' name='[month]' role='dimension' type='ordinal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[station name]' derivation='None' name='[none:station name:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[station name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' filter-group='9' included-values='in-range'>
            <min>35.0</min>
            <max>44.0</max>
          </filter>
          <filter class='quantitative' column='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' filter-group='4' included-values='in-range'>
            <min>0</min>
            <max>100000</max>
          </filter>
          <filter class='categorical' column='[federated.0anjuk313x263d1chian6129x2c7].[mn:month:ok]' filter-group='8'>
            <groupfilter function='member' level='[mn:month:ok]' member='8' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:gender:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0anjuk313x263d1chian6129x2c7].[none:station name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:station name:nk]' />
              <groupfilter function='member' level='[none:station name:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0anjuk313x263d1chian6129x2c7].[none:station name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[none:station name:nk]</column>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]</column>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[mn:month:ok]</column>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]</column>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' scope='cols' value='Number of riders' />
            <format attr='stroke-size' value='0' />
            <format attr='tick-color' value='#00000000' />
            <format attr='tick-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' palette='red_green_diverging_10_0' type='interpolated' />
            <encoding attr='size-bar' field='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]' value='Gender' />
            <format attr='title' field='[federated.0anjuk313x263d1chian6129x2c7].[mn:month:ok]' value='Month' />
            <format attr='title' field='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' value='Number of riders' />
            <format attr='font-size' value='9' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <tooltip column='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>Number of riders</run>
                <run fontcolor='#787878'>: &#9;</run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[Average age:	<[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='size' value='1.6811602115631104' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' />
              <text column='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' />
              <tooltip column='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='size' value='1.6811602115631104' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' />
              <text column='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' />
              <tooltip column='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='size' value='1.6811602115631104' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0anjuk313x263d1chian6129x2c7].[none:station name:nk]</rows>
        <cols>([federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk] + [federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk])</cols>
      </table>
      <simple-id uuid='{6469ADD8-EF66-4D40-9ED3-414D8FA5A7BB}' />
    </worksheet>
    <worksheet name='NYC citizen average expenses per category'>
      <table>
        <view>
          <datasources>
            <datasource caption='citibike_st+' name='federated.0anjuk313x263d1chian6129x2c7' />
          </datasources>
          <datasource-dependencies datasource='federated.0anjuk313x263d1chian6129x2c7'>
            <column datatype='real' default-format='p0.00%' name='[Expense percentage]' role='measure' type='quantitative' />
            <column caption='Item1' datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column-instance column='[Expense percentage]' derivation='Avg' name='[avg:Expense percentage:qk]' pivot='key' type='quantitative' />
            <column caption='age range' datatype='string' name='[category]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[station name]' role='dimension' type='nominal' />
            <column-instance column='[Expense percentage]' derivation='Sum' name='[sum:Expense percentage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0anjuk313x263d1chian6129x2c7].[Action (station name)]'>
            <groupfilter function='level-members' level='[station name]' user:ui-action-filter='[Action2_75D82F02E4A5437DB9DEA5C61196A535]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0anjuk313x263d1chian6129x2c7].[none:category:nk]'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;35-44&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:gender:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0anjuk313x263d1chian6129x2c7].[none:Item:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0anjuk313x263d1chian6129x2c7].[sum:Expense percentage:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]</column>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[none:category:nk]</column>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[Action (station name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0anjuk313x263d1chian6129x2c7].[avg:Expense percentage:qk]' scope='cols' value='false' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0anjuk313x263d1chian6129x2c7].[avg:Expense percentage:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0anjuk313x263d1chian6129x2c7].[none:Item:nk]' value='272' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0anjuk313x263d1chian6129x2c7].[avg:Expense percentage:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0anjuk313x263d1chian6129x2c7].[none:Item:nk]</rows>
        <cols>[federated.0anjuk313x263d1chian6129x2c7].[avg:Expense percentage:qk]</cols>
      </table>
      <simple-id uuid='{67FAB5B7-F4A7-4F5B-88DC-686E88F2CA8E}' />
    </worksheet>
    <worksheet name='Number of riders per age range - January 2019'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
            <run>Æ&#10;</run>
            <run bold='true'>Station: </run>
            <run><![CDATA[<[federated.0anjuk313x263d1chian6129x2c7].[none:station name:nk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='citibike_st+' name='federated.0anjuk313x263d1chian6129x2c7' />
          </datasources>
          <datasource-dependencies datasource='federated.0anjuk313x263d1chian6129x2c7'>
            <column caption='age range' datatype='string' name='[category]' role='dimension' type='nominal' />
            <column-instance column='[month]' derivation='Count' name='[cnt:month:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column datatype='date' datatype-customized='true' default-format='S' name='[month]' role='dimension' type='ordinal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[station name]' derivation='None' name='[none:station name:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[station name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:gender:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0anjuk313x263d1chian6129x2c7].[none:station name:nk]'>
            <groupfilter function='member' level='[none:station name:nk]' member='&quot;Pershing Square North&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[none:station name:nk]</column>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-family' field='[federated.0anjuk313x263d1chian6129x2c7].[none:category:nk]' value='Benton Sans SemiDemi' />
            <format attr='font-size' field='[federated.0anjuk313x263d1chian6129x2c7].[none:category:nk]' value='12' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' />
              <text column='[federated.0anjuk313x263d1chian6129x2c7].[none:category:nk]' />
              <color column='[federated.0anjuk313x263d1chian6129x2c7].[none:category:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14'>Number of riders:&#9; </run>
                <run bold='true' fontsize='14'><![CDATA[<[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{36E24319-283E-428B-8CF1-C675241C9393}' />
    </worksheet>
    <worksheet name='QUARTER'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of riders and frequency per quarter</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='citibike_st+' name='federated.0anjuk313x263d1chian6129x2c7' />
          </datasources>
          <datasource-dependencies datasource='federated.0anjuk313x263d1chian6129x2c7'>
            <column datatype='integer' name='[age]' role='measure' type='quantitative' />
            <column-instance column='[age]' derivation='Avg' name='[avg:age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[month]' derivation='Count' name='[cnt:month:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column-instance column='[month]' derivation='Month' name='[mn:month:ok]' pivot='key' type='ordinal' />
            <column datatype='date' datatype-customized='true' default-format='S' name='[month]' role='dimension' type='ordinal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[station name]' derivation='None' name='[none:station name:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='Quarter' name='[qr:month:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[station name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' filter-group='9' included-values='in-range'>
            <min>35.0</min>
            <max>44.0</max>
          </filter>
          <filter class='quantitative' column='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' filter-group='5' included-values='in-range'>
            <min>40000</min>
            <max>100000</max>
          </filter>
          <filter class='categorical' column='[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:gender:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0anjuk313x263d1chian6129x2c7].[none:station name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:station name:nk]' />
              <groupfilter function='member' level='[none:station name:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0anjuk313x263d1chian6129x2c7].[qr:month:ok]' filter-group='3'>
            <groupfilter function='member' level='[qr:month:ok]' member='3' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0anjuk313x263d1chian6129x2c7].[none:station name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[none:station name:nk]</column>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]</column>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[qr:month:ok]</column>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]</column>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' scope='cols' value='Number of riders' />
            <format attr='stroke-size' value='0' />
            <format attr='tick-color' value='#00000000' />
            <format attr='tick-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' palette='red_green_diverging_10_0' type='interpolated' />
            <encoding attr='size-bar' field='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]' value='Gender' />
            <format attr='title' field='[federated.0anjuk313x263d1chian6129x2c7].[mn:month:ok]' value='Month' />
            <format attr='title' field='[federated.0anjuk313x263d1chian6129x2c7].[qr:month:ok]' value='Quarter' />
            <format attr='title' field='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' value='Number of riders' />
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <tooltip column='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>Number of riders</run>
                <run fontcolor='#787878'>: &#9;</run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[Average age:	<[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='size' value='1.6811602115631104' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' />
              <text column='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' />
              <tooltip column='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='size' value='1.6811602115631104' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' />
              <text column='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' />
              <tooltip column='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='size' value='1.6811602115631104' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0anjuk313x263d1chian6129x2c7].[none:station name:nk]</rows>
        <cols>([federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk] + [federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk])</cols>
      </table>
      <simple-id uuid='{E848FD50-8ECF-4F2D-A4A3-477BFDD28E93}' />
    </worksheet>
    <worksheet name='STATION LOCATION X MONTH'>
      <table>
        <view>
          <datasources>
            <datasource caption='citibike_st+' name='federated.0anjuk313x263d1chian6129x2c7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0anjuk313x263d1chian6129x2c7'>
            <column datatype='integer' name='[age]' role='measure' type='quantitative' />
            <column-instance column='[age]' derivation='Avg' name='[avg:age:qk]' pivot='key' type='quantitative' />
            <column caption='age range' datatype='string' name='[category]' role='dimension' type='nominal' />
            <column-instance column='[month]' derivation='Count' name='[cnt:month:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column-instance column='[month]' derivation='Month' name='[mn:month:ok]' pivot='key' type='ordinal' />
            <column datatype='date' datatype-customized='true' default-format='S' name='[month]' role='dimension' type='ordinal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[station latitude]' derivation='None' name='[none:station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[station longitude]' derivation='None' name='[none:station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[station name]' derivation='None' name='[none:station name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' datatype='real' datatype-customized='true' name='[station latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' datatype-customized='true' name='[station longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='string' name='[station name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0anjuk313x263d1chian6129x2c7].[Action (station name)]'>
            <groupfilter function='level-members' level='[station name]' user:ui-action-filter='[Action2_75D82F02E4A5437DB9DEA5C61196A535]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' filter-group='9' included-values='in-range'>
            <min>35.0</min>
            <max>44.0</max>
          </filter>
          <filter class='quantitative' column='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' filter-group='4' included-values='in-range'>
            <min>0</min>
            <max>100000</max>
          </filter>
          <filter class='categorical' column='[federated.0anjuk313x263d1chian6129x2c7].[mn:month:ok]' filter-group='8'>
            <groupfilter function='member' level='[mn:month:ok]' member='8' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0anjuk313x263d1chian6129x2c7].[none:category:nk]'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;25-34&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:gender:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]</column>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[Action (station name)]</column>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]</column>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[mn:month:ok]</column>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]</column>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[none:category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0anjuk313x263d1chian6129x2c7].[none:station longitude:qk]' field-type='quantitative' max='-8225058.5715526361' min='-8243721.3937997464' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0anjuk313x263d1chian6129x2c7].[none:station latitude:qk]' field-type='quantitative' max='4982001.6056168741' min='4966610.0201837551' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' value='Number of riders'>
              <formatted-text>
                <run>Number of riders</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' />
              <size column='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' />
              <text column='[federated.0anjuk313x263d1chian6129x2c7].[none:station name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='16'><![CDATA[<[federated.0anjuk313x263d1chian6129x2c7].[none:station name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of riders:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0anjuk313x263d1chian6129x2c7].[none:station latitude:qk]</rows>
        <cols>[federated.0anjuk313x263d1chian6129x2c7].[none:station longitude:qk]</cols>
      </table>
      <simple-id uuid='{B0039CD5-A61E-4759-87F3-40F5336AB322}' />
    </worksheet>
    <worksheet name='STATION LOCATION X QUARTER'>
      <table>
        <view>
          <datasources>
            <datasource caption='citibike_st+' name='federated.0anjuk313x263d1chian6129x2c7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0anjuk313x263d1chian6129x2c7'>
            <column datatype='integer' name='[age]' role='measure' type='quantitative' />
            <column-instance column='[age]' derivation='Avg' name='[avg:age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[month]' derivation='Count' name='[cnt:month:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column datatype='date' datatype-customized='true' default-format='S' name='[month]' role='dimension' type='ordinal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[station latitude]' derivation='None' name='[none:station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[station longitude]' derivation='None' name='[none:station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[station name]' derivation='None' name='[none:station name:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='Quarter' name='[qr:month:ok]' pivot='key' type='ordinal' />
            <column aggregation='Avg' datatype='real' datatype-customized='true' name='[station latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' datatype-customized='true' name='[station longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='string' name='[station name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' filter-group='9' included-values='in-range'>
            <min>35.0</min>
            <max>44.0</max>
          </filter>
          <filter class='quantitative' column='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' filter-group='5' included-values='in-range'>
            <min>40000</min>
            <max>100000</max>
          </filter>
          <filter class='categorical' column='[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:gender:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0anjuk313x263d1chian6129x2c7].[qr:month:ok]' filter-group='3'>
            <groupfilter function='member' level='[qr:month:ok]' member='3' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]</column>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[qr:month:ok]</column>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]</column>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0anjuk313x263d1chian6129x2c7].[none:station longitude:qk]' field-type='quantitative' max='-8219781.6325879786' min='-8270163.2508443538' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0anjuk313x263d1chian6129x2c7].[none:station latitude:qk]' field-type='quantitative' max='4985111.2899475181' min='4948428.9441100992' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' />
              <size column='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' />
              <text column='[federated.0anjuk313x263d1chian6129x2c7].[none:station name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='16'><![CDATA[<[federated.0anjuk313x263d1chian6129x2c7].[none:station name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of riders:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0anjuk313x263d1chian6129x2c7].[none:station latitude:qk]</rows>
        <cols>[federated.0anjuk313x263d1chian6129x2c7].[none:station longitude:qk]</cols>
      </table>
      <simple-id uuid='{34A0EC53-78FA-4B4E-802C-5515C223C3BD}' />
    </worksheet>
    <worksheet name='STATION LOCATION X YEAR'>
      <table>
        <view>
          <datasources>
            <datasource caption='citibike_st+' name='federated.0anjuk313x263d1chian6129x2c7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0anjuk313x263d1chian6129x2c7'>
            <column datatype='integer' name='[age]' role='measure' type='quantitative' />
            <column-instance column='[age]' derivation='Avg' name='[avg:age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[month]' derivation='Count' name='[cnt:month:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column datatype='date' datatype-customized='true' default-format='S' name='[month]' role='dimension' type='ordinal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[station latitude]' derivation='None' name='[none:station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[station longitude]' derivation='None' name='[none:station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[station name]' derivation='None' name='[none:station name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' datatype='real' datatype-customized='true' name='[station latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' datatype-customized='true' name='[station longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='string' name='[station name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' filter-group='9' included-values='in-range'>
            <min>35.0</min>
            <max>44.0</max>
          </filter>
          <filter class='quantitative' column='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' filter-group='6' included-values='in-range'>
            <min>1</min>
            <max>312111</max>
          </filter>
          <filter class='categorical' column='[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:gender:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]</column>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]</column>
            <column>[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0anjuk313x263d1chian6129x2c7].[none:station longitude:qk]' field-type='quantitative' max='-8221022.8896182654' min='-8255615.1130884616' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0anjuk313x263d1chian6129x2c7].[none:station latitude:qk]' field-type='quantitative' max='4982238.4526809622' min='4965752.5456675766' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' />
              <size column='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' />
              <text column='[federated.0anjuk313x263d1chian6129x2c7].[none:station name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='16'><![CDATA[<[federated.0anjuk313x263d1chian6129x2c7].[none:station name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of riders:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0anjuk313x263d1chian6129x2c7].[none:station latitude:qk]</rows>
        <cols>[federated.0anjuk313x263d1chian6129x2c7].[none:station longitude:qk]</cols>
      </table>
      <simple-id uuid='{D6FE7948-DFDC-42A9-A7F5-771073714975}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='ANNUAL ANALYSIS'>
      <style />
      <size maxheight='768' maxwidth='1024' minheight='768' minwidth='1024' preset-index='2' sizing-mode='fixed' />
      <datasources>
        <datasource caption='citibike_st+' name='federated.0anjuk313x263d1chian6129x2c7' />
      </datasources>
      <datasource-dependencies datasource='federated.0anjuk313x263d1chian6129x2c7'>
        <column datatype='integer' name='[age]' role='measure' type='quantitative' />
        <column-instance column='[age]' derivation='Avg' name='[avg:age:qk]' pivot='key' type='quantitative' />
        <column caption='age range' datatype='string' name='[category]' role='dimension' type='nominal' />
        <column-instance column='[month]' derivation='Count' name='[cnt:month:qk]' pivot='key' type='quantitative' />
        <column datatype='string' name='[gender]' role='dimension' type='nominal' />
        <column datatype='date' datatype-customized='true' default-format='S' name='[month]' role='dimension' type='ordinal' />
        <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
        <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='48958' id='19' param='horz' type-v2='layout-flow' w='98438' x='781' y='50000'>
            <zone h='48958' id='13' param='horz' type-v2='layout-flow' w='88770' x='781' y='50000'>
              <zone h='48958' id='6' type-v2='layout-basic' w='88770' x='781' y='50000'>
                <zone h='48958' id='63' name='STATION LOCATION X MONTH' show-title='false' w='44385' x='45166' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48958' id='66' name='NYC citizen average expenses per category' w='44385' x='781' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='99' h='48958' id='18' is-fixed='true' param='vert' type-v2='layout-flow' w='9668' x='89551' y='50000'>
              <zone h='6771' id='20' mode='checkdropdown' name='STATION LOCATION X MONTH' param='[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]' type-v2='filter' w='9668' x='89551' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6771' id='42' mode='checkdropdown' name='STATION LOCATION X MONTH' param='[federated.0anjuk313x263d1chian6129x2c7].[none:category:nk]' type-v2='filter' w='9668' x='89551' y='56771'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8985' id='78' name='STATION LOCATION X MONTH' param='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9668' x='89551' y='63542'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9636' id='86' name='ANNUAL' param='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9668' x='89551' y='72527'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='48958' id='85' name='ANNUAL' w='98438' x='781' y='1042'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='110' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='109' param='vert' type-v2='layout-flow' w='98438' x='781' y='1042'>
                <zone h='9636' id='86' name='ANNUAL' param='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9668' x='89551' y='72527'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='85' is-fixed='true' name='ANNUAL' w='98438' x='781' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='66' is-fixed='true' name='NYC citizen average expenses per category' w='44385' x='781' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6771' id='20' mode='checkdropdown' name='STATION LOCATION X MONTH' param='[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]' type-v2='filter' w='9668' x='89551' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6771' id='42' mode='checkdropdown' name='STATION LOCATION X MONTH' param='[federated.0anjuk313x263d1chian6129x2c7].[none:category:nk]' type-v2='filter' w='9668' x='89551' y='56771'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8985' id='78' name='STATION LOCATION X MONTH' param='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9668' x='89551' y='63542'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='63' is-fixed='true' name='STATION LOCATION X MONTH' show-title='false' w='44385' x='45166' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E3AE78D1-312B-4757-8AE4-91F8326F0448}' />
    </dashboard>
    <dashboard name='MONTH ANALYSIS'>
      <style />
      <size maxheight='768' maxwidth='1024' minheight='768' minwidth='1024' preset-index='2' sizing-mode='fixed' />
      <datasources>
        <datasource caption='citibike_st+' name='federated.0anjuk313x263d1chian6129x2c7' />
      </datasources>
      <datasource-dependencies datasource='federated.0anjuk313x263d1chian6129x2c7'>
        <column datatype='integer' name='[age]' role='measure' type='quantitative' />
        <column-instance column='[age]' derivation='Avg' name='[avg:age:qk]' pivot='key' type='quantitative' />
        <column caption='age range' datatype='string' name='[category]' role='dimension' type='nominal' />
        <column-instance column='[month]' derivation='Count' name='[cnt:month:qk]' pivot='key' type='quantitative' />
        <column datatype='string' name='[gender]' role='dimension' type='nominal' />
        <column-instance column='[month]' derivation='Month' name='[mn:month:ok]' pivot='key' type='ordinal' />
        <column datatype='date' datatype-customized='true' default-format='S' name='[month]' role='dimension' type='ordinal' />
        <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
        <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='48958' id='19' param='horz' type-v2='layout-flow' w='98438' x='781' y='50000'>
            <zone h='48958' id='13' param='horz' type-v2='layout-flow' w='88770' x='781' y='50000'>
              <zone h='48958' id='6' type-v2='layout-basic' w='88770' x='781' y='50000'>
                <zone h='48958' id='66' name='NYC citizen average expenses per category' w='44385' x='781' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48958' id='107' name='STATION LOCATION X MONTH' show-title='false' w='44385' x='45166' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='99' h='48958' id='18' is-fixed='true' layout-strategy-id='distribute-evenly' param='vert' type-v2='layout-flow' w='9668' x='89551' y='50000'>
              <zone h='9896' id='20' mode='checkdropdown' name='MONTHLY' param='[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]' type-v2='filter' w='9668' x='89551' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9765' id='42' mode='checkdropdown' name='NYC citizen average expenses per category' param='[federated.0anjuk313x263d1chian6129x2c7].[none:category:nk]' type-v2='filter' w='9668' x='89551' y='59896'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9766' id='78' name='MONTHLY' param='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9668' x='89551' y='69661'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9766' id='86' name='MONTHLY' param='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9668' x='89551' y='79427'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9765' id='87' mode='checkdropdown' name='MONTHLY' param='[federated.0anjuk313x263d1chian6129x2c7].[mn:month:ok]' type-v2='filter' w='9668' x='89551' y='89193'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='48958' id='85' name='MONTHLY' w='98438' x='781' y='1042'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='111' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='110' param='vert' type-v2='layout-flow' w='98438' x='781' y='1042'>
                <zone h='9896' id='20' mode='checkdropdown' name='MONTHLY' param='[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]' type-v2='filter' w='9668' x='89551' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9766' id='78' name='MONTHLY' param='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9668' x='89551' y='69661'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9766' id='86' name='MONTHLY' param='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9668' x='89551' y='79427'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9765' id='87' mode='checkdropdown' name='MONTHLY' param='[federated.0anjuk313x263d1chian6129x2c7].[mn:month:ok]' type-v2='filter' w='9668' x='89551' y='89193'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='85' is-fixed='true' name='MONTHLY' w='98438' x='781' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9765' id='42' mode='checkdropdown' name='NYC citizen average expenses per category' param='[federated.0anjuk313x263d1chian6129x2c7].[none:category:nk]' type-v2='filter' w='9668' x='89551' y='59896'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='66' is-fixed='true' name='NYC citizen average expenses per category' w='44385' x='781' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='107' is-fixed='true' name='STATION LOCATION X MONTH' show-title='false' w='44385' x='45166' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{94D10104-1208-4006-B815-26E02936BA79}' />
    </dashboard>
    <dashboard name='QUARTER ANALYSIS'>
      <style />
      <size maxheight='768' maxwidth='1024' minheight='768' minwidth='1024' preset-index='2' sizing-mode='fixed' />
      <datasources>
        <datasource caption='citibike_st+' name='federated.0anjuk313x263d1chian6129x2c7' />
      </datasources>
      <datasource-dependencies datasource='federated.0anjuk313x263d1chian6129x2c7'>
        <column datatype='integer' name='[age]' role='measure' type='quantitative' />
        <column-instance column='[age]' derivation='Avg' name='[avg:age:qk]' pivot='key' type='quantitative' />
        <column caption='age range' datatype='string' name='[category]' role='dimension' type='nominal' />
        <column-instance column='[month]' derivation='Count' name='[cnt:month:qk]' pivot='key' type='quantitative' />
        <column datatype='string' name='[gender]' role='dimension' type='nominal' />
        <column datatype='date' datatype-customized='true' default-format='S' name='[month]' role='dimension' type='ordinal' />
        <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
        <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
        <column-instance column='[month]' derivation='Quarter' name='[qr:month:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='48958' id='19' param='horz' type-v2='layout-flow' w='98438' x='781' y='50000'>
            <zone h='48958' id='13' param='horz' type-v2='layout-flow' w='88770' x='781' y='50000'>
              <zone h='48958' id='6' type-v2='layout-basic' w='88770' x='781' y='50000'>
                <zone h='48958' id='108' name='STATION LOCATION X QUARTER' w='44385' x='45166' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48958' id='111' name='NYC citizen average expenses per category' w='44385' x='781' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='99' h='48958' id='18' is-fixed='true' param='vert' type-v2='layout-flow' w='9668' x='89551' y='50000'>
              <zone h='7422' id='20' mode='checkdropdown' name='QUARTER' param='[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]' type-v2='filter' w='9668' x='89551' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8985' id='86' name='STATION LOCATION X QUARTER' param='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9668' x='89551' y='57422'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6771' id='87' mode='checkdropdown' name='STATION LOCATION X QUARTER' param='[federated.0anjuk313x263d1chian6129x2c7].[qr:month:ok]' type-v2='filter' w='9668' x='89551' y='66407'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9636' id='110' name='QUARTER' param='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9668' x='89551' y='73178'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6771' id='112' mode='checkdropdown' name='NYC citizen average expenses per category' param='[federated.0anjuk313x263d1chian6129x2c7].[none:category:nk]' type-v2='filter' w='9668' x='89551' y='82814'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='48958' id='109' name='QUARTER' w='98438' x='781' y='1042'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='116' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='115' param='vert' type-v2='layout-flow' w='98438' x='781' y='1042'>
                <zone h='7422' id='20' mode='checkdropdown' name='QUARTER' param='[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]' type-v2='filter' w='9668' x='89551' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9636' id='110' name='QUARTER' param='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9668' x='89551' y='73178'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='109' is-fixed='true' name='QUARTER' w='98438' x='781' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6771' id='112' mode='checkdropdown' name='NYC citizen average expenses per category' param='[federated.0anjuk313x263d1chian6129x2c7].[none:category:nk]' type-v2='filter' w='9668' x='89551' y='82814'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='111' is-fixed='true' name='NYC citizen average expenses per category' w='44385' x='781' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8985' id='86' name='STATION LOCATION X QUARTER' param='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9668' x='89551' y='57422'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6771' id='87' mode='checkdropdown' name='STATION LOCATION X QUARTER' param='[federated.0anjuk313x263d1chian6129x2c7].[qr:month:ok]' type-v2='filter' w='9668' x='89551' y='66407'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='108' is-fixed='true' name='STATION LOCATION X QUARTER' w='44385' x='45166' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{51A75975-F91A-4DD3-9126-20C06DFDCE4C}' />
    </dashboard>
    <dashboard name='Storia 1' type='storyboard'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97298' id='11' param='vert' removable='false' type-v2='layout-flow' w='98614' x='693' y='1351'>
            <zone h='97298' id='1' param='vert' removable='false' type-v2='layout-flow' w='98614' x='693' y='1351'>
              <zone fixed-size='109' h='18412' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98614' x='693' y='1351' />
              <zone h='78886' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98614' x='693' y='19763'>
                <flipboard active-id='8' nav-type='caption' show-nav-arrows='true'>
                  <story-points>
                    <story-point caption='Annual percentage of riders per age range and gender' captured-sheet='Annual percentage of riders per age range and gender' id='8' />
                    <story-point caption='Number of riders per age - January 2019 - Pershing Square North' captured-sheet='Number of riders per age range - January 2019' id='4' />
                    <story-point caption='Number of riders and average age for station - MONTHLY' captured-sheet='MONTH ANALYSIS' id='5'>
                      <capturedDeltas>
                        <worksheet name='MONTHLY'>
                          <filter class='quantitative' column='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' included-values='in-range'>
                            <min>25.0</min>
                            <max>34.0</max>
                          </filter>
                          <filter class='categorical' column='[federated.0anjuk313x263d1chian6129x2c7].[mn:month:ok]'>
                            <groupfilter function='member' level='[mn:month:ok]' member='8' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                          </filter>
                        </worksheet>
                        <worksheet name='NYC citizen average expenses per category'>
                          <filter class='categorical' column='[federated.0anjuk313x263d1chian6129x2c7].[none:category:nk]'>
                            <groupfilter function='member' level='[none:category:nk]' member='&quot;25-34&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                          </filter>
                        </worksheet>
                        <worksheet name='STATION LOCATION X MONTH'>
                          <filter class='categorical' column='[federated.0anjuk313x263d1chian6129x2c7].[none:category:nk]'>
                            <groupfilter function='member' level='[none:category:nk]' member='&quot;25-34&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                          </filter>
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <encoding attr='space' class='0' field='[federated.0anjuk313x263d1chian6129x2c7].[none:station latitude:qk]' field-type='quantitative' max='4978746.6567549827' min='4968484.7339790855' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                              <encoding attr='space' class='0' field='[federated.0anjuk313x263d1chian6129x2c7].[none:station longitude:qk]' field-type='quantitative' max='-8228929.5996128274' min='-8241372.5309477653' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                            </style-rule>
                          </style>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='Number of riders and average age for station - QUARTER' captured-sheet='QUARTER ANALYSIS' id='12'>
                      <capturedDeltas>
                        <worksheet name='NYC citizen average expenses per category'>
                          <filter class='categorical' column='[federated.0anjuk313x263d1chian6129x2c7].[none:category:nk]'>
                            <groupfilter function='member' level='[none:category:nk]' member='&quot;35-44&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                          </filter>
                        </worksheet>
                        <worksheet name='QUARTER'>
                          <filter class='quantitative' column='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' included-values='in-range'>
                            <min>35.0</min>
                            <max>44.0</max>
                          </filter>
                          <filter class='categorical' column='[federated.0anjuk313x263d1chian6129x2c7].[qr:month:ok]'>
                            <groupfilter function='member' level='[qr:month:ok]' member='3' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                          </filter>
                        </worksheet>
                        <worksheet name='STATION LOCATION X MONTH'>
                          <filter class='categorical' column='[federated.0anjuk313x263d1chian6129x2c7].[none:category:nk]'>
                            <groupfilter function='member' level='[none:category:nk]' member='&quot;35-44&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                          </filter>
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <encoding attr='space' class='0' field='[federated.0anjuk313x263d1chian6129x2c7].[none:station latitude:qk]' field-type='quantitative' max='4986491.1073792148' min='4951608.4772670493' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                              <encoding attr='space' class='0' field='[federated.0anjuk313x263d1chian6129x2c7].[none:station longitude:qk]' field-type='quantitative' max='-8215368.046355119' min='-8257664.4249916002' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                            </style-rule>
                          </style>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='Number of riders and average age for station - ANNUAL' captured-sheet='ANNUAL ANALYSIS' id='10'>
                      <capturedDeltas>
                        <worksheet name='STATION LOCATION X MONTH'>
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <encoding attr='space' class='0' field='[federated.0anjuk313x263d1chian6129x2c7].[none:station latitude:qk]' field-type='quantitative' max='4988292.3406378319' min='4963125.5273399185' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                              <encoding attr='space' class='0' field='[federated.0anjuk313x263d1chian6129x2c7].[none:station longitude:qk]' field-type='quantitative' max='-8224308.0075888336' min='-8254823.6269930881' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                            </style-rule>
                          </style>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                  </story-points>
                </flipboard>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{5BDB3E3D-54A1-4574-BD45-8F16222107B4}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='MONTHLY'>
      <cards>
        <edge name='left'>
          <strip size='141'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0anjuk313x263d1chian6129x2c7].[mn:month:ok]' type='filter' />
            <card param='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='checkdropdown' param='[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[none:AdhocCluster:1:ok]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[none:month:nk]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[qr:month:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ABE1A5C5-D8ED-49E9-9FB6-2FD4C184E398}' />
    </window>
    <window class='worksheet' name='QUARTER'>
      <cards>
        <edge name='left'>
          <strip size='141'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='checkdropdown' param='[federated.0anjuk313x263d1chian6129x2c7].[qr:month:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[none:AdhocCluster:1:ok]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[none:month:nk]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[qr:month:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E45E0DFD-924A-4917-8BB2-4F0611483928}' />
    </window>
    <window class='worksheet' name='ANNUAL'>
      <cards>
        <edge name='left'>
          <strip size='141'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='checkdropdown' param='[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[none:AdhocCluster:1:ok]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[none:month:nk]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[qr:month:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1CAB39BB-59BB-4F44-A7AB-C947DE303D9C}' />
    </window>
    <window class='worksheet' name='NYC citizen average expenses per category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0anjuk313x263d1chian6129x2c7].[none:category:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[attr:Expense percentage:qk]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[none:Category age:nk]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[none:Category:nk]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[none:Item:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8399D8B0-D348-4370-B3FB-0EDF7EE26AD0}' />
    </window>
    <window class='worksheet' name='Annual percentage of riders per age range and gender'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[mn:month:ok]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[none:category:nk]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[none:month:nk]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[yr:month:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{844D9BAB-CD78-4605-978A-5661575B008E}' />
    </window>
    <window class='worksheet' name='Number of riders per age range - January 2019'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0anjuk313x263d1chian6129x2c7].[none:station name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[mn:month:ok]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[none:month:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FE5B8895-67E4-407B-A6A7-D91AE2727E19}' />
    </window>
    <window class='worksheet' name='STATION LOCATION X MONTH'>
      <cards>
        <edge name='left'>
          <strip size='149'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0anjuk313x263d1chian6129x2c7].[avg:age:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='checkdropdown' param='[federated.0anjuk313x263d1chian6129x2c7].[none:gender:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.0anjuk313x263d1chian6129x2c7].[mn:month:ok]' type='filter' />
            <card param='[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[none:station latitude:qk]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[none:station longitude:qk]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[none:station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B25F6514-F6F5-4870-AC83-DBE09AC69838}' />
    </window>
    <window class='worksheet' name='STATION LOCATION X QUARTER'>
      <cards>
        <edge name='left'>
          <strip size='149'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[none:station latitude:qk]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[none:station longitude:qk]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[none:station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8876437F-EF33-40D1-9533-B7F46004F7E2}' />
    </window>
    <window class='worksheet' name='STATION LOCATION X YEAR'>
      <cards>
        <edge name='left'>
          <strip size='149'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[cnt:month:qk]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[none:station latitude:qk]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[none:station longitude:qk]</field>
            <field>[federated.0anjuk313x263d1chian6129x2c7].[none:station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C2F22D17-C7E9-4997-AE61-2995F8F7BCA9}' />
    </window>
    <window class='dashboard' name='MONTH ANALYSIS'>
      <viewpoints>
        <viewpoint name='MONTHLY' />
        <viewpoint name='NYC citizen average expenses per category' />
        <viewpoint name='STATION LOCATION X MONTH'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{610FA482-6344-4CB2-8037-40C6EF676F13}' />
    </window>
    <window class='dashboard' maximized='true' name='QUARTER ANALYSIS'>
      <viewpoints>
        <viewpoint name='NYC citizen average expenses per category'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='QUARTER' />
        <viewpoint name='STATION LOCATION X QUARTER'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{5CB7FD60-ADA3-4F45-A7F7-BCDEC93E2A52}' />
    </window>
    <window class='dashboard' name='ANNUAL ANALYSIS'>
      <viewpoints>
        <viewpoint name='ANNUAL' />
        <viewpoint name='NYC citizen average expenses per category' />
        <viewpoint name='STATION LOCATION X MONTH'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{839ED601-8096-4A58-B324-AEF3BEBFC8C4}' />
    </window>
    <window class='dashboard' name='Storia 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{8CA2F86C-C983-41A7-B809-C978879D88DE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='ANNUAL' width='192'>
      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
      oTwCKTzS/H+KIafhfQ9jXwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='ANNUAL ANALYSIS' width='192'>
      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
      8f8BvO308kA48tEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Annual percentage of riders per age range and gender' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='MONTH ANALYSIS' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9eZRd13Wf+d3p3TfPr17NhZowowCCJEiKkqjB1GTHtuxWLKnbbSfp5cRj
      4mUtJbZasRLHcZxOpzt2p5047nbbsWxLdiRZlCOJEiVOGAhirnme69X05vHO/cdDFQmRBAtE
      gWAB71sLi6yqe8/dd/jde/Y+Z+8jOI7j0KDBfYp4tw1o0OBu0hBAg/uahgAa3Nc0BNDgvqYh
      gAb3NTcIYGrwZZY2y5ilDVaytZvuODI4fEsHWpwe48rI5A2/y6c30O36/6fGh8not9Tk6zI8
      Mlhvb26SC4Njt9/g20QhnwdgZHjwLltyfyG/+ofNUo3cxdPEj7eTqiqYpU1aIyorVQ+rkxcx
      BRce1YU3lGBjdYnLeoVI8z78Uo2Z+WX6j54kvzJD0ZQ5dqiP9Ooi0wspOnsP8OzzL3Di0fcD
      sLC4QC6TIxqN4ovByLWLzI2Mc7LrMENXLmK5gnSGPayVa8TCIaanZ0m2ddLd0UJ6bYnZxRVa
      OvsprM9T1XQSrX0oZo6ljRzFcpUjwDPPP8exB9/D4sIMmVyVzuYwk3NL9BwcoLq5yHquQLKl
      G4wK7a0RZleqoG2wntN46EQ/Z88NIboUHj11gmsXL+CNNiM6Fr1dSeZXyuzrbOLlcy9gOgon
      Hn6E+bGrlC0Xx3sTDC9kiCeaaEtEOH/muRuuW1NAYnJumfbu/eTX5q7bv48Xv/0tDj/8CMX1
      FJc1A184wf6ejrvxTNxXiD/447HuBFenUgAsLi1hljZY3ChhCTJqpUb3Aw+SWV9E9QZ54MGH
      WZwb58zp00iSyNkzZ7k6NM6Rg30AjE7NcurUKaZGr9G+r4djh+q/Hxm8Su+hI6wtLVHNzJCX
      mjnU300lNcKV2SwjL7/E0tI8miuCT6ySrxhIUl2rtmUBElcvXyVdqHDywVMszI0zObvMQydP
      4lbqZ9LS0c3xIwcYvHqFQ0cO8+KZ00iSxLkzZ5ldXuPBk30szayxtLgEZom5xRRnzryEmZnm
      4tgcoruJsKkzMXoR/74T7O/pYmFuluHLl/HFowDojswjD/Zx6fnvc+bKLMsjLzOXWmO5AG2J
      CMBrrtvQxDSnTp1ienzoVfZP093fz/EjB5BULydOniS9tnCHb30DeB0foG3/A6xN1z/Dxcwa
      V4cn6n8Q2P6vAFh6mQsXziOpAdrb27GRGDh2lKamJOL1bT2ywPnz53F5IzccIxBJ4HNJAEie
      MGszg4xPz6OGksT9CvuPDOCWJJLJOIISIBZ0MzI6AsDE5DSSJCGJIsLWgQSw9RKXr1yhatx4
      PpFEEpck0NHeju3AwMAx9FKOK1eGMIBKMcPlq8NYyLS1teCOd7O/NXC9bYFwSyvTV19mcnaR
      hw53cm4qS8JbF+Pq0ixnz1yh7cBh2uN+2vYfIeYRSSaTrxjwA9fNr0qcP38exR24wX6XaHJl
      eAJBEBBetVuDO4tw/44E5zh3eoVHHz+84z0mBs+ju1s52t8OwOlzZ3n80cfulIEN3gbuYwE0
      aNAIgza4z9lTAjBN826b0OAeY08JoFqt3m0TGtxj7CkBNGiw2zQE0OC+piGABvc1N0yFKBaL
      d8uOHVGpVO62CQ3uMfbUOMDn//M33nSSXoNbIxLw8O9+8Ydvq42ZpTk+/1f/fpcsenuR3+gP
      +fQ6qc0sXd19uBURx3EQBGH7v+l0mpBHYnR+jZZEknAsTDmzztxqluNHDpDJZDAMnWSy+YZ2
      HQcEge12tn/xAzhakaGpZZJNTUTjURRRYHxhg/GV/O5fhfuYpogfx3E4d+4csiyTy+U4dOgQ
      lUqFmZkZuru7kWWZbDZLX18f4XD4NW1ops75ySt3wfrb540FUKoSD0iMT86QCLm4evEC8X1H
      cMwaybCXbNkkdqQXBZPl+VmqdhdB0cTSalR0i/WVRTIVg8zqAllDoSXoJleusrJRoL8rQaFY
      JeRzMTqxQG9/P4rXS3p+DH9zM1pR4aEH+1Alm+W5GTQHOpOxt/O63HcEg0Gq1SqqqmJZFrVa
      jUqlQktLC2tra3R0dNyT4zBvKIBkPMLswhItzW00hVTKBw/jCSYI+1W0Sh5LsrEME1GS6exu
      oWI6CJKLQMCLAHTs66XVtqgU8/hwoYgOB1ua8QXytLTEaXMALBzBRSQWIp3X6eruQ/L58LVF
      cEwTRImu7m6q9p7ppe1JbNsml8sRCoUoFouIokgwGCQWi7G0tMTGxgbpdBqv10s8Hr/b5u4q
      e8oH+Itvn6eo7Rlz9wQ+j4v/8ckHbquN5bUUX7v0nV2y6O3lDb8A70QGp1MsZxqjwbvNDz3Y
      RzIaeMv7G7bOUHZvZrK9JQGkNzcJKgZ5OUnY7SACDgJgI4gSKwuz6LiIBL2EwhHmpsaQPBFa
      Aw55pRkqacLhMLaugepB5JU2JElgaGiYw4cP151u28YRBCRRZHJpk/HlhhO822iGyejoKKur
      q3i9XmRZpqenhxdffJFQKISmaXR3d2NZFgcOHHjN/rplcG155C5Yfvu8JQGU8hlS2VUqahnJ
      KOP3KeiWxMbCOB2HHybh87GSKTI7tcKh4w9i6jU0QcPxgoaNU1jhysIiqqkixhWq+SoBVcBR
      fHTFXSwsrOL1BzAcgfzyFK5oBycO9+/2uTd4FaFQiMXFRYLBIMViEdM0qdVqxONxlpeXOXHi
      BOl0+m6bueu8JQHEkq20tybZLJnkCzKCUSYSiRBUDxIIBTBrBTxuL1GfC8dxcHsD4HKhRBKU
      x8dpaungYIubaqaE6BXICirNietphpbFRz/yBPlilWqlRnBfL7je+ue5wc5Ip9PE43Hy+Tyx
      WAzbtonH4ySTSQRBoFAokEqlOHDgQD18fY+wp5zgLz19ntIuVI5ocCOfeP8AQZ/7Le+f2lzl
      u9Mv7KJFbx97ygm+MJFiqeEE7yrvPtZ1Ww8/gGnrLJSu7pJFby+3LIDFuSkMwU3IpxIKR3Ac
      EAUHGxFsC1GWWVmY2d4mEo0zNzWG6A3TFnDIyy1Q3SQYCOKYBqgeBMdGFMBBRJFFBgeHOHLk
      CMC2EyxLEvOrWcZXCrt+Ee5nupsjVKtVnnvuOZqbm1lcXOTJJ59kcnKSubk5mpqaqFQqVKtV
      jh8/Tltb22vaMG2T+dzsXbD+9rllAQT8AZbTBQqbq2Q215lbzdOZDGLiYGsCnmCAePCVbXzB
      KKZewxT1606whVNIMb+0gktXEGIKWrFGQBVA8dIRdbG0tI4vEMSwBfIr06jRDo4f7rsT598A
      UFUVl8uF31+fFmHbNvv27cPlcmHbNrquI8syS0tLryuAvcwtC8CyLXxeH26/iiVI9LiDZFem
      kUItpFOT9MQfvmEb23Hw+IPgcqNEYlQmJmlq6STcolLLlutOsFShOV4vnWJYFh/58BMUilWq
      1Sqh7l5Q/Lt+4g1eoVKpoCgKlmURi8W2Z9329PRw5coVWlpa2NjY4NixY3fZ0t1nTznBX/n+
      JSrGvROBeCfQ3RLl8WNdt9XGemaNa+lLu2TR28uecoIvT2+ykjPefMMGb0rQp/J//PwP7Upb
      mqlxZv75XWnr7eZGAdg1rlwZZ19fH6oikctmiDclsUydajqL0tyEbNqI2Iiyi6W5SRyXH58i
      EWtKMjsxghKI0eoXmcxamJsr9B8/hugIiNg4gs3GWoFkcwzDMCmXCvhcAiUhSECxUFwquq7j
      drvZWF3EkgK0NL1SVW55s8T0eiMpZjeIBtzYts25c+e24/yHDh1C0zQmJibo6OhgZmaG1tZW
      +vr6iEajb9iWaZss5fdmKccbBSAoBAMqczOTRJpaqGYzVIqbFDQFJ59HyK1TyJsE5RpN+44S
      CoZIZYsUNoqE4k0YehWzZmC7ZQxTQ68ZLM5NsrRaoi3uR1IVKvkauXSKqYU1+npaiftENgQY
      n7mM1x1B8Su0HzjOysoqllyguSnSKBN4hxAEgVAoRLlcxufzYVkWpVKJ7u5uotEoLpeLSCSC
      bdt329Q7xo0CcGxsR6Szs5NsoUzHvm5wbITUCsFkP4LLIe/XcIsGXq+KWS7j9wVxeV04DvgC
      YSSvG9nnpV2oYocPgVNFUSM0xUKABUkXtXIWye2nKRECQcRfquHr7MXr8RKKBkGCnv6D4ED1
      ukPm9XrvwuW5t7Ftm2KxSDQaJZVKoaoqra2tzM/Pk0wm6e3t5fLly3g8nntuGvQWe8oJ/tsz
      w2j2nnJb3rG4FYmPPbI7oeX1zDrDmXssI+ydyHfPjzO/2fABdos/euocsaCH//LZn7ytdgxb
      Z6hweZesenu5bQHMz0xgSV66u9oZOf8y+x5+iOWxYbyhOAIOLS3NjA1eJNzch2KV2Uxv0Nx9
      GJdgoSoSqbVNmmIRkGUsXceluhEEEIwil8eWaIpFCMfjBDwqyxt5phsjwbtKsVIf/Dp//jy2
      bVMqldi/fz+yLHPmzBkOHDjAzMwMPp+PpqYmjh8//po2LMdivbJ6F6y/fW5bAOFQmMX1HJVM
      ipX1DJFilXA4RLZUolap0twSR6ua6IaOYJuUyxrrKwsY5SqyX8W2BCrFLKJdY2IxQ3dXF7Lq
      pr+rhaBHYnN1HSUQJOBRd+N8G7wBXq93OyfYtm2am5vp6+ujp6cHl8tFsVhkYWHhdQWwl7lt
      AVi2RTAYxBtp5j1P+BH9HtIFm1A4ik8p4iARjsXwuRW8bj+xRIJiuUJWUoj4XZQMgXg4CI4J
      SopwOECxBo5jgyDR299NUdOAxpToO4XjOJTLZWKxGKlUCrfbTalUoq+vD13X6evrY3h4mEce
      eeRum7rr7Ckn+Knnr1KzGkHR3cSjKvzIuw7dVhub2Q1mahO7ZNHby55ygr/10hhz6+W7bcY9
      x8n9bbTGg295f82qcWbl2V2z5+3kNQK4evElwskuosF63L1YyBOJJzH1Km6PD9MycSyDXKGI
      3x/E7ZKwkHAMDUn1sLE8T8WS8akCTc1tLM5O4CgBelv9XBrPkIy6CCsuSCTIrSwTDIZwu1Vq
      moHHJaNb4FIkRLPEpdFFmqIRQokYIa+H9WyJxfVGTvBuY1oWIyMjLC4uEgqFAOjv7+fZZ58l
      GAximibRaBRVVTlx4sRr9rccm0xtb6ZLvkYAlVKRcKvE0sQQYlM3Yq1MNbXExuIcLtlPuK8L
      bSON4OhMzK3QGvFiIiM6Om5fmHgkwubiKpZmEU+2YZs6FbOG43hQBJtMsUYo5DA1MYFU3OTa
      SI2W5jZUl4TkGHg8HiqWyP6uVsI+mczGBu7Ia6uRNdhdAoEAgiBs5wRbloXjOIRCISYmJigU
      Cni9XgYGBhDFe6em8msEcPyhxzBMi2j/IdY2c7S0dyLgIDng9/oJJRKkyiW8/gSyr0rEp6Dj
      IuT3AGDWyoSCIQKqgGHZeP0h3LIPZB+9fSEKuTRqMMCR5nZqxSbcqxvEky2oSn3VSNsoYxYs
      HMfGEWR69/dQqNYg2JgSfScplUq0trZSLpe384Cbm5tpaWlBlmXa29tZWVm5p/KBYY85wd88
      fQ3dlu62GfccH3yoD/9thJk3c5ssajO7aNHbx55ygr9+puEE7zbvP9nLj73nyG21oVlVXkx9
      b5csenvZkQCuXb5Ef38XIzObHD/Sj2UaGFqNzVwBWRSIhIMobj/UMoyvlDnY3YogCFQrZTz+
      ICvz01RMkYP9PayvrxMNB6kZDm5VxrIctHIZ2efGtsDvVbl06SrHjh1FEARMQ8MRFTyqi3S+
      wkr6nb2GwV4jdz3z7plnnqG1tZW5uTk++tGPMjU1xdTUFG63m87OTsbHxxkYGKCv77Xzh2zH
      Jq9n74L1t8+OBBCL+hkcXyER9TI1cg1d8pCMx6lWKng8KhdfOkP7/uNYpU1yuSopt4AgmkwM
      TbL/+EM4tkW5VMN2HCzLYnxkkIrjISjr1GwB8BEIClQNma6IRDqTY3E5Rc10KK/P44m1c/RA
      zx2+FPcvsizj8/lwu90oioJt27S3t+PxeFhaWmJxcRHHcdD1e68mzY4EEEm04wnUcLkU5is6
      ffs68Hg8aLUy0WgURTiANxREiQTo7AQTBxOF/gM2oaAPXdRAFRCASjFLrLmDgCXgc8sIgFtV
      0Y0aVUMAj8oPfbCNcrlGraaBvxdLbkyFvpMYhoEsy3i9XhKJBLVaDVEU6e7u3h4hvhcT4mGP
      OcFPnxtGdxpO8G7SFg/yQH/rbbWRzm2yYt4LGWHvcP7bs4PMrJfuthn3FImQjz//zU/dVhuO
      bVPN5XbJoreHZKidrsT+GwWwND+NIbiRBQefRyUQClEsV1EEG5fHT6lUIuB1U9YMwqEg49cu
      0dp/FJ8qYWg6mmkTcju8eOYqJ971LjbnJzAkD7Kt09bVw9DVy/R3tTKbrdEaDhAMhzGNLPmc
      QiisYNoCQb+bixevMDBwDAEw9BqOpOJ1u8gWq6xnGwLYbWzb5uzZs9i2TaFQ4PDhw5RKJaam
      pjh48CCCIDA/P09/fz89Pa/1xRwcdFO7C5a/dUzLoFQq3SgAwxbp6GxmaXGWiZEJFF8cSxTx
      CTV0WybiV5jRXUQ8EuGAh0w+jzU7jalb2LaGgYuB3lYUn0q1WCSeSDC9uIpHEREEiAVVJlJF
      oh6dkcFJlHA7B3qijA5P0dsbp2zJdIZFcrnCK07wxjzeWDtH9jec4DuFIAgEAgEqlQqBQADn
      erDCtu3tmkBer5fFxcXXFcBeRRTFGwXQnIiwsrpBPJ5EQMTvD1CsGqiCgTcYYXMjzeGe5noZ
      Q9PgxCNPYOsVNE1DlQXSRQ2X10cinkB1SVi6RiQawytZGKZNU3svwVoNRRYQRA++cBORkJuH
      H/ZQqVVxSS4Er8oHPtBOuVxD0zScQB+W5Llb1+i+wHEcarUaLS0tLC4u4vf78fl8GIbB2toa
      6XR9PYdY7N5ap03TtL3lBD/z0ggGDSd4N1FdMu9/oPe22sjlsxjC3ipa7Hb5CLhDe8sJ/otn
      rjCz1vABdpNE2HfbArAsk/WN+V2y6M4TDTcTCNYjXzsWwOToEFVHob+rFVNQ0Eo5AqEohUKB
      eDzG1Usvk2jpoFyp0t/Tyvnnz7H/0fdSSs1gyV4SYR+mDYgymDVkySBf86PXMkSCIWTRwRJd
      BP1uLly4XHeCBQFDq+JIKj6PSqGskS40kuJ3E0kSsW2bM2fOYFkWxWKRw4cPoygKzz77LE1N
      TduDY/39/XR1vU4ZRafuVO4VLLte/+h73/vezgXgD8cQKxVGh67hCkWpbK7hiEHisQCeeIzm
      ZJJCtYaAjVmp4Pj8aKUCtm0jCCILS8u4JIFUtkJzLIgiVJlcWqanK0o2l8OxDATZhVBxKBSK
      LK2sUjUcKpsL+OLtHO7vvpPX5L5nywkOhUI4jkNLSwvHjh0jEAhw5swZXC4Xoii+vgD2IIIg
      0NXVtXMBiI6BPxQlGvKjOTK6240/EMbndSMCedumqSlJMZdG9vhJJhJ43QphXweqx0OtGqJW
      LuAJJYgEfWAbRBMCugNuWUIU69NsHcfm/e/voFK57gSH+jDFhhN8p9F1nba2tu11wiqVCvv3
      72d9fZ0nnngC0zRRFOVum7lr6LpOJpPZW07w918exdxbbss7HtUl897jt/d1zedzOMLe6QKp
      igePp55fsqeepu9cW2apUR36tvk3P/seWmO7l2BkmQbp5eFda+9O4lJ9dB14ePvnHQmgtLoK
      ySROvl7Ts5TPEgqHyOWL+NwyluBCtDUEycXSyhpdCR+D8xtEAz4isThOJcfsRoGHBo5y8cLL
      7N/XxmymSlPASyQWRRQEqtUqEjaCy41W1Ql7LF4aXKAp4scfS5CMhqjpFhXNvGMX537BcRxG
      R0eZnp6mqakJ0zQ5ceIE3/nOdwgGg1iWRU9PD6VSiYGBgZ00iG3tjfti2ya2bXP69On6msg7
      2stxcIDhoWsEvG5c0Ram5lLE4yHKuSprBY2IX0WWXbgUGcUXIepeo1ixaGv3kC/nQKtSNW2a
      Ij4mUkViXp3ZqXnGl5K0x1R8Hh+Lc5OEkjEsLUh4f5LmqJtCvkq8s+ED7DY+nw9VVXG73ezb
      tw9ZlgmFQsiyTDqdJhqN3pPTn6HuAPt8Pg4dOrQzAbgjQaam5+jt60dQ/ZRyGY4dO4AiClSK
      ObwRlXDAg1YpUtJBEBxQghzqaiJXKBIMBmlxRESgqb2HkKahyCKi7CMQCJEtVanWqvT09uEo
      bgLeIILgYKOw/3AHuXyBUNO9WZ34bqFpGl1dXaTTaVKpFOFwGEVR6O/vx+PxkE6nSafTOI5z
      z+UBb5WAHB0d3VtO8IXReZBvb0nPBnCkK4bHtXvuXz6fQ2Jv+GaiKOMNvLLoyp5ygv/smWEW
      MrW7bcY9we/9wpO0x3en3KRQreB9/hu70tauEowgfuQTN93klgQwPz0BagC/KuIPx0hNDKG2
      9iJZJn5VAJefiaGLxJPtZAtFjh7az+Vzz9Jy4F2Y2WmkUAczo0M8fOpBBMGmUKyykVpG8vho
      T8bQbJlI0MP58xc5fnwAQRDQqmUc2U3Q50E3LWq6dVvXpEEdx3EYGRlhamqK5uZmDMNgYGCA
      b33rWwwMDHD69Gl6enrQNI0PfehDN+8GOQ6Y78AvgPWKw+vxeOjr6+Pb3/42kUiEUqlEOBy+
      NQFYyHQ2xzj7wgt4/SGaY2HSmU3SqTVaEhF6+0O0tbaRLmn4vW4wyugEMLQiijdCbmkcf7yZ
      1dQioiJQLqp4/H4cYHxsFMUfR6pKVCpVllNrVAybWnoJf7ydYN++O3OR7mN8Ph8ejwdVVTl8
      +DB+v5/e3l4KhQLlcpmWlhbOnz9/t828LQRBwOv1cuTIEWzbJhwOY1kWgiCgquqtCaC1Oc7q
      Zp6+/j68wQiZjU3aY2FCHi+JaAhJFLAsi+bmZsqFLCg+WluTRAJeXLKEz+dHlhXWVxZp6ujB
      iUGluInj8hELBSgbAkrAyxNPdFGtaui6jhPxYAiN0uh3Al3X6e7uZnNzk+XlZZqbm+nt7SUU
      CtHf30+xWOR973vfnnaCbdumUqkwMjJCJBIhFArR19fHysoKiURiDzrBUkMMu8GRffFdc4QL
      2SyB6jtw4RJZQWi6eb7znnKC/8vfXmZ2ozEbdDeI+D186fMf353GqmWsb31pd9raBaRP/xKC
      e2eVRHYkgEvnzxBMdBANuPCF42TT6XoesKAi2BrlUpV4Iko6U6C1Jcnk4EVi+w7j96pg2czP
      jIPLz/7eOKkU6HoatyIRSSRZW9sgFvJSqNl4JBtB9aBVNGJ+OHt1jkTIiy/eRFsiimnZ6Oa9
      u2Tn24lxvfjt2bNnqdVqVKtVDh48SKVSYWZmBr/fTzKZxHEcstks733ve2/SmgPWOys4MTw8
      zMrKCh/4wAc4c+YMhUIBTdOIxWK43W4efvjh16ZEvhEt7V2UKjUKJZ2VhSUIRDEUC1P0UFmZ
      xtfVyaXBWVqSAcAiXayiLy9BtUjXkQfANihXNRzHYXF2GrffouaOMTlxmt59rQwv6YRlg4XN
      NSLJKLYRJhaJ05bwks9btEZCd/hy3Z84joPX68VxHBRFwXEcDMOgo6ODarXK6OgojuMgy3uq
      owDU831PnjyJIAjby7wahsHQ0BCCIHD06FF8Pt/OBKBVy7R39oBlEInEcblcaJUiluShOfEg
      62ubPHCsD1EALIsHTj2OY9adWL9LIBJrIuLyAx6OP3gU2zbIbq7T9a53sZpao9VnInlixMIB
      bFkl4A0giGDj4tCRFtKZHP6meysf9Z2CZVn09vYyOztLNBqlqamJ5eVlkskkLS0tdHd3Uyzu
      vXKUuq6zuLjI2toalUqFZDJJNpvl4x//OJOTk9vrTu8tJ3hkDkFuOMG7gSyJHO9N7kpbhWwG
      f+Wds3CJ0NyJIO0sd/yGL4Cmadi2jdvtYSeRL03TcKkqW5tqlSKb+RqtzQkEAfKZDXD5UQWD
      heVVWtq7CHhf+wAbmo7kUhDf5KC/+2fPML78zrnQ9wrf+Ld/j85k5M03fCOqZey//cvdM+g2
      kf7nfwzSW3CCU6lFapqDS7TwhmKsr63THA9RqFSwHQ/RoJuaXka3BAobG7hDMSIhL6VcBn+0
      mc3VJWKJJGdffJbuAwOU8jkgd33BBTDKWcaWK3hlm1JVxxcKU0pv4PEGUQNejFoNwdJwFB/l
      bIa2fV1IezgGvZcYGRlhfHyc5uZmNE3j8OHDPP3004RCIcrlMo899hhnz57lk5/85N02dUcM
      Dg6yvLzMk08+yQsvvECxWKRWq3H06FEymQyPP/44sMe6QMVikUCgsVzqO429fF/uncWeGjR4
      C+wpAVhGjZW1zR1u7bCyMEu2sLMVZbbi3Y5tsryS2tE+tmWSyxcp5TPMLa7syKbNtRUK5Rqp
      5SUs+80/vo5js7gwT61aZnJqhp0Mg9TKBRaWV6mW8mzmdhbByW6sspEtsLq8wGb2zUd1i4Uc
      uq6xsrpR/zmbJl+qomsa1epOi2Q55LJZLNPEMDSqtVtPwMmn18nkS7d43FfYUwJYXllDqxTZ
      yVCY4zisrK7hVncaNbLIZPOsrqyg2DXS1Tc/iqHrFEtFUisruN07yFNwHFyqytrSFIYtsrwD
      MduWgUtWmJucwJDdSDu5YwJk19dZ2shSyO7sheHgsLG+Tmol9abnYpsa0+MjzCys4uglyoZD
      Ol8ks7HKyNWLlGo7TI90bAqZHNVKiUtXB3ccuXk1kuIin80wdOUCFf3We/N7SgCyYJPJl9mZ
      W+wQDYdYXN7Z2xzbZmMtRaWqkVrPoMpvfhTL1FlaXMAXirC4uLgjm0ZHx/H4g6TXV3Eprjc/
      hlZham6RcFML+uYSpR3cZK1WwzBqGFqNSm1n05RrNY1arUokGmVpafmm25YLOWq6gabV2MwW
      kEXQq0U0EyKxGNXKDqerOA7pzTXS2RKxaJBK9dYrTE+OjyK53ESjUaqVW18/ruEEN7ht9vJ9
      2VNfgAYNdpuGABrc1zQEcIexLZOV1OrdNuO+JpVKUSrksX4grqFXy3srH2AvkvYtsiYAACAA
      SURBVF4Y5ekLS3zg1BFEATKba7jDLezvaWdteY6NooFdyeHyhSnl0vQdO0nY++bOcYOd89x3
      /pZI6z76DhzGq8Da0hwVzUY0tIYA7jRj08uEhTxzC3NULBmjsIaartAUj3LlwnkWchbNETeO
      PsPo3BotfUcbAthl2vsOMDk0iIiDI8r4PCKiYLO2sNaIAr2tODZjw9fwxTvoaI698e/2GHv5
      vjQE0OC22cv3ZU85wdJbGClscOfZy/dlT30BGjTYbfbUF6BBg92mEQW6x9A0jVKphKIo6LqO
      KIr4fD5s20bTNGq1GrZtI4oiLperXnzsegVoSZLuSBGsrfYFQcDtdu8oyb5cKVN+5jTlv32G
      2Gf+EdpzLyBPDiM9+ihi3/VVLbu6cfIFtK89hfKjH8P0+3AAgXpSvDQ2jj02ht7eS+5bL9D6
      hV8BwNzIsPKv/xMd//azjS7QvcZWWmutVmPr1m49eJVKBdM0sa6XMHG5XEiShKbVJ6EpinJH
      BRAMBnf08FuWRTqThvUMxuAYjgO5/+cvaf2Xv4IQCOD87r8AQPzoj4DHi/XeD2BYJrZjb5+v
      LMlY//wL2BMTqP/r56C3H4CFn/scnX/421jFMnJzvPEFuBf5wXnxjuNs/27rTS+KIm63e1so
      d+rtv3XMUCiEKO6sx12+PqtTcLuR+nuQPCruk0fRazZqXxKODiDUqvDNvwEEhJMPgdeHJEjY
      jo0oiPVyLp/6JM7YOIWXR/F6Q5iDI8T/wScQvB5kX33RlRssmhp8maXNMmZpg5VMgenZRcBh
      dnaW/GaK8y9fYDG1cYOx1WKWYtWkkK8nq29s3Pj3+52t6/JOQBAEZFlGlmUcx0HTNAzD2BbF
      zXAcB9t+60XJdF3fkcBM06RaqyFLMmt/8Jds/OnXkVuacIDSt54FRYGf+yX4lc/AT3wS5yd+
      ipqqYug6pmkiUO9qOY6DaQqUZtZAdWNvpCn+8V/iOdiDMTSKMTgKgPSFL3zhC1sHn5iZYWFu
      hs6ozEzJT3puBL2cRontY/jaVd797scJBXwAzE+PMTm7TNgnUjVF/vtTX8UXioNlIdoaQ8PD
      rKVL6KVNxqbmaW5t4uXTp1lYWiXZ1o4kOAxdvsD8Wha3VcV0h1hbWkB0dK4MDiOpAbLpFLPz
      i0i2zujYOIIaoJpNMTIxjWZCJbfO6NgUseZWFFFgemyIqfkU8aBCKqOR2Vgls7bC3PwCNVuC
      Wp7B4VHUQIypocssLi4gBxLMjV9lZbNAIuzhwoXLaI5ELb/B+OQ0/nACVZG48NJp5heXiSZb
      mR8fYmZpndaIiyuj85iOQMjvZWLkGgtrWWSret1eH8/8969hCCo+yeLK0DAub4Ti5hKjU7MY
      NhTTKcYnpgnGkqTmJlhcz1EqZImGfcwtrBMO31p83bIsDOPmOQC2bWNZFqIoYlkWkiS9qQBs
      x8G2LXDY8ZvcduxtcXm93h0JoFgq4tj1LpMcChB838MU/uP/R+Cj78d3aoDq//kfUR49hSNJ
      GB2dWB37ALbXMXYprrqPY1kYTz9L8dmXaPpXn0HqaMH7ox9BjIYo/9lfY07P4Xn3Iz8YBRI5
      1p3g6lQ9ieSxU8e4OLVBZ9yH8AMnvZDa4OEHj1PdWKQi1asJ9+1rZ2lxiUAkAXqVzu5uzpw5
      A+VlXhqcwxLd9IRNlguAY2NaDrNXriHGgly7MsTS8jIvvngGSZJ46dwZhq9d5cChI1imCYLE
      latXGJ9e4OGHHiS1Ms/pM2eQKHP2pUGgwpkzVygvjzCec3H12a9RkwOspwucfPAhFmcnePHM
      aSRJ4tyZs5SqJg+dOsT00Azr62uIosj5089jChIvnXuJjY0NTMtGluvnrdkijz58jEvnnuXM
      S6Nkpq8wtbzObFqrj+AaWdbzIg8cPfgqe6/R1dvPA8cO8cKZ08iSxLmzZ5icXebhB0+SWpph
      dnmdU6ce4MqlC1wdGufIwT4W5+YYv3YJObz7I8OO42z/ezOhvBpJFJElGUHcWTfJtm1w2K7M
      thPRGIaBNjVL8Z/8Bvb8IqpHwn7uuXrZRYf6v+tYtoVbdePz+wkEgni9Pvz+AKrbXT+/wVH0
      L/01jiBgl+vdv7l/8jvUhqcIfeYXCHz4CSqf/fXXhkHb9j/A2vQgAIovTiJUn5cSdIs3dIEc
      vcqFS9fYqgipVQpMzdUziRZHX2Z8tUQxl6GtrR0l2MahfTFE4ZXDOdU0U8s53LKC4I5gpcfx
      J/bR1dGObTsMDAwQjDXhUUQmp6e2+62irXHx0iXKmkV7WxsoQY4d2geotLXHCbbtp0nM0XTg
      QZYnR9ArBS68fB7ZHaCjvR3bgYGBY/UaRAII2MRiCabGxkm0d4FjMzAwQCQaQbJLjE3Wc33X
      lxc4d/Y8Ld2HaWsJE+8+TGtAJtl0vbiU7KeWX+LK0NgN9roluDg4Smd7O7ZdPzZmhUuXLlM1
      QDAqnD//MpFEC01NSUQBHjnRx/evrtAe2v0iYK/uyrzaSd4JgiDccA9vdgzr+tsf2HFpxVL5
      1dl+AtbFS5hf/QqRn/sUctgHjo3vl38OMZ+p+y2yvP312hJY+eUrMDKJfPwYgd/+PG1f/H0E
      n4fi98/T8qs/g3Z5iPyffQ1rZBRrbGLvRYHmp8ZYT2dRAglOHO570+3PnT7Lo48/dtvHPX32
      HI8/9uhttwMwOzHCRiaLJ9LKsQOvXaR6ZvQSBSKcOHTrC1hrmka5/PqpgVsPv2ma2w+/JEnI
      srwrDvBWtMeyLURB3F6cYif50oaukz3zEmJnG2I4DIDwlS/jfPMpeO8HqDz9PAChoy1QLmD9
      8ueQ2/dtd90cx8G2LDZ/5z8AEPy1n3/FrlKFlX/xeyR6g0j9B3D6DyEnY9ij43tPAA1uzpsJ
      4NVh0N18+C3bwrKsG/KcJUkiFNpZYeP80jLpT/8vuH/sY9DegautCWnwIs7YMMKPfwLt+bM4
      1Sp+awOqJYxf+HWspmY8Hi+SKGLOTyM+9UWc9m7Mj3yC0gsv4338IRCgdmUE/ff/A7GYjeMP
      YP2z38FxqbewTnCDe4qtQandevhtp+5US+KNjrTP59vR/oZhoKsKgd/6HFJnO+u/+BuEXSUE
      0UL81c9iHz6K6/gDFH/jt8iGmvH/4ieohaI4uo5hGAQCQYRLpxE312BzDePEe9j4gz+n84Ej
      CD4PngeOYHV0YlcWEbp6QVYIBAIoitIQwP2GIAj1UdJdjPtbVr3Ls9UPv9W4fzWbQRoehAOH
      wO2h+c//b5ynvoZ94SWIxrBsCwQB5YNP4Hh9VENRbNveDnfWalVcxx9FWJ7Dae+hPLFA4h99
      GkEWsa5cQ1ycQxgZovRjP0H2i18n+eRPIsfqAYZGF+ge42ZdoC12e/Fr0zK3BbAV8lQUZUf7
      6oZB+b/+vzjffArho38H4Yn3I3/7KzgtnZS+/gwArn/9WwiqG9Myt8O8W1+xLQdYEAQUub7G
      QeWFlwEBZWWe2hf/EtnnQlFA+sw/pTK9jO+Hf4hIsqn+Fdy1q9Bgz7DbI76vfvsHAoEdvflt
      x8GyTMrlEvQdgI6r0H8AafgS4vQozuIMVKs4ooRw7Rr217+K9ImfQu/ff8N5bD38kijVfZzl
      VbyPnACXgj3kQTq4H/VHPwYba4gd7fgGBurHt+16BOnVA2EN9j6WZVGr3biY+J1e5XGr/Vt5
      8zuOQ/X8OZwXn4VH3oXwwQ8jbKzD8CCiR0VSFZRoEN1SkFQZ5+WXEGJxjOsC2HLgRVFE1A1K
      n/8dBElk5TP/BmVtHt/4S4jd3Sif/jRCpYTxn/4Aa3iU4vOXUB84huTz1tu4Uxelwd1jq1e7
      Fe8XRXHH/fG3giiKeDweXK6d5zKbpon1lb+ApQWEnj6cgZPw9b/CWVpAePwxZDQkx0ZuT2Ie
      3I/R9xmEw0dwri/ILQgCrvERxOeexnn0ffVGHWj/4/8N9ak/RZiZRATsA8cQ/H7EQ4cR9h+A
      4XmgPl/K5XI18gHuRbamOrz635109bxeL6qq3tKXxrIsOHgMx+vH6dhXt+9DPwJtndhHH8AR
      BDANpNw6rpeeRtnXDl7PtvMuiiLic08jTI4hnHuO0O/+Jq4PvAcMg43nJ6hpMmbnQeznnkX/
      zX+OcOIkxv5jRP7lZ0GW0Q0d27EbX4Cb8WffvoJ0FxeI+8DJbpKRnYUSX82Wk7v10G+tjH6n
      ZnxqmnZLb3/HcahUK4jD16BQhPlZjIUU5T/8C6JSBnNmHufJT6B8+0uI1RLIMs71AbxAIICh
      G/XpDu/7MCDA+z50g8CdQIjqXArhv/4V7p/6ybqNM4vkXxxG7d/HxAd/mgPPfhFJvI0u0ODF
      84TauulsTpBOZ4jFom+pnUw6TTT2ypyXUrGI/yYJ1jc7VjqdJhaLUalUthdB2wmra8sEA3G8
      P7B80189N7bjNu4ER7ubSM1PUiqVePe7382FCxcol8sUi0WOHDlCd/frjxRvCUAUxe15P1uj
      v7sV+381hmFgmuabTnnYekgr1Up91ubH/y7O5DgcOAwTM9DUDB4/9B9AmByGtVVsAcyPfZJq
      OI5z3b9xba7i+u5XcVq7MH7ps6Q+9fOEfvancHW1YV2+Svgzv4D2R3+M1NGG9JGP4JgWbr8f
      /z/+IA7Q990/xReP3V4UKB5LEg4IXLgygmPWSM3NYrkkMkWTuBdklw9/0M36ap5YcxKrkqOk
      g2TVEGQXugVe2caRbYpFnfTaMr54lML6GsGQn7Ljpjvu5pnzI5w40EnFFJGtCrI3SjW/Rqok
      4LIK6CaIgoRLtLFUH9liDVmokF7NIasujEKFg+99jKHnvwOBNroiPoqWRqmk4xEtcPvxuqqM
      zayzkl6nqyuB6I5zpL/zrV6aXcXtdjM4OMi73/1uwuEwiUSCa9euMTIygiiKdHV1vWafrQd8
      6+G/0+xkNukWtm2jV6p4rp5BzK6jv+c9GG43ysBhYooJzz2N8yp9OoqK3rV/uxsnSRLK8EXE
      zDpk1jGPnCL0M38X17FDmM+9QO2pb2J/93l8zX7CBxMYwxepfPmvAch97wJCMEDzb/7q9rKw
      b1kA/nAIl8dHQF0n1NxOrlAkEVAJBEG2a8iqFwuRUKBGOBRms5wlHIkSDfoxaiVyFROXoyG4
      fZSzaVo62inWNFrbmpFVL15bQHFLHOzvIdnSDAik11O4gwG8sg9bNYmE2sABvVxgLVeho60Z
      S9eRJDexaBulzQXOTC1yFGjv6kGU3Wxmi3jdAuFwhFp+nWg4glsJ4FVsPFE/0bAfW3jnFKby
      er0MDAyQy+VYXFykra2NU6dOsba29qZfuR98+Hc9/CmKyLKMz+fbcduapiFvrKBMXgPA/cxX
      kF0etI99Cvv5p1nOTcOVb9HyyV/DjjVhxZoxZQWuC8CyLYwjDyKkFjDXM1T/6T9D/ZmfQWhO
      oH7ix6mNTuM5foiIsYiY3UAs5nD/9KexFRUplkSSJbweD47jkMlmGgNhN+Pi2CIu191blrW7
      JYzfc2ti1DSNQqGw7QNsvTm3HtbdFEE4HN5RdOnVX6J8Po9YyuN9+q8QjBp2tYpTLqI/+ZM8
      VbvEJW0cBIGTiUd4sv1Htvd7dWRLEAVURcX+/vcw/uRPUH7mZ6lKfgTLxHz2eTw//jFCq0NI
      xSxWpInKBz6OfX3gbGuEOp/PY9sNJ/imjM6n75oTfLS76ZYf/i1ePUNSEITtJPjdfPgVRdlx
      aHW771+pgKHjqB4qH/oE8vnn4YWnEdo6KLW1MzT+FbbW5x1KX+a9rT+ES6i/gLZsFwQBRZKZ
      /+Xfou3zv4D6+/8XjttN7jd/j8jmJH7ZQMyepPzN7yP392L/+D/AEUUc28bn8yGKIuVyuT5x
      z+XaGwIYGRnh8OHDb7KVwdpqgeRrygsapNNVYrHg6+51M4f5bjrBn/zgUUJyjaGhId73vvcx
      NjaGpmmk02n27dvHoUOH3rTfvfXQ7Gbhqq05OOoOl566YdrF+jK+Z/8GAKN/AHF2FMuysJGR
      vSF8ih9dyxA0BD6+JBHZ/AbGqQ9i+cNY1KdcKLLC4mf/d9w9HeSf+h7Rv/8/YG1kwO3GfaQf
      xkfqxzUtDN1BvD49QlXVehUMw6Baq6G6XHtjNqhZ3mB+ZgHF5aVa2sBRwxhaFVnLY3rCCJqN
      VlnHn+wk5A4yNz7I1FqFlpALxSVSMkTisVZSl84hKh4m5hbp6e0n5Bap6CAoCpJRxrJspmZX
      3lFOsKZp25Uc3G43Y2NjtLW1MT09jWmanDhx4k3buNlb33EcbMdBusVBMkmWdxz23Eq5NE0T
      cW4coVqfp+S6/AJIDkJrC7oDytQkP97zSa6Nf4PDG0UOFAwoTCPUypjt3YhHHsM58zIEA8Q/
      9SPIfg/lc1cQBIGVX/ttYv/wU4iPnMAqZCDahFAsYv3NVxGe+Q7ikx/G4/EgCALFYgFw8Pl8
      ONyGE/x2UTYUPvzDTzI7MoboCeOVHRxPBFXwg8tDyB8inwmg+IKosoqpOexzhUnGI+AYpFZW
      CQQ8uMV2HFHhgKwSb0qSiIVZWVnB6/WiV2VMy6G33/2OcoIjkQjhcJhqtYrH4+HYsWM0NzdT
      qVTQ9VtfUfF1ud4/30n3qO6E2ig77EltRW0Mw0DXdezO/chzY2BbUC7Vs78cYGwYMbVM5//0
      9+mudSG4sjjM1dtwexAMHWHmGsY3voF05Cjev/fToOm49rXiOA7t/+7XEWMRcqtjWFoFqbpB
      0OPZ7k55vd7t8i8CAoFAAEmSSDec4JtzN53gpojvLQ2C7WQ26M0QRBEBsGz7NYsRmpYFOLhc
      KuEdJLqYpokoivU6RRdPI6zMYz3wOEgi4kYK4dxzWKk1ZFtHaWvGcXuwikWcpmacRDO2xweF
      NI4gYMgydraA0HIAqa+P2q9/DgD1c79B5h9+BuVjT2A8cWj72OG2I0iagZpowu2pl0DJ5/Oo
      qorb7cY0TYrF4jv/C3A3GZpZx7XjZVZ3j6awj2M9TW95/9uZ7izJEoqs1OsFvaoMSj2SJCBJ
      Ct7rD9QbYVkWcxtzbJYz9MV7UWsa0re+jICDNDuCIAlY3Ycx1zZRg17EYAIBEAwda2MDCgXM
      9/4dqusF3N2HsMZexi6UKf/JN5Dsp/D//r8Hx0GfXkC6cAnPxz+G68EBSqpe/wKoXkTVg+gN
      4Lnu35VKpRt8l3K5/HZMh65y5cIkya52WhJvPlK8trpK8von/lZGcm92/HQaYrE3vmE3O9ZX
      XpzcBRtunaPdTbx3oJ2nn36aQ4cO4fV6ee6552hra8Pr9dLV1UUs9sYVI7am+r4VTN3Asev5
      ta8W0dbIcjgUuqm4bNvmv13+Kn9++UtYtkV7qI3feOyXiEVikN1ENHQER0JcnML1wAPI2TUc
      ywTLxEHAyuYREgmkL/8RdqAT+yc+jth7HPOllzAyFZT3nEJQZbyf+jGsL38TVJXghx7HdfU0
      vkicyuEHEd0+HIftfn+1WsUwjO3SLNVqtR6arel3WgAWum6TWV3g4ksv09vfhSrC3HqRZEBG
      8noop4u4PQqj0yucfOAIABuzV1mpunC7PGimQ3PMD3qGjUoIuzCLJxymWnNwKX6CES8zg5fo
      e+BxrPwyizmTqMfBo6pUHItYtJ/06CA6CqnpMZqbu9AEE5fHg+mohMQCWc2DY9YQHfB4wFHv
      vhNs2zaVSoVKpUJPTw99fX14vV7GxsbIZrN88IMfvGPHtkzzdR/ygP/NaxQVqyX+Zugb9Swu
      4CFXE/LCGIWTp/BIPlzPfQMn1oydbAXbRhYlBFGCYLQ+w/Pkw+jrKcSFaYKxMtZ3Fejpw9vd
      hfLF/4wQCqJ8+Q8Rl2aIPNyD/r734PruXyNtppA2U1htPeiqD4+nPnHOtu3tmZ+yLGNZ1nYp
      yKV//nt3WgAuDh07jCpVEV0+mlta8Eg2tpzDLZrI3gBtyU6qxTSC5CEUrvcrQ4l2ooEYpVwJ
      zbRAL6J4YxxsayOzauHyePCHYtQKJYqaTu+Bg4QDXgwxTpcPErEQmDrLq2sE/C4qWYdINIb3
      wEF8vgjBsJdcqYppQcAdxlzdINjaTcgjU6qWsLj7TrAsy8RiMbxeL6VSifb2dsLhMIFAgOXl
      my9kfSdwu91IknTL3at3heuVOxzHwrl6GieTwT54tP5H8f9v773D5DzLe//P26fP7OzM9l2t
      tNKq92pccO8N2xiMCdh0EhLISSjnQAIJMcmBk/ySK+dH4BAIh25jHGNsXHAvIGxsq7eVtKst
      2ja7s9Pnrc/5Y7Sjla1Vlx3L+l6XLtnvzLzvM6On3N+7fG8Z2yqhGEHUA54oub4Bb/Eq+N1T
      eH29SI/9Er21vsJN1lyMveYi7KJNuSdDuAUYHcXe148SkPFkFTcYwTAMDMNAUZSq6TN5GmSm
      KPU1//UfnyXBR8KbRYKDPo1ZTTUn9NlJdehTGfSSZbla6XW0+9q2zX0bfslPN1RMoA+0vpPz
      wu1Iqk5g916sJ5/Bau8ksmYh2Bbqto3gDyIvPQc5n8HsXIqZaEA1S6i//jnulo1otWEkz8VZ
      eg5yTS1OTy+ZXz1BZNksLOFn6OdPk3zflYz/djuxj72f5BUXoqpq1SEwWQBfLBYplUqHmnZn
      F8D0eLPSoW+7ZNEJf/ZkvUBToWlalTQeT7qzaZk81vUwG1OvcGHrJSwel1DSI4hABOnxh8Eq
      8sI5SXpiHu1DFu9ovAJ34Wq0x/8TaaAH59IbCex4Bdks42k6xWXnoTzyC+jZg9IxG7mlFbe3
      F+fVV3FXnku+qOK76jKUmhj+eE015WPS6xMMBrFsi2w2CyULJ51Fb644Gd42XqCxsTGwHSIN
      9by2aG86IvxmRYJvu2QRzzzzDKFQiBUrVnD//ffT0tICQDKZpL29/bSPQZZlQqHQCZ0k/Zl9
      vJh+BhR4dP/9NOQX0OgFkTIpnA9/hn3FvWwqPIEQEhtmGQz4t2IM7OD8/l3UpR20F59GNioL
      rj9ks5ftNIdsWiwTcUA52qtvRsyz4dKrCSQqkzkQDFZLMnO5HFAhwp7nkc1mK+oVrotXNqtj
      fdssgHRqmNGRLLWFDLmcSSIWARx2bd1O09xF+EWZnCnQsfDUIAvnHV117nSiWCxW83gMw8C2
      bTKZDN3d3TQ1NR3XjnwiOFETyrZtRosjh1xLl8do3LAJkaxHrL2MTfkdGKqOoBKEyzkZcsDz
      K2u48Q8e7NqGk6yn3NLA79sVhDvKyNpGYl2DBDoW4SxYjvTScyhYCKcymX0+H7quI0kSxWIR
      13UJBAIVElwuY+7uQ6uLo0TDKOGD8ZW3TUlkfVMrixbPozYaJRqLIeMga35mzZlNPBoh2dDC
      rBktZMZGsL3TW0R+LEgkEiQSCcbGxvD7/cydO5cVK1ZQV1d3Urk9k00kjgbXdUmn0+RyuWOW
      RRdCUCgUaA92UOdrBKDO18gsOwmjI7B3D8XyBON2RV9WQsJnC+b0mRiWh1fXhH3DHVj7Rylu
      3MLTw3ur2rOK6yHyedj8B0RqFGXDeuTUcOVvWa6WZNq2TalUwufzYRgGsixjWxZqKIg8pWC/
      mlx3lgNMjzeLBJ9MEOxIHMDzvKpu51RCW8kJ8qp6nq/Fsep7mqbJttRG9hX30qa2EuguUbd8
      BXJqBOWheyi1NfPK0lp2FjYdECaGG5/PUTdSZLQhhHXN7SR/+Qju+hfI4fGeljxtHW1c1NrB
      DY91EcwUUSIBRLwO0dyOnNqPc81t+DrmousVWfSJzAS6plfNt3w+/7q0keKjzzLxvbtpvueb
      bx8T6ETwZqRDnwwBPhqqOfXCw3MrE15RlKop8rrch9d87mjYn+/j0aH7AdjlbiSoaNSO9PLO
      xJW477uT72/5JkPbnsNnGMypn8WFofOJ7v0Rpd4+4ol34AwWkDb8HmSJiCez0FJZ39OL0jXI
      bekQBwZP5rc7EO2C4F1/Vd3pAXL5PJ4nqgEvy7IOTn7HJfeHrYTXLcFYOp/YnbciP/v4W38B
      DPXuYCCjsXJxxzF/JpfPVYM6uXwORVb+y5DgqQR46dKlPPfccziOUy2HPBkCrCgKsqhYvVMn
      tSzJyMr01vDR8v6FEFi2zXg5dfCaKlOIeDjp3Yz2/JLumgCD+YrUfKlcZjwzzkRuN6825KhR
      dFbUNqPf/X8Rtkd/TZhsLk2P5hJXdNI+P/l1t6Dc8yvkZBNqsw/p/LV4wqueTBX1C4eaWKwa
      rzjkJJRl/DObGb/3MWLXXEDw3OXwN5996y+AhoYkZc1gy8ZXkWWJ/WmT+oiKPxhk584+OufN
      IFewMCS7EnlOmwiKRMMRuvrHqI9q+CJJ/IpDpuiiCwstFKez4/W1tm8UJgmwoijEYjFCoRC7
      d+8+JQR4amHJJCZLDRX59aoRQgjKlomqaUdNm27xtZMw6kmZw9VrVz+XonlkP/vaJJj6kwqF
      u7PPY89VoTNCztrN5eMpEKDc+F7++vffZ64b5B8bVyMrCulZM7GyJfRNG9H8ClJ9nFA4XB2v
      ZVtEwgeb8DmOg1cyGfi7f6Ppv38MOehHrYtT7u5HmDYiGkbccOtbfwGg+ImFVGpDczCLWfSQ
      S30iBp6N51ZUEWKxGnTMA5HnIIVsCkfIdLQHiPoVXDWAX3ZAc0jGYxzSiuRNQCKRIBgMMjw8
      zNDQECtXrmTFihVs3779lBS3OBM5irv7iKyaWmR0ePtHMCmrMv39bMfhVxsf4fGdz5IIxrm6
      fiklxtkrD+HHACzW5sPsRKZfyhHVQ8T9NezPDVYfvVcexb9qKeX6mTQuXsf3jCDKjpdQZYVX
      F7ZQMEYxvnQbnSM60ugwxpLlaOpBUuv3VfK9hBCUTRMrm0USHpGL1lZdqtgONXMaUQI+KBTo
      /9/3nSXBR8KbQYJPhgDDMQbCBCA8OMZ6Xn8gMG0GqBCCZ3a8wBcf/PuqWTUz3sQnz72FZlMn
      npiN+sR9SNEYnqpg5dMETZsXO0Lcn3sFy63Y6Jfm41xcSvDqwjhuvJ4FQhoybgAAIABJREFU
      /3wPQdWHc+5KXl3cWn1eZ3w5QT1czel/LcpmmcLYOOXPV9KlA9/4ewrf/TEAvhuuZvQTnyN2
      8+XYDz+C2zH/DDgBTiPe6HToRTNPbvIfMyTgGFodQcVUsi2rkiU4Dbbs33EIpxjMpojs7aGx
      ux8puhmRrKcsOWytNZFjKkt6HBbnw2SaLiQ3McRSuYm45vJ88z7266OYZorsVW28c0cI8Y7r
      8Ze6KDl5NFlHUzR8Pt9hecmk3S+mOcGV5gYafvUD7N88gQ0EL1r39l4A27ZsoGlGJ7HwoQR4
      UmDrjU6Hfm0d8NjYGMVika6urmOuAz4aJm3948HRjIRFjfOQJImEGmBlpIm0CjNG0iiOC2ND
      SK6LVhNjIGTjyhLZQAAMCMpBFuodaJ6EE4KVAwEu2DTKvln1yA0ryXc2EAgEMUSYQqkS3OpK
      bWS+tvKwblnXdSk//zIIge9/fIHx//UtfMUygU/eiSRJDH7+fxJ777X4LrmI0Lo1EAy+vReA
      ZVmMDvbT15XB1kPIAgzJQvZFjphvfzoxtQ64tbWVrVu3Eg6Hj6sOeDp4nndCQllHUnyWJInz
      OtfxFxMfYs3ebmpUP5qsoTo2ImaQyQ0RGB/CpxkERkyemOglGgjT2SDRnduE4c2jjVoQglC2
      iOZC22CB/XUy4+YEI0MZNpU20e/006w30+GbzXh+lHgkccg4zHye0XsegHCE0t4+PNdDmnIS
      CCGIvfda9NkzKqWSoRDlvQNv7wXQ0TkfXfLY0ydRVxOkZIHsFNGCh1eQeCMwtQ54dHSUoaEh
      lixZclx1wI7rYO7sJbhg1iHXj7XL41Soqor/KBVgQgiuJIo2kQW5gBKrTE5JN/i3thyznCC3
      2jJXDvr5z6ERfm/tYmjuMH6/yn/yMstCbezdP8oKs8g7lRiZ+jocVcFTFIyJCdaO+xmoFYw5
      Y3RKc4mHkq8bg7l/iMy//5S6b/0DIhAguvMFpEgWb2w/biyC1T+Mb+l8prJ54bpv7wUwGQtY
      MO/w9a1//YFz31ASXFcTJFET5NJLLwWgvr6ejo5jj29MhRJ+fVxDkiSk6aJdh4EnvGo6wZGg
      qir2gfcIz6WkCPyuxG4lx4hSJqO5XOM47JPzJBN++icKbNk9QNl0ANiRHMJzXdZLgo3z/HTU
      lzkn2MhEZpC2B36JYtusWxAkf95KFjetI3y4DaqxnqaHfoBXtkh9/XuEIyOoThmpfx90zMMe
      SqE3JEA9aP7557Sd9QIdCW90OvSimXWnxAs0SQZPtibA7/cfdfcHyJVy3LPne2jjo+QjGo5S
      SeLrHx5C09RKLYGA/qFBXNclW7DY2TNxyD1iIQNdU5gzo4k57ZU8ohrbz7X3bEW1PZzrb0df
      dd6045nITOC5B3OW5FwWJsbwWmZMS/hVVX3rnAC7tm1j1vyZpIZtGhomd4BDa36Hh4YIRyLV
      qO4kmT1RvNGR4FNFgid7aJ0sFPXYyPLuie2krBGUsIyuVJ4ryzJ+wyBfKrLGTtIdszAMg2Kx
      SCQUQJIyVT6iSjJXRDpY7wyxuHk+ZSaQPEFi7xCliEHUV4u7cOW06tNl08R13GrRu67ryNEo
      tLRiWRamab4uoU9RFHw+31tkAQiH0aF9SKEgucEsmUIEpzCOElDIjVrsMww0yohwkpJpUsym
      aWrvZHxkkMHRYfp37qJpZgdGMEpupBuC9ShmDkm2MYWKrhrYpTIjYxNvujDWqSDBtm2f9DgE
      oCrHNj1iekXwwBMejSOV9OSBhEbJMkHAklyIGZLK3d4ENbEY4VAIy5HZvmeIctlmbaiJDyWW
      ceXchQRiER4evYf2YZd37hKIrIuzbHlVke5w0FQVw2egqRqKolSlD6FC4CfdppZlIcsymqZV
      K+feEgvAKRVYcu4VOMUUNXqA8WKRaDSKGgjQXB/FKmQYnshRn4yhALpUWe3BUIiAFsA3TyLZ
      PINCNkOktR2hBYkEmsmmU7iqytaXX6Zj3lLC8fibLox1KkjwqYDruaQzaULBEMZReFBLuI13
      7Ywhd++gxaz8dj9eJKOEJVabtbRZPjzRyJ91XMAvxu9jwjGxbZdY2I89YhIpZQm5m+ns2sGm
      C1cy09/BivQgaq0PEavBnLu0qkpxOCiKQjAQpNTXS7GnG7FgEcgyklnGMcvYhg9JkvD5fPh8
      PsrlcvW3PMsBjoA3OhJ8omJYU3G4SLBXtpB1DeRjN4tkWUbVNHyGcdTGF+WJNPbf/DmSa6HW
      VBwKbjxGubmFaNlFEiBKBVBVnmgx+f+6XmFguMIBdCHx9RnnssKoIbC/j22rOkk3JEiO5Zm/
      cwjPF8C85nb0YKha8HI42LZN5rN/jtizG+Uvv4DU2Yn8ja9Uvv9nv4I4sAgmpdwlSaJcLr81
      ToA3C/c9d/oDYXd99OLT/ozC9r0EZrcd1jM0HYQQ6Jp2TJxDDYbYNLeDzLaXedTOEdZ9fEqJ
      EzBtJJRK5FmWEcUC7f0+hkaz1c9akuAJ8nR2rCFXF2cw6hEbGqNGqqHc0o7ieMjbX0EsXYd0
      hKi8aZpIy1YAElJT02HfoygK5XIZx6l4n8Lh8Jm9AKyxATYN5ZnX3sL2XbtZPH8uAPnMOCiV
      LjVjQ/uI1bWSjPiYKLqoXgnFH6UmEmRL98hRnnBq8OKLLzI0NMS1117LQw89RHNzMyMjI8ye
      PZvZs0++NDO8fN60r012d5mUO5EkCU3Tqi1IjwXZUp6/GHsFtVlmcfMcnh7YQy48zMXtEc7v
      NfCXbLxCDnNnN5FygUgjpKesq3qt4sTYlfTxm6HH8fBolKPc6SwivncP7AVbkvDWXTxtCoRl
      WcjvOBfPMqFYhL5exJ9+AeHzIYxK1Hhy4k/ibXMC9A8MUZ+MMzQ8iG27yBIYapmegVHaZ7Tg
      WEX6Byu7kq7rKM4ENZGTM0WOB7W1tXR2diLLMrNmzaK9vZ1sNsujjz5Kc3PzMbkiTxRTu0hO
      6uccb7p1wSzhCYfPX3UnAd3H1UvO4d9f/AU/693KjrLBx7JxdA9wHYKexM2BVn7uDFJ0bdZp
      Md7nhSHRyqvDv8Sjwt8GvQy96X7iHGiwYVnTRrE9z8N56Nd4Dz2AnM/iPfUEcrmIdM31cNOt
      047btu0zewGokVrCqTyNjUnSmQKxkIElGch2ARSNmbPChHSBo0QJqh4TRffAxH9jaVEymSQS
      iZBKpUilUtTW1rJq1SqampqOqRTxVMATXkUSUXjHLX6VjMS5bMF5BPTKWAO6j7DPRyqb5iny
      xDW43a1HiUcYy2d4JjDO4po4hiv4kNxBrT/G7t71mEaxek8hBLmFS7GKPsQD9+Lt/hmlcILg
      itWvG5vnebgv/QF3NI3v8ouR58xGuv9u5F2bEakL8RLTx1bOkuAj4NRplL5xOFldoMkuKrIs
      H9X+d12Xsllmwhzj6cFH0F2NOq2OHSPdPLj9yer7FshRvmYsxc7lWT+yi2/OKqIeiBfEMfjL
      8Cp+NSuH4zmk0mnyxQKlsklrqJ0/XfIppLs+j5TPwXXvJvyu9x62aKfQP4C1fSt6fqhSM3zP
      j6FURFx5I+5l1077Hc7oE+Bk8bc/eB7lGH3hx4uZjTE+cu2K03JvOGA2II479wc4pL3qkU6C
      olngZ3u+R9Ydr+z+CmQZp+wcakItkCuBy5frHB5t1VGzpeprWSyGNetACrOEP+BHUmRm2kHi
      jg9hGPBHH4e+HuTzDu8wkCQJrS6J9PIwypYXEYC97nzE4ABi+ZojftdT+q+7Z9d20kWHjuYk
      aiBMsWiCXSBckySVGiNREyKdM9Gw8EWjpEfyNNQFSectSvk8jc2NlIpF8rk8za2tpIb6McJx
      rEIBVRVIephSZoRi2aO1tRHX8xgZHiWVyTKzMYEarEF2ChRsGcWtkNnixH48JU7IcJCMMLn0
      GMn6OrLpNPFEDal0gZAOpidTyFfMJFsyqI2F2d47fip/ntfBcRweeOABLr74Ynp7e9m8eTM1
      NTVIksSaNWtOKortuBWB28laX9er2PnTBbe8Yhk54MPzvOqfybLM6dA1sZ2UOYw6Jb06KEfY
      a20jHNSwLJcaX5B3SbMpOxaPhEcwJRm/T6dUrvjho7EIL0TGKeRdypaJoELMMwmND/dFcR0b
      b/Y8mD0PjqBN6nkeXkMb8qYXEbV1eFfcgPTj78KDv0D6o48ipvnep3x7i0VjdO3eTSIRwdVb
      oJRhYP8oDYkwXYMuCb/CRC5NcWycmlCS/sFRWpIR+nfvYyhvMb9Op3v/KP5YPZYLueF9CC8A
      kg1uP7LRTGFkL4Oaw2hRZumcGaiaQjaXQ/NUhJmjdyhNS2MSJb8b02jEkCCbzeKU+hnIeYxl
      CnR2NLFxUxfx2hCFrIshTIbSZcxEDF31URs7uhLyycK2bbLZLDt27CAUqvi5Ozo62LlzJ088
      8QS33jo9gTsaXjvRJaQj7uaZl7dRc/4KbNvGOAbfP0CNUVmgjueSLxc5J/lOWvQO1jsvEgsf
      kFSUNcY61+KkBvCKPUjCJRoOsqZmBknbINWiMVbKUSpWIsiarCFLEkEH5FIBuX8v5Wg9ICHi
      sWnH4nkeducS3KZ2zAcfRd26DXX7ZiRAlMsQnFSV8JB3bkPUNyLitad2AbTM6MAwdMZDKmh+
      gsEI48M5WtobGB1NMa8xgQRoCjSEY+iqiuQFSRdMGprbCSfqiQYN2ksekaBKeiBDY3sHmqxQ
      yqdBb6YwMUrD0sWMjo6xsD3JSCqNJMuEQkGMcAQsmVmBmgNktp7RkSHitU0UMxZqXQva6CDx
      +iYCAR+ds9vQdB3HLGK6Egk5QywSAPWNsfv9fj9r1qyhoaGh2sJn5syZtLW1nbQC9ORkH3vk
      BRJXnXdUl+as6w/KrU+aP0f7TFtsJlc330JP7/N0DDq0hZuRzDJ/5a2llwn+L1uZ65+B5gp0
      0+GSLo8n2wQNapSPjLUjIbGvz+LFmY1sLL5KzIjQGm0GYN6eLIblIF56kpFne/BitSTu+sK0
      YzEMAyEEjqJRfvgxDEVB+dTnKi9qOt4rr2LefS++VUuQnn0Eqb0D9y++dJYEHwmmaR5zN8T/
      KngtCZ7sF3w0aAeCXpNxgEkifNTn5bJIP/pnpFIe4Q/BjE4ku7Kb7w1KNJckbMdic+8mfL/d
      SbMeYOLmtcy34jh45AMauxbPpL/YjSscPMnFlzeZ0Ztj8TAUNnVhB2uRPv4n6I11hEPhw55k
      U7NfR7/9QyS/n8hl61A2/wHz0adwegewsibG1Zdh5EcQMzoQt9x2lgQfCV/+j2fesiR4Ese6
      v01mUZ7MfljQPEq6RdKuOJLrtBh2bpQvTzxHXzCHfEmA96YCFOsKuGmNR6LDFBWXeGqQ1mAz
      iqTTV+7j0of30LI3gzmjHWtgFAJFZL8+LX8xLbPS0mnrduTWFqRQCAlQH70Pec92dM/Ca2wk
      8JnbkBctxOnaS/7LdxGat/TMWAAbXnmRlvbZFLI5FNfGDkYx7BKxZD258RH2p7I0J6P4onHs
      fIFcqUQyGWd8LI2iGfgVDzUQZnw0hedYqOEaWusTb2kSfCI4kd5inqby8urZ5Pq2EHMijDUJ
      GnNQ9KksbVjNpt/dTZ9bUWr2ZIkHZgiWBQS/zw2AHkD1bMatNA3+OmRJxvQs9s6J0DpYxh4Y
      RvUrSOedg+3zoaiv1y1yXZdMZoxyOoX7tW/gu/xSwrfdjPzbpxEDLkLVMCeyOO0dyJFadMNA
      bm3CuO4q5NbmM0gc18mBrlHIuMSjMru697Njxy5C8Qbq4lEmJtLs3bub8f5edE2wvTddqZF1
      bbp272Z0/x7QNfIZj0TyjZl4U0mwLMtVEmzbNk888cQbMoZJ5PN50un0Mb/fEwLXdXli3yM8
      UnqRFxJFtg3vxJEk+qMSobKHsWMDsea5yFOq0OJ6mEs2uSyijWWRpayILCPuGpSK4/SW+/Dw
      qCkDqoY1MIarBeGyqwAOW8w/nh5haKSLCTtN+Ysfw3fTdci/fRrpoXvxunZiXv5eylkPe2Sc
      1A8rTbqJRjHuuB2i0TPjBKiN14IapqEmDDU1jGcLzG6vJxyvJ+jTyMgysVichnAMVXhoPp1w
      DehyJU/Lr8sHSHuQ+liMidQ4/rrTvwhOJwk+ERxP9/eBkf1894mfUartRwuAarp4AYcl33wa
      /4XnUWeWwEszt5jnQ1IrP/YNomkqFzYuI+SfxWigknqiyipXDEYI7t/PxgaJQNpl2b4SoqkJ
      2Ugir1iJl6xH5vWS7RURrMLk/1CzczP6+udx5yyBQACpVET95Q8J/8UnyW/poX7tCtyhUawN
      W9H2bgfORoKPiLdbJDgQCKCqapUMT4eyaXLz1z/GrsFuFi9pYsnsJBd/p5uWUZOgT8ZY0El4
      +dxK58dykYzq8i+dFXPyNt9laJJKSi+R1WxU22V51wRGwUGsf47U3hxceDnRj9yOkGSczduQ
      WppQE3Ei4cghxNxxHPKDfYyOdOF4Lu33/rzygmEgIXALJbyJPO4FVzD6g4fR1q5CW7KQiX//
      CfFQpWjojDgBThfu+vH603LfN4oAHy9UVT2q/9/zPHbu76JnrA+ArVsG+fAj4zSOe/iuvhy1
      eztebzflFctQZzTiTYwTHO6jTq1lxBljwBygJTiLiBemeSRNYvsuNMfFmrMEkainNlHPRE2U
      vvf8KS3f/Z9kv3QXvhuuIvAnH3mdnml5ZJDQ0w8Qti2GZs5gbPZMwqPjKJ6HaplIdXWIc69E
      nPNOIrMWM/Chz9GwaC7xmy7HWLcCZOUMWQD5Qdb3WOhj+0gsWUQMD1syKGfHCUcj2EIlnxlE
      OAaeItOQiJDOmQR1kHwRcmPDxJL1aBKUS3mcA5Hg05kOPZUADw8P09fXV/FjO86bQoChcnoc
      yf0phODVod/zXPYx7vjAuex+qovawTLJpEGoPIG+cT3yhRfB3j3Ya87HVjW05/430tgIt3Xc
      wgApGgbSjCyv2PJFXwClVMItFqBcpHTjhxn4yOep/9qN1Hz4VgiHiPzdF5HbmtFU7ZAFkC/k
      IZdBsi221zo8Fd+BWCcxj3V05iMk+/Zjtc5l7IcPUrPsHEr7x9AvfSfK2DDebx5GescKRFvr
      mUOCFRVU1SCXzZLNZskM78ZUouzu6mJ0tNKRpJTNMLRvD3uGM+Da7O7qYrh7E2XJx0svbWCo
      r5+xbJb8gf5SpxNTCXAgEGB4eJgZM2acdgIsbGfa1/x+/xF9/7ZtsyH9ezw8/C58PRPmy/Ud
      LO1sIdBag7RwMbYaolQQOM88R/kzn0YMV5Si9a1b6NjQjTTF4PY0neLsBQhVQ9rXhdrUQOzd
      V6MqELj8AgQgL5qPWhs/JCVjUo7dTTRidyzk5WYPTwaBoK+4k+jvXsG66Ho81UDq2Q2eR3Dl
      QhIfey++4jDBWh350UofgzPjBPDHWdDqIFrqkFQJp5DFjdVRyozRMXs2JRtiYR8i4RFIxUjU
      V3b7gE/FVQOUs+O8Y80SBofHqQnpiDcgEjyVAEuSxIIFC2hvb6e1tfW0EuD0c69Qe8na1/n7
      j1RzOwlZloloMSbscdwpKguSLOOf30b5nIux7vkVwYBAGe6moMhY6y5HGuxH3fIKHuB35hB6
      dj3OisVESiboOk5DC268FVEsovXupvjQLwl+7W+QF86v9Eh7TVlqqVQkldqL7ZSJt84gnNrB
      BHkAmvalUXfux8tOwL0/Jh4qw+aXYSSFetHFMKsT9u2Fjkpx1FkSfASciSQ4GAxSLperqgmT
      UFWVSOToini9Yz18e9M/UbLKtFshbnPmEeveDYCjB2HRGvTeXQBYTbMody6l+MlPEUyqyE2N
      eDffgfN/voU8bybywk68XJFyT4Zyz1BlfCsXYL+wHu3Si9EuPA9PVYhGoyiyUl2g/fv3MJ7u
      B6D1maeRsik2LKzBm7uMVf/xa9RSGffSG3AyBXj6N3jhOO7OLpTrb0R+962InTsRPj/2xFtE
      FeLNwqlKh754xUwuWTnzFIzo2KAoSqWy7UD25GTV16Q2qN/vJ5fLISsymqZX63+PBiEEm4Zf
      oWhW0pm7tRwvJhUu69eRbAtZkfD69x38gM+HPZ6Fiy6huK8Hdem5aE2tSAE/4rnfIZauobx7
      AOEJov/t4yBAikWQmpvJffGrhGpi+M9Zjaqoh9j/hh4Az8MYHkYulfBZgpW9CoUFnchtXYi+
      brymVljahPzUI0ijA3D5FcgXXYwoFil89R8AKM9ccOYugMHBIXTTRG5IUM6UUbwSvmiU/p07
      cYP1KNYYLTPnkUkN4/frKL4obimHostIapBYOHDKIsGLZtXR09PDtm3buPzyy9mwYQO9vb1M
      TEywbt06FixYcPSbHAccx8GyK0JUuqaj6Tq+KeTW87yqOoKmaydUMzAJLxxDhGuQ0qPI5SLm
      rj8gkkmkcy/A7FxC8e5fgxFB9SSsZ39L6YnnEXu6CS+fDa3t+Jatqt5LCIHneciLFxD+2l+j
      LV2I3+d/nfdHVXw094+j3/8LiMbInLOWciiEO9yDcs3NaGgI3QBFRsxfXKnJv/ndFL72T+gX
      nY+6ZjUAiU994sxdAMVcmoGhNCKXRpd8+BW7koId9KPUJPBKgrGezcjJ+UxM9JEpjhENGmTS
      KSKJJmLhU9siSdd1MpkMuVwOTdO4/PLLeemll9i5cyee57Fo0alrjue4FaJbLpcpl8vV64qi
      oKgqqqLgCYGqKGhCQ3DsKRCrRQt7shIDYYmmSDtr8mGk8RGQJLyyhVTI4qkCT9HA84jdehWe
      poN5JQDWb19Eli7Bf+Ul1cIby7KqtQtCCAw9gnLxBYftWjl5iqmqgQQ4QsHRg4R/9HPs9lbE
      BzoofvVrAPj/4WuIVe/A27UD6YBYmLdtC3pjAvm6GxCyfOYugJYZHbS1eTjCYXQsj09xD6Rg
      K4yPT5BsqIf6ekaGhojGYtQ2hAkaGqXaGBanXhhrsvDd5/NhWRb79+9n9erVjI2NUV9ff8qf
      N2njT5JbSZKqptBUea18Pg+SRCJee1QSbNs24d/8io+OSRSStSh/9DGMl58Fz0UAuU09+BJ+
      FE1C/vXdcCCybL//z9AaWypm2U3XV8c1iWMt+nccB69QQLrvHsScTqwPfppdH/gSc657L5Ks
      oAVrIFjDQT+XhPuLu6F3H3LHHIJ3/RXOF7+A+9ILSB2zoWP2WRJ8JLxV06HHxseqWpiTVV1H
      m9zxeC3qUWqAHcfBvO/7aD07cBvaKF/7fqRSHuPZB3E3baS8ZxDFr2E0xcDnR7IqadHujR/E
      v+Kck2ruMSlpUvrt89j/8g1onYH05bvwcgWkUACpkAefn4G7vk39R27Beva34DMIzG5C7NwB
      11wPPj9s2ojYuQPpuutxd3efuSfAqcCJpkO/2ZHeqUKwk8Utk5memqYhyTLC8ypyKIAiy0ed
      /JNQDA05FEIqpNG2v4wXS1C+7Fac7ftRa8soZg4nmMC781MoG36HJEnoi1dVx3Kior2KolRM
      pfkLkK6+DubMq9wvVPHSiQMVX8E1i5HjMfBVNi6xaClONAkjaTwxTmFjN7GbrwfDj7LoDCbB
      r8WeXduZKLnMm9lM2VMpZVIkm1rp3fIKUtNsGv0ymZKNX3bxtOApqQl+8MEHWbRoEaFQiMcf
      f5xIpJLLctlll52Sbo/HgsPt/KHAQeWHEzYAbAvt2YcQnqDUuRaxfQsiGUdSZNi3B3VsBOXi
      66oiW3BwYU4uhMnaY8d1EJ6o7vKT5ls0Gq2OXwhBPjVOaUcPsfe8f1qd1OiV5wPgv/Gq6rXi
      sy8hLIvA+WuQgH0f/SLJT76P4Hmr3j4LAMBzXbq6uvBFarBzGXp6+umc1cZANotuVmRAJiwT
      4ZVOuiY4m80yODhIXV0dwWCQlStXEggE2Lx5My+88AIXXHDBKfpW02Oq/T+5805OwsmJdTw7
      sqIoOOddjbXlJYRtob70NJkdw2R/9R/UtAaQJ1IQCaAkapHqmzAM45D7e45D6dnH8YSHtOod
      yOufBATW6osO27Eyn88fItMSa6hDCfpRVbWycJzpo9pTEbn9BlL//H0yDz5F4jN3EL3pCqSA
      Hy9XePssgJYZHTR7DpZZpmiD6/fTMS/G6HCK2c0N6IoMCHZs+gP+5Mn77CORCB/84AcpFovk
      cjkGBgZYvXo1q1atel0Q6nRiqtmhKAo1sZpjljx8LSRJwognKK+9iOLYOPJTzyOyeXwrF6O8
      6wrkX/wQfc4slIY6HOPQTo5CCIo7tiLd/b1K/s1ECnXzejzHI/ftewlcfC7SO84n84//RuRz
      f4IyoxXbtnEcp5qhKssyqqpSLBanHeN0SPzx7QfHYtkIy8bs6X/7LADD0AEdnz9AJd5Z0bSf
      MTN0yPuWrj63+t8//dL1JxUJ1nUdXdeJxWK0tlZ63QaDb4zk4uSuObn7G4ZBKBQ+4ck/CUmS
      MHQDs3sv5qubkVWJcFMQ7ZzzkGa0Ivr3YLXOxhc5tO1UoVjAiURRkw2VC3MWIna+Cm4ZySyh
      7NqANKvtkH7dkiRRLBarOUqTihXHs/tXoR8M9KW+/i0A6v7+c2e9QEfCF7/z5NHf9Bq80VHf
      18I0TVJjqUOU3RRFpaYmVg14eZ5HqVwi4A+cMCk1cznyP/oB0vqnUZYuI/hnnwcONbumwnVd
      ur/1E2RJELv6AoY+87fUNPjwBQShljBC91G6/g7c0OulT7yJPLpPxxxKoQYDiOT08iiHw8Bn
      v078fdfi65xZMX0ylWIcORZ5a50A+/Z2IbQghmQTqa1ndCSF5JUxgnEaklH29Q0S8asogSjZ
      1DCS51BQw8R1ELpOerCfutaZ+DSN9EA3Ob2GREijmMsRT9aRGh0jFvZVhbFOJB160aw6xsfH
      efDBB7nllltYv349+XyeVCrFvHnzWLt27WknwFMnoBCCcDhUnfxCCPKFPOVyGdu2iUWPbzJN
      wgiHUT/2Caxb3o0SDB2xiMa0TMx0hsgFq0GRIRIhetX5uD/7CeUh8yidAAAGAUlEQVSF81Gv
      eC9uKIodCCMJD6loQqCiMypJEm6hSNk0yf5+I2rQT+TaC49rrPH3XYtvTvtB8nt+xStVenXb
      Wysd2kWmuSHJRHqMXds2k5rIIhQdxy4z3N9LNFHHWCbPyGA3Hjp2PkNNIslENkshmyUYqWFs
      ZA/7+4fIpAvUJJKkB3dRlny8+upWVCB1CtKhDcOgtrYWy7JQVRUhBMuXL2dkZIQXXnjh1PwY
      R8BkSoEQglAojK4dDOxlMhksyyIYDB5y/USgKAr+ZB16YPqTpFAsYlk2vR/5PHZPL3Iug3XP
      ffjfdQ2+v/0yxp9/Gruxnexj6ynd9xiyJNP38S9RfP7lqodKCfrI/Ot3CTfGyP3r/6H86rbj
      Gqd/+QKkUIAZ37mL4HkHUy/SP3nwrXUCtDY1MJxKE4vXEYpEGEvnaKxPABKGrrCvb5DaaAgl
      EMVQVaT6GKmJFG1tbXhCkE2nCDfOJTs2QuOC+aQzKZpnLSM1MszyFYvRJMjnMyedDu15Hslk
      EiEE8+bNI5PJ0NjYyMyZMzFN89T8GEfAVJ9/4DVRVt3QsQs2hn5s6m8nC59hUCgVafjmV1GC
      Acx77sN88GHUqy5HzJsLU0/DA2uo9dt/h+fTeK1Kt9LWQvS2G9HMPO5996Fcc0012nwskIIH
      fgshwBM0feMsBzgi3qqR4FK5VE2C0w4zyT3PO2kyfCyY1BdNZyYQlo117wPIszso9Q0Teddl
      FJ9/mUBnG96TT6JccgnCHwC/r7ooxu59jNqbLkOUyvR9/EuEzluJ2pDE//KzeLt2oX/xi0hL
      lkz7fFG2KG7cgd6YoPjcS0RvvwEAq28IazhFaNUilK985StfOe2/xFsUb8QOearhui5+nx9F
      UVCnsctPRQvVY0GxXMJ2HMxyGaVskv/GvyI8KAxNEOhoYejTf0NQc3B//RDCshn/x++A66It
      qWTHBhZ0gCQhaRpafQL/vFloLQ2o8zqRGhqQzzkHVBXyhYpwbsmk547PE7vyAiRdwxkeI/WD
      +wmvXoTdux/f/NmM//8/IHTRWvTWSi/it96/8FkcE6YGv04lPM+ryI/ncoCEETm8VKHreaiK
      SqFQqJw2oSCx7/wLkt9HuFii9PP7CftclFntSMuXoSycj99VMVYsRspmEOEITt8ghWdfIvr+
      Gwi01VH+8lfQrruW8sLl+G+6qfKgQoHMxz+N7/qrMd5zE3WffB9SwA+WTfbeX9Pyt38GmlrZ
      /a0D7WOn2DxnF8AZiNNl3pTNMvl8HlmWyf/3rwJQ9y9/j6Ebr1sEEpXIu/TkYyiAuPBSCAVx
      Nm8j91d3EfrEHQSiCt5Pf4gkg7VlC8KS8Eb7cPv2IL/nfTBnEVBpj1R68DHkAwFE2Vd5XuZ/
      fZPAJefju/5qtOUVU2jSw1PFVAtf16j99J2HpH+cXQBnKF5bRDK1Cd6JwHEdisViNX/HuOzC
      ijRJ2UTXXt++1DRNnLEU4uc/rYwh2UThuz8icOf7MRbMxnnmGbT5c5FiUSQJpP4h2NsPtoVw
      PRCgtDYSuu1avN3d5B95hsQ/fQV55oxqpRuAUBSM99xUfa69seIh0pYuoPbTd+D07gdAbWtC
      kiQmvv5NAKKf/WTl+gn9GmfxXxqHU1BLp9MEAgF8Pt/x6396Hrl8Htu2q2rT4vx1CM/Dskzg
      0Lwpy7IqRDtWg/Tu2ypjCFfi71IsiqaD6NqD9NFPIBJ1KIvmo3sexrf+CWmgBxMJT1aRJQnx
      1LNY3/s+tZ++E3n2LMREhtK9v8J/y3VE//KPD+7mpomEROHRZwCILa3wiMJzLwFgLJjD+E8e
      JPlH1wECL1/A6tp31gt0psG27UPSoaded133hJruua5LqVxCQqrYNgI8BJIAWZEJ+A+6jadm
      ek66fAXikAYdYudOvJ5uvGgtbk8vxruuRcpOIL36exACz3QRszqRFy3C3bQZd9t2lAXzkRcv
      wu3tx3z6BXwXnQcHvqfS3obzuxcBUM9ZUx0HHORCbjZPuasH37L5IIG9p4/iHzafXQBn8fbG
      WyoSfBZncapxdgGcxdsa/w+B3LWW55GjkAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='MONTHLY' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='NYC citizen average expenses per category' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3d13NbWZ7Y8e9NyBkESZBgkigGSd2iEhU6zdR6bM+Lq/zoP8x/ge0XV633
      wVXe2t2ZnQ5Sq7uVKIk5kyBBgMg53eAHajQzvZrtAdVqiOD5vIh1AVwdhB/O79zzwzmSZVkW
      gnBOyd1ugCB0kwgA4VwTASCcayIAhHNNBIBwrokAEM41EQDCuSYCQDjXRAAI55oIAOFcEwHQ
      Q0RVS+dEAPSQfD7f7SacOWq3GyD8fH7/Msn3y0+63YwzRQRADznOV9g4yHW7GWeKSIGEc+2D
      DIB2q8DDf/0Dj54tY5jveK5GlUyuBICutzG7NE4sFHLoeodPxjJp6/r7aZAAfKApkG40GJq4
      TkjaZi1VJ2SksBxBgh4b9XIRye4mn04RGIhh08ukCg1iI0NUssfkKy1io8NkD/cwbH7CDoN0
      tkVfyEc6sU8gMkg2m8eU7UTDLuLxI8LREWRLx+tUKNdBtpoUa20cNMnXTMZGBylmsxSrLWKj
      I1Qyh1QMGxGfRiJdJjYSw65CNpmg2JQYHeojm81Sa8FILEo+uc/KXpLb128iWy2OkklM1UNs
      MMRRfBfFEyFgszjOZbF5+vCqLRLHJUZGBjg4LjLa52E/kWYwNoJRK5LLFwlFR9FLxxRbCmMj
      gx/mN9kZ8EEGAKbO8rNHOLwqo5Nx/vDgewzFw9ytCzSrNiLeY15tpJj3+Vjb3qc/6GR9t0X5
      IEnQ7yFV9LC3/ILVtMV//e39N6ct5/O4tSZrx048RhK5aPJqv879cD97e3vcmvKztm1QycSZ
      /Ogqqd1Nnq1u0/zsN+QSx4SDEsndJgf5NhdGI3z3h38hka9xcf433J0eJLGzzoutA8y79zjI
      twjbamRosJPXcdhOXup28ZjDYhNbK4WejfPVwjKKw8/9i4PUghHqO9s4GsekCTIUDZIvVaik
      dvFHBlhcWsfWLhGOhtje2CFzsEpg5DKjMUDq0nt1xn2YASCrXL5xj4mJAPnkFpNXbxDtD1Br
      NbgwM4psVpistVjf3MEmK5imBYpEsH+IWMBBvpnE8l9ixpal/aOcR0JiaHQCrdDCEwwxUVtn
      czeJ1Cyzs1OkzTADoxcYDjj43nQwf32aaq1FeGCIwZBOLVtDksA0TRyBQT6bG8ftC2K1qpRl
      Hzc+ukir3mJgaISwdIxR17EkCcMwsf7YAglMCyxLZvb6PNGAB6WQJzw+RrJRpT82Q2PlJXvp
      kTfttkwTSQKHL8To6Ci1coKZy5dZX9qgODNJSPtF36GeIX2Ivwk2zRatlozDoWKZBqnEAW3Z
      RTjkwa7ZMdt1DhMpgoMx1HaJ42KT2PAg7WYbuyqjS5A9OgSbl76QF90Al9NOvVpG0xRakgtJ
      ryNbbQ6PsvQPxzAqGUpNk0AgjCJLuBw28ukjaoZMwB9AkmRsmoVpqlQLSSqGnbBH4ShdoD86
      jNehkU0d0kAj6PWCakOT2iDbyB7Faakuhgci6LkDnh8UGI+NMhD2cBTfx7R5iXhdKG4XrVoN
      s1UlVWgwGovSaLVxyDoHiZN2SkYbl8tGrdqiVs5SM+2MDEWQgP/+Dz/wz4+3u/32nSkfZAD0
      Mss0sZCQ5Z8/ZxEB0LkPMwXqYZIsi3T9AyJ6gB6yd3CE0+3rdjPOFNED9JCgz43P5+52M84U
      cfm4h0iSSK46JXqAHvI/frfKvzwRg+BOiADoIRYWphjSdUSkQMK5JgIAwDJZWXhKulQ79SkS
      m1vUf/JeJomDBEYH523XS5QboiDufREpEGDqTVrtOslUHr9msLK4iOkZZDYWZGV9GcUbY3rI
      xePnK8QufURQbZPKZumPDrC+uMzw9MdUCwW8gKE3ePX0CXJwjMlhN9srm7Td/Xx0oY+FZ8/J
      Nx30x4ao5hI8X9pm9sY8zdQW8aLF3PQo2VyafNVieDiK3ahSqbWwPDYqRxvsZAw+nurn1eIW
      03M3KMVXSdbt3L4+g9LtF/GMEgEAVNKb5IwArf1txkKTeAcvohV32D2UCIzPYiS3OUqHMMwW
      Sy9XuNgnYY/NEF96SqEOxeUNRh0n5zL1Jo2Wwe6Ll4S9M7j7J2kVDtnYKjDx8W28u3sA5NMp
      JLuLdinL01cr2G0aOw6NVK3FJ1djLG8foelVIl6VnAGVosntuSkef/XP1GQ7y0urqK0irmCU
      16VQwimIFAjYP6wwMughrOmkGzrbKy/YyrTx2Q02F59zmGvTqORBdaApoDoDRPsDBAIBFNXO
      4EDfm3PpjRKlmonbpqErKl6XA03TsGsSi88ek8hVAHC6vdRzCY7yTfweD+7QAH6nyshoDNXu
      w9Y8pKWFUAFZtWNUUjxeWMUXDKBqLgYGInhdNva3Nql1klMJf0HMBHNS2SnLMpZpUinlKNVh
      oD9E4zhJyeVmwONFlkHXDWRZQZJOShqwzLccszB0HSQZRTn5frEsC0n60+NlRcYyDQzDRFFP
      Cv5Mk5P7SxKyJGGaBiAjYWFJEpgGhgmqIqMbBrKigGliIqGqiiiGOyWRAgGyfPJBlWQZb6AP
      b+DkuCc6hOfP7qdpP+owJfktxyRUTfvRIenfPF6SFWT5deauqCg/SuLf3IZ0UjukqPzxkPa6
      vciyyP3fkQiAHmJTFbwuW7ebcaaIFKiHlMtlvF5vt5txpohBsHCuiQDoIe12u9tNOHPEGKCH
      /OFVku9Xnna7GWeKCIAeksxVWNvPdrsZZ4pIgYRzTfQAp6C3qjz7/gfKbRi+MMvM+ODPcl7T
      NJCkk0m1N8cMA0lWME39ZO5A/OjlZyUC4BRUm5v5+as82agzMx6hVilTrDZxym3yNYPY8ADF
      bJZK02B4eJD0wT6KJ4zXZpLO5glEhnBIDRKpPNHYCFarTqFQ5mh/GTU8w+SQm2QqR99glNXn
      3+IdukzQ0cYdHKJVTFLDSbTPTTaZpqk4GYn2iR/an5IIgHfW4PHDJ0xcv0Zpf4MfVna5dec+
      6eMyfq+JS2nx4IdFrt+9Szm+hxXqY3lpGYfUIBDp59XSChTT+MemsWkamt1GLZ/kyeOnBEau
      ErFp2G0atXIKWYG13SJBaZdKO0r5sI5lHjEQ7cPe7ZfhjBJjgJ9B/+gkIyE7hbaT+RuztOtN
      ItERooN9yLKXa1fH2dvaxJAU1D/WDAGyLGFh4e+PcXEsis/nA0zS6RLX736CQ2ri9XiQJHgz
      WynJJymSrDIUG2Ug6OMd1w8+18RM8GmZLcp1E69bo1pt43bbyaUSVAyZsM8Hig1NMZAsicRh
      HEdggHJ8nZY7yGhsBM2ocZDMMTQ6itVq4XQ7addLHKRKDIZdJLM1QiEfTsUkkakxEPGh2V0U
      jw+o4SIa8WIaCpbewuZ2ISOK4U5DBMAvyHhdxfm+8nURAJ0TY4BfkPLjkk+h60QP0EN24kc4
      XaIYrhOiB+ghYb8bn8/z03cU3hBXgXqIWBmuc6IH6CH/8/er/O7pTrebcaaIAOghpmWhv+uu
      gueMSIGEc00EQJeU8klKNZ1aOc1RqvyT96+Wi7QNccHu5yZSoC5p1iuYVgBNr1CpSiR3D9nJ
      tJn7eIJK0cJJA/wetl48w94/SUirg11j8+U6eVNl/toUG4sLlEwvN2/MijfylMTr1iVGq8aL
      xe+QrCqxiSl2CvDxqJPlvV2Uip8+KYuhDlCoGMQGoZTPoAZcVI0AUWeNZGIDuW8GV2KdNuKN
      PC2RAnWJYnNx884n3Ll1FZvixKomeLayj8/t5/hgmZfre8iqHYeis74Tf/0oCa/Xi2ZTUW1O
      DtcX2E3mu/o8zjrxxdElfYMXOCnrHMEblJgYG0A3waapjP+nfixkVE1h4M4nyIqKLIMkyQQu
      AQRpVTNIRgNnSJRCvwsRAF3yx5LoP26cjay9WeVNs/3pI22z/+XH+2SuS8Lh7efXv/mPv0BL
      e5sIgB6iKTJuh9gyvhOiGK6HiJXhOicGwcK5JgKgh4iV4TonxgA95MvFFI9Xnne7GWeKCIAe
      cpQts7yX7nYzzhSRAgnnmgiAD1Rie4kvv/yS7cS/P9NbzGYRm6iengiAD1SlLfPp57/iwlCQ
      UjZFPHGMYZpkjuIcpQtYpkH6KM7KyhZi6Ht6YgzwgaoXknz9VZrJSyPsx/OEHQYbpQSZigNn
      M05rLMJxxkT8CvLdiB7gA+UMDPL5F58z2ucFWUVVZUzTQFY0FFnC0HUUmx1ZBMA7ET3AByo2
      Mnqy+bWjj6sTTXINiYnYIJnDPdraFMMRH4f7e1iBccS2eKcnAuAD5XK53/wd6B/m9c6tDI5M
      vDk+MjH5C7eq94gUSDjXRDFcD9neT2B3iYWxOiECoIeUSqXXS6wLfyuRAvUQsTJc58QguIf8
      r39d4/fPxMpwnRAB0EMM06TVNrrdjDNFpEDCuSYC4B2svfiOL7/8krX4X5Yg12u1v7pv17+9
      zaJULGKe4lJEq1GnLdYCfSciBXoHpt3HF1/cASAZ32IvnmRkaopnv/s9gdnrzMW8vFg94Nqt
      azSLOQ5SaeJLy/hn5pgJK6zsZbh++zbFfBHFarG+vYvNP8x4SGJpbRdPMEyxVOP63BXiqy9o
      OAeZHHCyvraN7ItQiy+Tl9zc/+QLfGJtlFMRAfAOKukDvk6liV64Qu04x7Ubk6xv61y+do3h
      6Uke/dP/xbTZWVzeplXKc/PuHXyqxtDMNKmNV5itDC+WD/AZBWyGjHf0CrWjTcoSRKevc7T2
      gsm+MIeJZRbWj1FJ450fxzs0TTmzx/jkLJciUfHhfwciBXoHkqLicDjQVBm724vDYUOTJNq1
      LC9XdgkEAzjcYaL9XiJDI7jtCq1alpfLW2SyOdx+H1L7pJpfljU8HheapqGoGg67A1/Ah6aq
      qA4Pfq+T2FgMTbXhcTlO9hSW2rx68YJKq8svxBkmJsLeQbvVRDdMFNWGIoOiyBiGBZZB27Cw
      qTLNVhvNZkfi9e16m7ZhocnQNi1URUUCJBmQFCzTOClxfv23LElYkoTeamIiY9MUkGQs00SW
      JJqtFja7A1kSu0SehkiB3oFms/PjZagURQJklNevrNP5ly+xompvbnvrnpF/vpPk678lwGZ3
      vPV+DsePjgsdEQHQQ1RFxmkTb2knRArUQ8TKcJ0Tg2DhXBMB0EPEynCdEwljD/l66ZjHqwvd
      bsaZIgKghxxmSizuHHe7GWeKSIGEc61rAZDcXuarr75m77j4zufKJ1O8r8nQWjZL46/cZpqd
      FqKZ5LP5v1oo9zaWaWKKC3XvTddSoHxT5vPP7vHd4wWi3hlSmRID0QH0ZoNKvY1DblNswPBg
      iEwqiewM4Hcq5HM5LJuHkEsmcZwn1D9I5uAAZXAAzbLIZ5I0JSduuUWhajA0FKHZqFNrGLg1
      k2y5zfDQALKkkz46piXZGIwEqFcqtCwV1axSbilE+0MUsiniK7sM3b2BJCnQbqI4nOSSCQzF
      xsbqMpeuzOFVdfJVnWh0EAWdVCKB5AoQ8trIZ7KYmpuBoJujo0MOj0pcDwcxGhWOUjn6osOY
      1TzFJgyGfdQbNepNC5/Pi2K1qRaz1OxhvFaVfM1kIOwmlcoRiQ7RLGYotxWGon2iKz+lrgVA
      q3TMt48ymDYfTx/8nu3jImMz85ilFCOXpllefIwWuYTDKrKf0aG2hzcYoqpb6OUk8oSf7799
      hG/0BhdfF4O1yglWt7OMjEY5Sqzy9NU61379XzjeWebCpRmefv17sqUG1/7Df+PqcIO11SN8
      rjZteZTt56tcvj7F8mqCsFsnXxuknq2gWCblVIKy5kNK76A7fZQbJpHAH6+3m7z84VvM0Dj9
      A4NgNll8/j37FSe//dUUicM27dYRtYiduul4821+uL7AYsrkntfDw3/9J4p1g1u37nGYzXBl
      YojNvSqOdgGnXaGia8T3d+gbjPHy+yesxXNEJ65g5vfxxmaJRvu68yb2gK59cWjePubn7/DJ
      jSuo7iD3P/s7pkaD9A1fYHyon+nLV9FTu2RaJprdgSZLmLKD8QsX6A+4iB/luX1vHoep8yZB
      sExUmwO7TaXYkrh3fYpqvcnAyEVG+oN4+4b5/O9+Q8x3UkZgd7jQNBUJmZGL0wyG3KBoOGwq
      ut5CsbmwKQqyIlHKZ0ml81imhd3pwuXx4fM4sWsak1c+xqoeky42aFaO8Q5dZTzooqXYGRuf
      oD/ooaUbOF1OlNe/2w3HLjEahM3dY0JDF/ji178m4tGYmLpMdGgEqX5E1XLiel0ZIasaTocd
      2ebl7qdfcPnSKLNXr1JP7FAUVz9PrWszwZVKFY/nZPGnRjnH7mGawdgIqizjcdpIH8UptFQu
      jg5wuLeD7Omnz2NDttnR6zWgTTyZJxSK4FQs7H4fimVyfLhHXfbgletUmhDo60eRwOOyU8ok
      SWQrjE5cxGUr8PXvNhidnWBkMESzaeBy2ckl98k1VSZi/STju7QlF0OxPg53drG5A/QPhEnu
      biN7+/FKVXItDZ/cIFuDifEYsqWzv7OD6goS7vOgYENvNdBsEnu7B7iD/QxGAjRKWfYSWUYv
      XKSRPyJdajEyHAVVw2VTqRXT6LYgTpq0FTvt4jGpssHooI+9/SP6oiPo5WMqpoOJ0Sgyohju
      NM5xKYSJrluo6ltL0s4kEQCdO8fzADLqOX72wolz3AP0nq29Q2xOsTJcJ0QA9JB6vY7T6ex2
      M84UkQT0kLX9DIWaWBeoEyIAesjD5SMxCO6QmEAUzrX3EgCG3qJer1Ov1zH+bMUnwzB4n0MO
      0zD4+c5uYXS06JR18vx+tv//T0xTP9XCWcJPey8BUM4c8ft//H989/wVleafPkSbm5uY7/Gd
      PF5fp/BXbkscHnZ4tjbr650sNGuwub59EgBGnUTq39/etBP5nQX2ii0Sh5mf7ZzCifcyBggM
      jnFlpoR/fBqruM8fHu3gCAwR0Co8+uYrtGCMsYDB2naC2OwNWollUmWFSxeDrK0fMj41S2pz
      iZqhMf/F53j1FP/y9QqWqnL79iSL360xMH2R9OYqdZzcun2ZpSfPKOaaXPI7aTsi1I728A56
      efFiE18gwO76GjO379FO7tGw+blx4xpyu8CT719g+vqZCsOrjRSyJ8TlqJ2lrTi6FmEWi73l
      52wfl5mbm+PlwlMa9RZOnwuXf5gQeXbTJYYuXEayTLZWF+mPDpAvtSkdrpAsNwgMXsJVTxDP
      VBi8cJkrEwO8fPKQfMvF5UthmkRopPfxhpysrG2D6uPigIuto2M0Zx9TIYA2hUIVRc+xvpck
      OnaRwuEWTTXInfmPxGDulN77GCCTzXLtzucEKFGTvdz99FPcVpVUOovRLrO1m6QuOfj809sU
      j8vMf/4F/a46nqGr3J3ys5tugtVmeOoGV4dCFJs1IiOzXPTUsY3e5Na4k83DFEPTd7g2NYre
      atLSDcrFErtHOW7f+5Qbc9eYvXqVKxdiuN0Oms0KjbZJq5yj3DbY3NzGkDXmbn/CgM9Gvtzk
      3mefEg2elGo43S5k2hTLVfrHZ7k9M8b0zc/wSDWyTYUvPv+McnqPXGKTZFnGY4d6o43qDPHJ
      57/G0UrRtPVx//ZHmM0mIOFxuTFqZUqNBs2WTrlYom3KXJ6bZzwskasp3Lj3CUF7m5YBYFKv
      NVhbXqKpG9SabdwuB3q1RENc+Dm19xYAbp8fmyITHYqx8vQhLfcgw16Jbx8+QgsOEvR5cHr7
      GO4PEHYpPPj2KZHRAZ5/+4Bsy4uZ3+DZgc6l/pNSz40XP7BXNYl4goRCbuTAGFpmkVcpiZnR
      KMdbT9kr1IkEAuysLFCR7EyNx3j15BGbh1nkVonlnQRIMqrmRJNBsbtx2mxcGB/B4fJg02R8
      Pi99ATc/PHpMWz75XrWQkGQbLpcTn9uJze3DoUh4A0FiQTsPHj5icGyasdmbXBlxky4ZBAMu
      PD4fkiThDfVja2V59GSBliUDFkigOpwEfWGONhcoWyqK2eDF40fkzQABrcoPDx9iuSL4/EHc
      mkow5GPm8iyqLON2OpEkCdXpRBX7Ypza2ZgIa5fI1Oz0+c/qIpgGO8uvOCzqXLs+h9fx9oSl
      Vi6C5sTlsFHKZnEEg9jkv/07StQCde5spI6ajz5/txvxLhQmLs8x8RP3cnn/9CR94fD7bZIA
      nJUAEP4m08MBnPbpbjfjTDkbKZDwNxG7RHZOzAT3ELFLZOdECtRDyvU2pWap2804U0QA9JB/
      eLgprgJ1SKRAwrkmAkA410QAvIVltXn68A989eUj8o23rDlnNNnaPejonMV8DuPPrreV8seU
      6xW2txJvOX2dQrUORovDlCiAe5/EGOAtmqkdnBduczPqwWiW+O6b73BExpgIWiysxZm5+jHH
      8S0S+1tMz92n36ew/vIJWd3N1KCb5c19hievolWPiKcyBAfH2H7xHb6JOabCGgfpKsOjIRwO
      J/vrLzlMJbj60QT1ioqtmSdTSbG4nebO/D0MwyCb2GZp85Dx6Y/Q8/sk0zmiF6/RON6gYHiY
      v3n57dstCT9J9AB/xR8vKOr1ErW2xer6Ku1WE8uCRrOJKzDA7duXyKfK0EpTMAeYvzbDzuEx
      d+/fI3O4Ra1uMHf3E8xGnZmr17gzN0M+k2Hs8jRGKUetZRIZmeLGmIud4xyFQp1KJktg5AJz
      t+4wElTJFErsHKa5f3+eVHyLWkvi9r2b1LIZms02tJu0xUzOqYkAeAv7wATVzR/46stHZCs1
      dEvC43YhySqW3qRWb+P2eFBUG3ZNBi2EVNrk0fNl+jwa33zzDaongsPlQVNVHA4Nq1Xkhxer
      uP1hfC47imZDkWWyB+t8t5ohFvKT3HvB0l4SzaYSX3nBQa6BTdMIu1W+/voBdv8ADpcbTdVw
      2FVUVaZWLdMW1aCnJmaCe4gohuuc6AGEc00MgntIn8/B5bFIt5txpogUqIeIbVI7J1KgHiJ2
      ieyc6AF6yIv1A4p1cUmoE2IM0EMeLCXEVaAOiRRIONdEALwj09DRDROw0Nvtv2lHR8s6WUXO
      fM8r5Qk/TQTAOzpae8RXz/ewjCb//L//nsNyhaPj9L//IFPnxatXHL58Sbqj5ReFn5sYA7wj
      1R1GLpWpFB24AxEks02pXKWe2SeebXNtboalJ0+x940ScTTZT2QZnbn25vGm3uD5s+eUWk5m
      J8Msr2xjKT6ufxRjeXEdV3iEoFpi6yDLwPgsUrPE5dlBVl7lqFUOaCgBsTLcOxA9wDuTGPOr
      LG6n6Iv2g2VQazRwO12Y7Sa5g1U8k/e4ceUiq4svaZsGtVr9zaP1Zo1ypU4uvkG6JnP5+jwX
      +1xsrC9TaujU6zWShSaff/EZtWyCaq2K3m5Qrhu4HHb0WlmsDPcORAC8I4fLS2RiHBWVaMSP
      U7MT8HmxJJBVFU90FuPgGc+Xt5mevYysaLidDgKBAK5AAKdmx2G3ER0dx+d24bCpuHw+pi5N
      49AUnC4XYwN+Hn7zLaHhCcIOi++erOP2O0EG1e4QK8O9AzEP0ENEMVznRA8gnGti7NRDpob8
      2O9PdbsZZ4pIgXqIWBmucyIF6iFiZbjOiRSoh1QaOtVWpdvNOFNEAPSQ//NgQ1wF6pBIgYRz
      TQSAcK6JFKhLcqltnj3fRnW7mb97F5f21wew29vbBLxOXIEBHJr4zvo5iQDoEkNWmbt1H6O0
      SbZYZSe+TF0NcGUsxJOFZSKjU8R8JgtLmzRlNx85FAyrypMHi1QkG3duTrOy8IKy4eL+J9fR
      uv2EzijxddIt7To/fPWPPD808TbirCXyZI6PyGXytC2T9dVV9g7S3Lr7CUMhJ6V8mqZex+Yd
      ZSLsJnu8S+DCTcI2E73bz+UMEwHQJbLdw51f/Wem+zUaqhevJuFye7H0Jqak4HI58NktHnz7
      LbmKjqrZkCUFt8eFzW7H7vKzvfCAjYMM4ur/6YkUqEvC4eHX/14BYHAw9ua22J9VM4z8aM+7
      wEWAIM1KBqddw9M/wlndPPZDIALgjLJ7+vjkiy+63YwzTwRADwl7HUyPiv2FOyGK4XqIWBmu
      c2IQ3EPEynCdEz1AD3m1eShWhuuQGAP0kK9fHYpiuA6JFEg410QAvFcWpmm9/tfk7bnmX95m
      WSamSEp/MSIA3qsaa2txwGDx2Svenp0bLD57Sb2aIVNsY6bX2Mj9sq08z8QY4D1L7a6Ry+1R
      LEuMZg5YXN3BPzBOn1JmPZ5kYvY2AJtLj9lMuvnsYy+La98Qdzu5e3mYJy9WGBybpp3bJVNR
      uTE3xcrKAsGBKRq5XcotOzfv3sIpvspORbxs71lkZJL5+VtEQ252VpYpN9tUKmWyuRymXmF7
      NwXA+KUZ5m7dIuhycOXmJ4xEPGSPEkzf/pwLUS+FYpXi4Qapcpvg8CWGA222to/RWxUazS4/
      yTNM9ADvlYI/4EXTbARDAQL+EIVXO7jdblx6A4cpEwi6cUoKmt3HwbNn+K8M4XPK4PUS9PTx
      /PlDCsMTOB12+mNjeJwONM2O02VjNBaiKbvQxC7ZpybmAXqIWBmucyIFEs41kQL1kMmoD+3e
      pW4340wRKVAPEcVwnRMpkHCuiRSoh1SbOnW92u1mnCkiAHrI338jVobrlEiBhHNNBIBwrokA
      +JEn3/6O40KTWiXJzt7bq9K2t3feenxjZYlatUCmUPuL47mDbQqtn72pws9AjAH+jNXKgBIh
      nT3G1QfNpkR8/SX7BYPLFwZZWtmgf2yGRj7Fdw/j9I1fxW9mWdlNMXX1Bo1GHcNooxsaOysL
      JKsSN65fo1nJs7T9gKGRi8Q8Oq/W9rkwNYVhKvR5JCoNi8TeOqarn3G/g3ghSyTcx/b6Bv6h
      i4wFZRYW1/H0jzMRVlhc2+PC5Y8oxdfJ6S7mb15GVEOcjgiAP3O0skyqqWBuFImFJ0AvctRw
      cPfWRV48e8qtu/dZefkcFCfX5z9iY/WAfLPC/Xu3ebawhFOBVqNEIZenqAe4c30EZJBVBx/f
      nmNv+RlLG8fUVQcHx0XsZh29cLJz/E66iNPWwt/0oA1fxGuVaJomW2srtIcj3G097n4AAAJa
      SURBVLo/z9LzdRbjcZqqk4N4AqXRQJI0dAsUsTrWqYgU6A2LjOXhVzfnmIz6qeug2n3YW0m+
      /WGBkNfFwwdf05C9uFxu7JqKw2HHr7b5+psHuIJDaJqGLCuo7hBqaZ9HT1/SMgB0Fr77GkPx
      E4n2IaHg8/oY8WnEmzaGhyM4ZRm314/d5mEg4qfdamBYEi6nA69m8PDBd2SqbaIDEUxLwefz
      oqkK5UL+9f8hnIaYCT4D0vF1lrePGByfZXqs/6/eTxTDdU6kQGdAZGSKL0bE7o/vgwiAHhLy
      2LkUC3W7GWeKSIF6iNgmtXNiENxDdF3sFNAp0QP0kMWtBCWxMlxHxBigh3z18kBcBeqQSIGE
      c030AL8Q0zSxLAtJkpBlGSwLC5AkMYXbTaIH+IUsPf6Sbx5+y3o8fXKglmE1nv3Jx2WOj2gZ
      kM8eU2uKQe7PTfQAvxBJklFVFUWW2F56zP5hCtf4TVbXVpgZ8rNScGCl18hUNaYmw6yt79M/
      PM7+8iNs/VeYjDrA7uLlox+o4eSjayMsP96gZXPx61/dEW/kKYke4Bfi8PVx7foNxqNeqrqX
      z+/fxmNXqVQq6M0qxVKFlubj0/vXqedyGKbO7kGKqdmPmL9xFb1RpZWPo8auc2PUzl5B58Ls
      DSb7fYhtMU5PBMAvRGrXePL9IzbiBZxKmW+fraCoCm6pxffL+/j9XjxSg4ePFpAdDlS7l6H+
      AE5NZmFhEbvHjyM8hpR6yYsjkwt9HlwuDZfXK0qh34GYB+ghohiuc6IHEM41MXbqIRcHvfz2
      zmS3m3Gm/H8JhKOCvMwRYwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Number of riders per age range - January 2019' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dd3Qc53mvnynbF8CidxIkQRKsYidFUWITJapaki3HduTIsmMlTm7iOLmO
      YzvXx3F8ktx77CSW494tK5JtRZatLpEqLGLvBQQJgCDRe9u+O/PdP5aiCKITix1gd55zeCQM
      BjM/YL/fzFfe730lIYTAxCRFkY0WYGJiJKYBTFIa0wAmKY1pAJOUxjSASUpjGsAkpTENYJLS
      mAYwSWlMA5ikNKYBTFIa0wAmKY1pAJOUxjSASUpjGsAkpTENYJLSmAYwSWlUowVMFzRdoy/Y
      S03HBS5119HhbaPL30lYCxGMBAFwWJ1k2DPIceWRn1bA7JxySjJmYFWtBqs3GQ7TAMMghCAY
      DXKxs4bD9Qc40XiUlr4mBGPfQCch4bK5mZdbwfKSVawsXUOaLR1FViZRucl4kMwtkQMRQtAd
      6GJPzdvsufgODT2X43Ztm2pn7cz13D5vO7Oy55hGmAKYBriGvmAf71Tv4I2qV+jwtU/afWyq
      jWXFq7h/8UPMyp4zafcxGR3TAMT696ebT/DLQz+hua8xYfe1qw42lm/lw8s/hsPiTNh9Td4n
      5Q3QG+jh18ee5O3qnYZpKMko5ZPrPkNF/kLDNKQqKW2Auq5afrzvu9R2VhsthUxHFl+642sU
      Z5QYLSWlSEkDCCGoaqvkB+8+QWt/i9FyrpLnzucvNnyOeXkVRktJGVLOAEIIzrac4nt7v0WX
      v9NoOYNwWl383aYvsqBgsdFSUoKUWwmu6bjA9999Yko2fgB/2Me3d3+Ty911RktJCVLKAK39
      zXxv73/S6eswWsqI9AS6+f7eJ+j2dxktJelJGQOEoyH++8gvaO5rMlrKmKjrquVXh39KRAsb
      LSWpSQkDCCF4veoVDl3eb7SUcbGvbg9vnn+dFBumJZSUMEBLfzPPnfi10TJuiGdPPEObt9Vo
      GUlL0htA0zV+ffRJgtGA0VJuCF/Yy/Onfmu0jKQl6Q1Q1VbJ8cYjRsuYEPvr9nChvcpoGUlJ
      UhsgqkV46czzhKf5QDIUDfH6uZfQhW60lKQjqQ3Q1NdIVXul0TLiwqnmE1Nq1TpZSFoDCCHY
      U/sO/rDPaClxoS/Yy+6at4yWkXQkrQGC0SDHGg4bLSOuHG04RCgaMlpGUpG0Bmjpa6Kxt95o
      GXHlcncd3VM0hGO6krR7gitbzxgtYVKobD1DQXrR0N8UAsIRaOuAzm7w+kDTwGKBNDfkZUNO
      FijmVsz3SFoDVLUlx+D3eqraKtk8d9vAg+81/LPnoaoGAsHYsetR5JgRFlfAnJmmEUhiA1zq
      qjVawqRwqeviwANCwOVG2HcE/KMs9mk69PTBnoNQeQFuWwueDJCkyRM8xUnKMUAgEqAn0G20
      jEmh1duCpmuxL4SIPfXf2Td647+ezm54/R1oahn6bZEiJOUbwBfyosfpQ5UlmeUlq3Bb09DR
      OXjpXWZnzyXPnY9AcKrpON2B98OWHRYHS4qWE4mGOd54BIFAQmJFyWqq2irxhvsnpCeqRegJ
      dJPtyoG6ejh8IvZkvxF8AdhzCLbdBlmeCemariTlG6Av1IuI06qpKqusL7v1Sga42FN27cz1
      IEEoGiSiR66ea1VsfHz1p7ApVtz2NBQ59nxZNWMtj6x6jBx37oT1CAS+sA96emHf0Rtv/O/h
      88PuAxCNTljbdCQpDRCMBMeVwW0kFFnBqtooyigh25WDLMlYVSu5rjyKMkoGGG1mVhkW2Uq2
      KxeP3YMsyWS7clhceBMnmo7GRQ8CotEwnDoHwWB8rtnZDdV18bnWNCMpDRBPdKFT2XqGPbVv
      k+nIZmHBEi521rC/bg/d/i62zruTBfmLWD1jHRl2D7rQePfibnQh2DB7I7fPu4tdNW/GdwGr
      tz/W/Yknp6tiU6YpRlIaQJUVID4zG0IIjtQfoLW/he5AFzbVzunmkzT01tPubcOq2GjqbeRi
      Zw1t3lYiWoQOXxst/U1kODxku7LZVH47S4qWcWfFPaTZ0iYuqqEJInHusnh90JZ6i2xJOQhO
      t2cgSxJ6HHpBVtXGA0s/TJYji3ZvG0/XvMX9ix+iLGs2/oifXxz8Eb3BHgBkfyfNfY389W2f
      xxf28uShnxCMxropDyz5EEfqD9IfmtggWELC4x38i0U0jW++9iIHaqvJT8/gGx9+hE/89Hv0
      BQNYFZVvfPgRKgqL0HQdIQTq9WsAuh5bQCvMm5C+6UaSGsCDJMXn5eYN9fODvU8MOPb00V8O
      ea4udF46+3vg94O+9/ypZ+OiR5Fk3KHBBjhQe4H2/j6+cNf95KSl4bTZcFhsfH77fbjtdubm
      FwBwov4Snd5+ti1aOvjifRMzp4gGEWEfItAD0QAi7Idru35WF5JqQ7K6wWJHsnuQVNuE7jlR
      ktIAzit5+iczwa1RZDmysWqDu3dnmxqpbW/jyKWL7D5/jv+9/V56/D721ZznSN1F/njdBhRZ
      Ztf5SnoCfsKaxj1Llw+8yDi7VSLYh9Z8HK2tEr3tLHpvAyLkRQT7IBqEa2bIrqJYweJEUu1I
      jgzk9BKUomXIOfOQ8xciOzLHpWGiJKUBAIo9pUlpgKKMYugZ/HZz2mxsW7iEz2zeRprdwbnm
      Jp789F+Q4XDyxtlTHKm7yF1LbiI3LR1ZlslPyxh8cWX4t6YQAoSO8LYQOf862sXdaB1VEPKC
      GMfgWQuDFkYAwtuC3l5FtGYnyCpYXSj5i1HnbEYpXYfsKUWa5BTySWuABXmLONEYp6nHKcSS
      4uUQcQ7qrmytWMRfPvUzVEXhQG01n9m8jc//5inmFxRxvL6OT9+2hWUzytCFoMPbz6pZswdf
      3O0a8p66vxPt8n4ip55Fazo+9JN9ouhRCPaiXdqLdmkvKFaU0rVYKu5BnXUr2NKRJiFkI2lT
      I1a1VfJPr37RaBlxRZZkvn73Nyir7YutA1xHc083pxrrmZdfyMzsHBq6uzjb1EBpVjYVhcXI
      IzUgSYLN66GsFIg98UVfI5GqV4icfg5hYGi5nDUbde4dWBZ/EDm9MK7XTto3wIzMmeS682j3
      thktJW7kpxVQkF4IJe7YvP11z65CTyaFnvf70KVZ2ZRmZY/t4lYLFMRmgIQWIXzk50ROPIOY
      AilZ9K5awge+T+TMc1gWfxDrikeRbO64XDsp1wEgVnxiefEqo2XEleUlq7GpdsjNgoKJh1UM
      YO4shEUiUvUK/v/+COG9T0yJxn8twttGeP/38D31MNGLuxDaxNdCktYAkiSxduZ6ZCk5Yt4t
      soW1M9fH+sGqCksXxC+e32FHL3ESfOOrBF/9InpHFcQplGQyEL31BH7/vwi+8RX0CVb0SVoD
      AMzOKWdOTrnRMuLCgoJFzMya9f6BwnxYMHfC1xWyRDTPi/+VvyJa+YfYYHQ6IHSilX8g8D+P
      E51AsoCkNoBNtbNl7p3IcVoUMwpVVtlUvg2rck29YVmGFUtgRvENX1dIEFFOETj7BGKaJA2+
      Hr3nEoGXP0/o4I8QN2DeKdsyhBBEdZ2Ipl39dyMx/jeX3cLMzFmjnziFmZ+3gBUlQ4xnVCU2
      c7N4/ri7Q0LWCOqvEep4HqL+OCk1iGiQ8LvfJrTja4iwd1w/avg0qKbr+CMRuvw+uoMB2n1e
      ugN+/OEIYS2Kdk1Aj92iYlNVXBYrmQ4nuS43HruDTKcDu2oZ9h5nmk/yrzu+Oi0zq8mSzNfu
      /n/Mzh6hK6fr0NQKJyuhtX3kHV6qgp7jINT3MtHmXfEXbDDq3Duwb/0KkmNsG3wMmQYNaxr1
      vd3UdHZQ29VJdyCANxwiqo+/gVoVhXSbnYK0NObl5DErM4s898CIy4UFS9gweyO7pmFiqa3z
      7mRW1ii1hGUZSgohPzcW0FbfBF3dsW2Smh57U7hdkJeDnmUlePjf0Zr3JuYXSDDRC68TCPXj
      uOebSPb0Uc9PyBtACIEmBM19vRxrbuR0azPeUAhtEm5tkRWyXS7WlJSyJL+INJsNSZLoC/by
      z6/947TKFTQzcxZf3PZV0u1DhC2MhBCxt4IuABFb5JJlhBYkuOOfiJ57aVL0TiXUeduxb/sn
      JOvQq9vvMekGCEYjXOho552LNTT09iR0cs2uqiwrLGZ1yQyK0jOoajvLf7z1r3jH2U80Ao8j
      i7/d9AXKc+fH5XpCixJ68+tETscnKnU6YFn0ILYtX0ZS7cOeM2kGCGtRzrW1sftSLZd7jM3Q
      oMoyi/IL2DJ7LhfajvDDff/1fmaFKYhVsfKZDX8T23scB4SuET76C8K7/z0u15s2SDLW9X+F
      bc2nhz9lMgxwqbuLF86dobGvN27ZGeKBy2LlpsIiIpEqnjvxK6PlDIkiKXxy3Z+zsXxr3KZv
      o5f3E3jxczDBzTjTEsWK44Hvos5YN+S342YAIQSBSIS3aqt59/LFGxrQJop0mw2nfJmjl19F
      E1Nn4cem2Hh0zafZWL41bpGPem8D/uceR/Rcjsv1piNSehHOh38xZCBd3NYB6rq7+NGhfeyq
      q5nSjR+gLxSiNZBPSfY2VNlptBwAXFYXf77hs9xWviVujV9oYUL7v5fSjR9A9DUR2vdthDY4
      jHvCBtCFzqGGy/zsyEGa+vsmermEIQBdLqIg6y7S7Mbug1VllQ/e9NErsUvxW5uM1rydEjM+
      YyF67mWiNW8OOj6hLpCm67x9sZo3ay5M+af+SKiyhkWv4mLnYSJDPCUmkzk583hk1SeYl7sg
      rhs+RNiH76mHU/7pfy1SZhmujz6NdE1mjhs2QCga5feVpzjS2BA3gUbiUC2sLHJysmEHVW2V
      RCdj19MVJCQK0gu5o+IeNs7Zgt3iiOv1hRCED/6A8LvfYSpHdRqBdf1fY1v7+NWvb8gAYU3j
      d2dOcrQpORr/e9hVlQ8tXko02swbVa9wtuVUnAvsSRQ481idvZw1RWuwaDK6rmGx2bE5nKRl
      5WFzjrxwMxb0vkb8v/kEor85DpqTC8mVi/Njv0Z2x7q94zaALgS/P3uK/fWXJkWg0ThUCx9f
      sYqZGRk09zVx4NK7nGw6Rm1n9Q3HEtl0lcw+meKgm6yQAzUiiIZD6NesRagWK/a0dDy5hZQt
      Wc3MxSuwO8e/60kInfDhnxLe8583pDX5kbDe/BfY1n0m9tV4DPBen39H9fkpNb8fb1wWK3+6
      eh1F6RmxMA49SruvnfruS1S2nqGh5xLNfU0EI4Erf4fY30KSJGyqnUxnNoVphRTb8glfqMdX
      dRE9FEIaR7Y6q8PJzEUrWLrpHjJyC8Y8PhDBXvzPPILefXH0k1MUKb0I50eeQnbljt0AQgiO
      Nzfy29Mn0KbxgHesFKVn8MmVa0izDb+MHtWiBCJ+tCtpQSyyBZfNTSQcovbYPg69+iwh38TC
      Lix2B0s33c2iW7ZhGUELXAkhr3yB4GtfmtA9UwH7Hf+MZdGDYzdAm7ef7+7fSyCa2FkSI1la
      UMhHlq5Akcc+NRnw9nHwpV9Tc3Rf3FK0g0RJxRJu/sAjpGcPP2UrhCDw28fQGpOrOuZkoMxY
      h+MD3xnbOoCm6zx/9lRKNX6AUy3N4xro+3q62PnL/6L6yN44Nn4AQcO5k7z+s/+gq2V4PaKv
      CS1eadiTHK3+EHpvw+gGEEKwq66G2q7UyxwsgJeqztLpH73YdsjvY8cvv01r3flJ09Pb1sxr
      P/4Gve1DV4yP1uyEabjpxxCERvTC66MboN3nY09dbcrOJgciEV6pqkQfYdwTCQXZ8+xP6WiY
      /IGnv6+Hd575IYH+3gHHha4RrR680mkyPFrziZENoOk6b9dewBuO51z49ONcexsXujqG/J4Q
      OucOvM2ls8cSpqe9vpbjO18YMI0q/J1ondUJ05AMaPWHRjZAc38fx5onlnclGYjoGjurzxMe
      oo5Wb3srJ3a+gEjwzFjVwXdoqT3Pe3MYWuuZ1Ax3nghaaHgD6EIk/Xz/eLjU083Z9oGZ0oSu
      c3zH7wkFRh8jxBstGuHQy79Bv5IdTW85Ob4szSbACNGgrf19VHUkT17NeLDvch3Xzhr3d3dw
      8ZRxU44dDRdpu1QDgNZZY5iO6cywBjjQcNl8+l9HXXfXgJDv84d2X30CG8X5Q7sQ0ZAZ93OD
      DGmAvlCQM63mH3Qo9l6qBWLTww3nThisBurPnSTc04LwG7vveroyZF6gms4O+kOpPfMzHOfa
      2/CFw0R7u+jtMD57ciQUpPNSJWnmAPiGGGQAIQRVHW1xKzSdbPjDYWo6O/D0tKFFxrgyLknk
      l81FtVhprTtP9JppZUmSyZ81F1lWaKo+e+WYRP6seXQ1NxAeZYCta1E66s6RFjEmvaEQguMN
      QZp7o6yd5cBlldlxzoumg8smsXW++2ogXzgq2FPjI6oLbp7lJM0eS+dY1xmmy6exvNQ+KVVg
      RmJQF6g/HErJVd+xIoDK9lb6O9vHHO4wf81GyhatJG/GHFbe+SHka+peLdxwO8XzFpNTUoYn
      P5botnDOAm59+FNk5BaM6fp9zbUYtfHl1bNefr6/m/NtIb76YhtNvRGePtxDt1/DFxr4GH3x
      dB+nGoMcqAvwzZ0d6ELQH9T48h9a+NFeY9rcoDdAa38/vcGgEVqmDQ29PZR6e8Z0rqJaKJ67
      kN3P/oxoOMwtDz2KI92Dryf2gZ/duwOh62QVlmJzurE53ZSvWM+lM2OP6Qn1d8HIgaKTxp0L
      3NyxwE1bf5T/80IrfUEdqyLR0hehMGNg83rwpnQ6vBq7qn3UdoQRAp461MOqGQ4ae42JMxvw
      BhBCUNfdZYiQ6UR3IEBn/9j63LKioGs6uhZFCB0hdOwuN6UVN+HJL0LoOkVzFzF31QY66mtZ
      snE75w68TTQcGv3iVwj7jev/SxKcbgryb6+38+i6TDwOhSXFDu5fms7P9nVT0x7m9cp+zjYH
      EcCBOj9vnfeS4VA43RSkrjPCtgVpo95nshhgUSEEdT2mAUYjomu0+vrHtL0lGgkjhI4zzUPI
      70W12gj09yF0nXAgwMzFsa7R0Teex2Kz487MYc7ym8ktnYXbk01ve8uo4wDFYtDjHzjTHOL7
      u7v40vZcSjwWOn0aj67zkOVUyHQqRHVBYYaFDIdCVUuIuxensabMyd//rpmoJuj0RfnWWx2c
      aQryWqWX7QsTa4YBBtCEoMOX+FXN6UiPDmMp6Sx0nVPvvMrNDzyCJMlcOLIHf183/r5uJFmm
      fPnN2N1pbP7on3P8zRfY9esfARJLN99D04UzozZ+AGdOMYTOTPh3uhGePdbL2eYgf/2bZvLS
      VB7fkMm/vd5OKCJYXeZgbp4NVZYQQrCzyssXnm9BkeFjqz08cFMGuhDUtId58mA3t1fEp/Dd
      eBiwIaY/FOLrb72ecBHTEVd7E0Wn9o1jk+PksXb9SmZe/CFmBojxM2AM0B2Y5pVCEoglOx/J
      Yh39xElGVhQyi8thlDTgJkNznQECRumYdsjuNJwZWUbLwOpwkT1r4ZiKQZgMZsAYIGxQXIsQ
      gpqDh1BUldKlSzj+0isEvV4URWXlA/dhdcQSR/l7ejj6wksgSaTl5LD0zm1IkkRnfQN1R4+z
      8gP3JkyzPxymZMEyzu9+NWH3HIqi8oXYPPlotnQE07PQnZEMeAMEh4h3TwSdl+s5+OzvaKqs
      QguHaau5yKwVyylbuRzV+n43o7+zi7A/wOxVKylZtACAcCDAoeee59yu3QnVHIxGKV+9ATle
      tXpvAEmSWLBuM5JqR3Ibm990ujLAAEa8AbRIhOMvv8bCzRuRFQUtGqW/o50zb77N2TffJnpN
      uEHY76fjcj0nXnmNuqPHEUJQ+fYuiirmY09L/Fyy25PNjIXLE37f98idWU7ezFjxPCV/sWE6
      pjOGl0mtfGc3WSVFeAryEbqOYrGw4v772PjYo7gyPdQeOMSxF1/mzM63SMvJ4eaPPMzmxz9F
      /akzNJ6ppLW6hjlrVoEQ6FpiN4RIkszy2z+A1ZH4AagkKyzbet/VN5CSvxCmeT1kIxjwF3OM
      UGp0soiEQnTWN3DspVeoPXyEprPncGVl4u/tBUnCkZHO8nvvZtHWzUiyjN3txt/Tg9XpIOT3
      ISkKe3/1NB2XLnPytTcSpluRZCQJsgpLWbb1PpQEzgjJikrFuk0Uly96/1jOPCTHWFYmTK5i
      dQ1cBzja1MCvTyZuc/e1BPr6CPZ78RQV0tXQSE9LC9mlJXgK3g8I0zWN5vMXCPv9FM6bi80d
      izTUNY3WmloK581NmF6nxcLnb9uC80rDr9z3Jvuef5IbTLY9LpZsvIvVdz2MdF3CruCOrxI5
      lTpF8CaKOm/7wFmgjFFS700mjvR0HOmxqbzs0hKyS0sGnSMrCsULKoY8nsjGD+Cy2lCu6XJU
      rN2Er7eLE2++OKn3nbf6Vlbc8eCgxg+gzt5sGmAcqHPvGNgFclmNX9iZLmTY7ajXNEJJllmx
      7QFW3fUwqtUW9/vJqkrFus3c/MDHUYfpbillt4DNuMCy6YTkykUpWTnQAFlOJ1YDp/WmE1kO
      56CcobKictPme9j4kcdJGyGH53hxuNPZ8MHHWD9C4wdAUrDM2x63+yYz6uyNSHbPwC6QLMlk
      OZy0eM3tdaNRmDb8ymvZlQjPQy//lrrTh8cV2nwtisXCnGU3s2TjXXjyBlc4vB5JklAX3Evk
      zPMwiRVupj2KDcvCDyDJykADKJLEDE+maYBRkJDIc4/c1XCme7j14U+y+LY7OX9oNxdPHCDg
      HVsRQcViZe7KWyhfsZ7c0tnjWmxT8hehFC1Dazg05p9JNZSiZch5sYXUAQaQJImyzCwONpiF
      1UbCbbWS7Ry9vKqsKGQXzWDd/R9j1V0fou1SNa0Xz9Pd0kBvaxPB7i5ENIoUjWKz2Mgvmknh
      3EUULV6Bxe1GUhQIhRA2W+z/x4Ck2rGu/ASBpmOgT50ayFMG2YLlpo8gqbEJn0FbIksyPFhk
      hYhuZhkbjvy0NNLHM2MmBEokSnZEJl1OJ+yzEvU50HxONK8X4YsAEbh0BvadoZ3fgKoiOx3I
      7jTU/DwshYXY5s3DUlKMkpODbB/+/sqMdShFy823wBAoRTehzrrt6teDDOCxO8h1uaZVzd9E
      szCvYNSiGUIItO5ugidPEjhylEhDA9G2dhjranU0it7Xj97XT7SpieCx4/S//AqS04GalY1t
      0UIcK1ZgX7gAyTJwAVNSbVjXPk6g6bg5FrgWScG65s+Q1Pdn6QYZwKaqVOTmmwYYBquiMCtz
      6DBoIQREo4Rra/Ht2Ytvz15EMAhxXBwT/gARfwORhga8O3aiZHpwb9mCa+NtKFlZV9OKKKVr
      Uco2oNW+Fbd7T3fUubejlK4ZcGzIEkmXe7r54cF9ZjdoCMo8WXxm3S2DjuuhEMETJ+l74UXC
      1dVxbfRjwmLBdfM60u67F0txMZIso/c24H/6Y4iAuc9bcufj/NBPkDPLBhwfMjNcYVo6hWnp
      XO410+1dz7Ki4gFfCyEInj5N/+9fIHj6tEGqgEgE367d+A8fwXXLetLvvw8lpxjrzX9J6O1/
      gVR+mEkK1jWfHtT4YRgDWBSFNaUzTANch0O1sCjv/dgkra+P3v95Dt+u3YgpsptO+P1439hB
      4OgxMj74EK7bHkBrPEK06mWjpRmGOnsjlkUPDv294X5oSUEhr104R3/oxhZxkpFVJaWk2WwI
      TSN4+jTdv/wV0capWUBE6+yk60c/JnDkKBkP/jF6exV6V+qlUJcySrBt/vKAge+1DDuVYVct
      3Fo2Z9KETTfsqoV1pWWIcJiep5+h45v/MWUb/1WEIHDkCG3f+AEi9yGwe4xWlFAkZzb2O/8F
      OS1/2HNGnMtbWVSCx+6Iu7DpyOqSUjy6Tse3nqD/pZcR06humt7TQ/czbxGJ3gxyigQ8WpzY
      tn4FpWjkHXsjGsBltbJ1TmLDjKcimQ4na13pdH7rCYJHjyV+hicOiHAY775m/JcLEfpUyGY0
      icgWbBs+hzp706jZpkc0gCRJLC8qYV5ObjzlTStkSWK9aiPyrW8TOm1M9rW4oeuEGjPwXypC
      aElqAsWCbcuXsS77KJI8evjIqJtILYrCHeXzcVoSv11yKlAmJGa/9ArRhrFXjJ/qhNuyCTTO
      BCW5ureS3YNt4z9gWfzBMf/MmHZRl3oy2TJn3g0Lm664NJ317+xFr538AtiJJtScTkS5I2n2
      EUvOLOx3/RuWJR8aV5GNMacRWD+jjMX5YyvYkAzImsbGoydJv1hntJRJw7u/Hr3gU8hFK4yW
      MiHk/EU4/+gplJm3jKnbM+Bnx3qiIss8sHApRSNsBEkWJCFYUVXDzLPnpkTy20kjEqXvxXdR
      l/0Dlps+Cso0myFSrFiWfxznwz9D9pTeUHmlcSWSSbPZ+ODim8gYIRQ3Gajo97Hy5GnkaTjb
      M150r5fuJ5/Guvaz2O/5JnLW9Fj7kXPm4bjvCWy3fg7JMvrejOEYMhhuNOq6u/jF0YP4x1ok
      bhpR5k7j7udfRkqiQe9YyPjww2Q89CC6r4NI5R8I7/8+GFR4byQkZzaWpR/GuvwRJHvGxK93
      IwYAqO/p5udHD+KdRgtCozE3K4f76xoIPvc7o6UkHMlqJe8r/4itvBwhBMLbSvjQj4lUvQLB
      XqPVgT0dS8U9WFd/CsmVF7dqkjdsAICL3Z385uRxuqZ5XQEJWFZYzN0ZWfT96/9F7zX6AzcG
      x6qV5PzNZ5HU90PE9N4GImf/QOTs84i+xGefljJKsCy4D0vFvciZM+N//YkYAKDV288zJ4/R
      1Dc9G40sSdw8o4zt5fPp/9nP8b2ZwhtIVJXcv/scjuUDwweEEAh/J1rLKSInf4PWdBzCk5g4
      wZaGWroWde4dKCWrkCcx8/WEDQDgC4d58dwZjjZNr36z02Lh7vkLWV5Ugn7pEq1f+/qUCWs2
      CtuiheR94e+RhkmSJrQwItiP1nSUaM2baM0nYm8God1giIgEqhXJmY06Yz3KjLUoxSuRnFlI
      8rDBynEjLgYA0IXgQP0l3qiuwjfFxwUSsc3/DyxcQkmGB6HrdP34J6n99L+GvBDcWOkAAAhI
      SURBVC9/CfuSsaVbj70dOtA7a9G7Yv+Erx3h70IEumLFxHUNZAVJsSLZ0sDuQU4vQs4sQ/bM
      QM5bgOw0ptpO3Cz2XldipieTN6rPU9nWipiCRdvsqsotM2dzW9ls7FfCO/TeXgJHjUkKPBXp
      f+11bIsXjWmgKUkSkisX2ZULM9YO+r4QArTwsPH4RhP3d0xRegZ/vGwlZ1tb2Fl7npYxFpSe
      bKyKwtKCIm4tm02+O23Ah+vbuxe9Z2yV31OBwPHj6L29KJ6J7x+QJAmmaOOHSTAAgCrLLCko
      pCI3jzNtLbxdW02rt9+Q94FNUanIzWPT7HIK0tKRr3uqCSHw7ztggLIpTDSKb89e0u+9x2gl
      k86kjTIkScKqqiwvKmFxfiFn2lo40lhPfW8PgUleQJMAj8PBgtwC1pbOGPTEv5ZoSwvhi8kX
      7DZRfO+8Q9rddw2Zhj2ZmPxhNrGQ6mWFxSwtKKLD56O6q52zra3U93bHrTCfLEl47A5mejJZ
      lF9AWWYWaWPI3hY4chR0PS4akgmtqxutowM1L7mL7yXEAO8hSxJ5bjd5bjdrSmbiD4dp9fVT
      3dFOc38fnX4/HX7fmK5lVRQyHU4K3GnMzMxkVmY2HrsDu8UyqJszEqEL1Tf66yQ1us9H6Px5
      0wCTdmNZJt1uJ91upzwr5+rxqK7jj4TpDQYJRiMEI7E3hCxLWBQFt9VGus2G+5oiFDe6LK75
      fISrL0zsF0ligqfP4NqwwWgZk4phBriWaxuwRVHIUBxkJGAzfrSlFd07tjdOKhK5fBkRiQzK
      PZpMJPcIZxSiLc0IM+/RsGi9vWhTZBp7skhtA7S2GS1hSqP19KL3JXeS5JQ2QKS5xWgJUxtN
      I9qZ3Il1U9YAQtfN1d8xoHUltwGmxCDYEKJR9GDiIj8li4X0hx7EOmMGutdH1y9+Qdq227FV
      VCA0jb4/vED4/Pn3f8BiIfPRPyFUeQ7/3r1ALFIz/d57af/GN8deaGOC6P7pvddjNFLWAELX
      EdHEpQwX0SjenTvRenrx/NGHsZSWIDmd9DzzzJB9beea1aiZmUQcsdkwOT0d1y23DBumPFno
      Y1yXma6kbBcISGyKQyEQoTAZDz2Imp9HtKkZJT0N99atZH3qkzhWrgBFAVlGzc3FNn8+vn37
      AQGyjHvrFvz796Mner/C1AvojSsp+waIfbCJ/XR1n4/+19+IdX3mzqX32f9B6+lFzckh4yN/
      hJqfT7j2Iq5bN6B1dmKdOQPZ6cSxvAfbggVE29pRMj3YKioInZnmaRqnCKlrAAmQEvcCVHKy
      SbvrLkJnz6Lm5RGuqcV9++2E6+qwzp5F6FwV3tdeA0BEwsgOB7b5FQhVJdraSv8LL4CsgKYl
      dO3i2v3ByUhy/3YjIFmtyI7E5cbUOjrx7d2Lrbwc744dhKrOE66vx3HTUsJV5wkcO3713HB1
      rJBFtK0dyWol0hAriockgSwTrklcoQslY+KpR6YyqWsAWUZ2uRJ6z0jtRSLX5BnV2tvx7tg5
      7PnR1taBB4QgeCyxO9dktzuh90s0KT0IVnNzRj8plZEklGxj9uomitQ2QF7q1j0YC5LDjpKe
      3LlgU9oAlpJSSPIdTxNB8WQiJ/kYIKU/fbUgP+n7uBNBzctN6ESBEaS0AZSsLHMcMALWWbOS
      fk9wcv92oyDJMrb5842WMTVR1TEnx5rOpLQBAOzLlsXm100GoOblYpub/BVCTQNUzDfHAUNg
      X7gwqbdCvkfKG0CyWnGsXmW0jCmHc8MtRktICClvAAD31i3mdOg1qPn5KTM2Mj91wFJSgm1e
      6pWBHQ7X1i1GS0gYpgEA2WbDfecd5mCY2NSw69YNcStBNNUxDXAFx/JlWOdMjwqJk4n79i1x
      yQo9XTANcAXZbif9A/dDkse/j4SSm4tr06aUefqDaYABOJYvw1aRGoO/QcgyaXdvR81K7ujP
      6zENcA2SqpL5Jx9Hsk3dgg6ThXVuOWm33260jIRjGuA6LKWlpD/4QEoNiCWnk6xP/2lKLHxd
      j2mA65AkibTt27HftNRoKYlBkmJpWoqLjVZiCKYBhkC228h87DHU/HyjpUwukoTzlltwbdqY
      UgPfazENMAyW/Dyy//IzCU9ElUis5eVkPvIx5BQc87yHaYARsM2bl7QmUHJyyPncZ1Nqzn8o
      TAOMgmP1ajIf+0RSzQwpOdnk/u3nUm7KcyhMA4yCJMu4Nt5G5iceTYpZktiT/2+wzCozWsqU
      QBIikQkypy9CCAKHD9P5ne8igtOzqox17lxyPvtXqDnmNtD3MA0wTkLV1XR+57tEp1NxDUnC
      sWY1WZ98LOkzvY0X0wA3QLStje4nf0Xg8JHEZpi+ASSHg4wHPoB7+50pPdszHKYBbhA9HMa3
      azc9Tz2FCASNljMkluJisv7scazlc5I+u8ONYhpggkS7uuh5+hkChw4jglPDCHJGOhkPPYT7
      9q1IimK0nCmNaYA4IHSdcE0NfX94geDJU4aVXpXdbly3biBt+53Jv4odJ0wDxBGhaYRra+l/
      5VUCR44mzAhqXh7OdWtxbdqEpagwIfdMFkwDTAJC09B9Pnx79uLbvYdoYyMiHI7fDWQZyWbD
      VlGBa8MtOFatRLJaUzaeZyKYBkgA0c5OAseOEzpXRbi2Bt3rQ/f5xlzpUbJakV0ulLxcbOXl
      2BcvwjprVsqHMcQD0wAJRg+H0bq70bp70Nrb0Lq60Xp70UOhqwtsstOB7HKiZGaheDwoOdmx
      /3o85qA2zpgGMElpzMlhk5TGNIBJSmMawCSlMQ1gktKYBjBJaUwDmKQ0pgFMUhrTACYpjWkA
      k5TGNIBJSmMawCSl+f8Hwql2q7NXpwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='QUARTER' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='QUARTER ANALYSIS' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9WXBcWXqg990t8+aeidywbwTBnVXFYrGru5ZWlbodE9JIM6OOkT2yPBMj
      eSI8L+Pwg8NbeEahsOwHhx32g8MPionxLLInPBNjtSa6Wy11dVeXiktxAUESJAES+55IJHJf
      7u6HRCYBEmSBJEAWiPwiGARw7z3n3Mzzn3P+5fxHcBzHoUWLQ4r4uhvQosXrpCUALQ41LQFo
      cahpCUCLQ01LAFocarYJwOSdayyulzFLaZaztWc+eO/O3eeqaGFqnNF7D7f9LZ9Jo9v1n1cm
      7rKhP1eRO3L33p16ebMPuX5n/OULfIXk84XX3YRDh7z1l/VSjdyNi8Te6malqmCW1umMuFmu
      elh9eANTcOFxu/CG4qRXF7mpV4i09+OXakzPLXH09Dnyy9MUTZkzJ4bIrC4wNb9C75FjfP7F
      X/H2+58AML8wT24jR1tbG74o3Lt9g9l7E5zrO8nY6A0sV5DesIdUuUY0HGJqaoZkVy8DPR1k
      UovMLCzT0XuUwtocVU0n3jmEYuZYTOcolqucAj774pecefcjFuan2chV6W0P83B2kcHjZ6mu
      L7CWK5DsGACjQndnhJnlKmhp1nIa598+yuUrY4guhfcvvM3tG9fxtrUjOhZH+pLMLZfp701w
      7cpfYToKb7/3LebGb1G2XLx1JM7d+Q1i8QRd8QgP7t2mUCoxcPIc1ewGPqkGbX0s3B3BVHyc
      7AnzMFVGlQUuXrrMp9/7axiFFJmyxXtvHWHs7jzBWJy+rvjr6B9vPOLjv54ZiHNrcgWAhcVF
      zFKahXQJS5BxV2oMvPMuG2sLuL1B3nn3PRZmJ7h08SKSJHL50mVujU1w6vgQAPcnZ7hw4QKT
      92/T3T/ImRP1v9+7c4sjJ06RWlykujFNXmrnxNEBKiv3GJ3Jcu/aVywuzqG5IvjEKvmKgSTV
      ZdW2LEDi1s1bZAoVzr17gfnZCR7OLHH+3DlUpf4mHT0DvHXqGHdujXLi1Em+vHQRSZK4cuky
      M0sp3j03xOJ0isWFRTBLzC6scOnSV5gbU9wYn0VUE4RNnQf3b+Dvf5vhwT7mZ2e4e/Mmvlgb
      ALoj8613hxj54hdcGp1h6d41ZldSLBWgKx4BY4NUXmIo7iZVqrG4uEJuZYZc1cG0be7dvk0h
      t0JGc3F0aIijR4/S2+nj0qVRykv3uDO7wtRSodX595EndICu4XdITdWXEcWNFLfuPqhfEGj+
      LwCWXub69atI7gDd3d3YSJw9c5pEIom4ea9HFrh69Soub2RbHYFIHJ9LAkDyhElN32Fiag53
      KEnMrzB86iyqJJFMxhCUANGgyr379wB48HAKSZKQRBGhUZEAtl7i5ugoVWP7+0TiSVySQE93
      N7YDZ8+eQS/lGB0dwwAqxQ1u3rqLhUxXVwdqbIDhzsBm2QLhjk6mbl3j4cwC50/2cmUyS9xb
      F8bVxRkuXxql69hJumN+uoZPEfWIJJNJNl+OXGqasYkpQCa9Osf9hzOYhRVm0xVcsoINJDbv
      L2fXmF8p0NUdI9g1TH/U86isFvuCcHg9wTmuXFzm/Q9O7vqJB3euoqudnD7aDcDFK5f54P1v
      f31NMzdY9pziZLv6wq1tsT8cYgFo0aJlBm1xyDlQAmCa5utuQos3jAMlANVq9XU3ocUbxoES
      gBYt9pqWALQ41LQEoMWhZlsoRLFYfF3t2BWVSuV1N6HFG8Y2AQgEAq+rHbvin/70DusV+3U3
      443Aryr817/9rT0pa3pxlv/+3/yve1LWq0b++lsAo8DI2Dyd3d0koiEE4dGlTCZDNBqhWtFR
      PW4EQcBxHATB4t7t+3T0HyEc8CBsfegxNtaW0QQvol0jkUhu3mtSLOroepVoNIogCMyk8sxv
      aC/5yi0Awj43APfu3aNarbK8vMyFCxfQdZ2vvvqKY8eOsb6+TjAYBODdd999almaqXP14egr
      afdeszsBcAx002F14SHXR0oM9cWRgLWiRchlky1kIZcnb1sogSSl3DrfufAuHo/CxuoiCw/X
      qKndJP1Qya2RNVR8oo5WKyMG2umOh9GqWaobKVY3UhhViWibm8yGgUfWyRbKHB3s299P4hCi
      aRpffPEFqqry8ccfk8lkOH78OAMDAySTSZaWlgiFQvh8vtfd1H1jdwIgeTl16gSSWcATyNPR
      EUOyTeRchVgkBFgYHj9dIT/LS6vMZPKAhe2IhCJhasU1Qn4vFa1IJNaODxfRkJ9SYQNL8uH3
      qcTDPlbdKsVCnq7BLmJhPzhzxOOtjr9fuN1ufv/3f590Os3ExASnTp2iUChw5MgRlpeXiUaj
      LC0t0d7eTkdHx+tu7r5woGKB/v3Fu9Ts3clsi2fjViR+8/2hPSlrKbXCn4785Z6U9ao5UL1p
      OA6KcmDk9RtFLJokGIx8/Y0vgCUYpIWHX3/jN5BdCUBqdRXBKoMSQHAFiQQUBBwcrUQRP2I1
      w9JajngyQVsoRCa1xHpR48SxIaYf3Mcf8II7QTzsxrYdRAFsx0EQLdbTZRKJCJZlIYkituPg
      OCCaJW4/XKI9HicSb8MtSWi1Kobx9e1t8SRmqI3V1VWuX79OJBJB0zQ+/fRTxsbGKJVKpNNp
      2tvbyWazfPLJJyiKsvuyLYOJ9MHaftpgVwIQkC0eFGTs7AyBkJebt4rEVRu3W8EIDHCyywfG
      KvMLC4iijGVZ1ColTNtBdntJtPm5fneclOhmemWZU4OdFEpVguEA5WyJxbkHpNYL9A/24pEF
      5taKfPf9t/DIsDw/hyFJ9MTb9vuzeOMJhUJYlkW1WqVWq6FpGl9++SXhcBhZltE0DV3XqVar
      zyUAB5ldCYA31k5CX0cI9OJTFQR3CJ/i4PL6yJd0TNNCcnsYiLdh2jYut5uAv+5TcEuwltc5
      ceI4pUwOxeumozNJXaWyWNZNYok+fKEsyY52vLKNJXlwLBNEif4jA1TMlu1/L9jY2CASiRCL
      xahUKlSrVX7/93+fVCrF5OQkyWQSy7LweDyvu6mvjAOlBC8szKKq7tfdjAOJ3x/C4/HuS9mp
      zCpXVi7vS9n7zYFSgm+sQ/Xp/rQWzyTP+W6Ho7G9t+nrls7NpWt7Xu6r4IUFYHV5nnzFZvhI
      H+Pj4wz2dfNgfJz2o2+RX55EDUZxKxKxaJR7t68R6z6FZORJp9dIDp4i6BawbRtZljBNG0kS
      SK9nSMTjOI4DjoNlO8hyffO8KIpkqwYFuyUBL0rVsFldXeXatWtEIhEEQeDb3/42P/vZz+jq
      6mJ5eZlQKEQ2m+Xjjz/e9VLItE1ms9P73Pr94YUFwDAMoN45w+EwLo+fUKye1cEO+CmUi6zm
      irS1BajWbAyzhm0YIDgszk0TdtlkdQenpjO/luHUYBc1W6S0vkzZFJBkN9MLy7x14giSJNPd
      3b1X73yoCQaD2LaN3+/n3r17vPfee3R0dDA7O8v4+DjvvvsuuVyOQqFwKHSBFxaAYCBIZaMM
      OBSyGWS3l3A4jCAIWJaNLxjBLUk4gkQ43IZLEvEGAxQqVTqTHUQDKrXJaSI9XaiBIAG/C8WW
      ccshgoBHlZFdbqxqkUjfib1740NOLpcjHo8TCAQ4f/48lUoFwzA4f/48H330EeVyGY/HQyKR
      eN1NfSUcKCV4ZGYVwbU/itxhoCesEvO59rzctY0Uo+kbe17uq+BAKcGf35wnXT0w8vqN5m9e
      6OdbR/cm6ZZu6dxav74nZb1q9kwA1pcnsb29lNenET1hepMB7kwsc+r4IIIgYBg6suJmbXmO
      bNnkxHA/q6tpMhs54rE2EokYN26M0pFoI1e1ONEXZ3RigWQ0Sjgexed2kcpXWMxbe9XkQ02x
      amAYBj/84Q/p7++nVCrx8ccfc+XKFWq1GtVqlXfeeYeLFy/ygx/8AFF8+uZByzFZLi68wtbv
      HXu2JTIWi2BZDh6Pj2hbhMXZedIb6ywsLbG0vMiXP/8Z8ytpbNumViljORL51XlQvRiGydLU
      A7KFImVTIOBREBQvAbfI2soKhUorG8R+cOXKFZaWltB1Hb/fjyAIhEIhFEVBlmV+8pOfMD8/
      T6lUet1N3Tf2bAZYTeWp2DWsch7JEySU6OK7Xd2UdQdTkBg6doxQ0I9VtQgFJRAg0tlPwKtg
      in6Cvi5CiS4cSydftXBsC0eUGRwaoKS3AoD2g48++ojh4WE0TaNcLrOxsUGxWKSrq4uVlRV+
      93d/l3w+/43fKfgyHCgl+Oc3pzCFvVfiDiMnuiP0xPx7UlY6u8Z4YWxPynrVHCgl+NrECmvl
      VlzQXpDKlvhPPtkb87JuaYysfbUnZb1q9lgAbMZGRwnGu+hJ+Ln9YJnTxwcBMHQNxe1hbWmO
      jYrJyeF+VlbWyGzkicciBLxuJh7M0Xukm1rNojPi5ub4IolohHAsRsDjZi1fZSHXWg7tBT2x
      AI7j8OMf/5jOzk6Wl5f53ve+x8jICKFQiFQqxcDAANPT0/T19XHkyJGnlmU5FqnKyits/d6x
      5wJgWQ6GabI4O09mI8fCkhtJdHg4NsbgmfeQbZtauYSFRH51ASHUjmlaeFQVQXQIhKIYtVUE
      xUfQI7G+uoYSCBLwtILg9prFxUUePHhArVbj1KlTVCoVVFVlfn6eXC6Hoiioqoptv7mz7h4L
      gEQ4EiIQDqGIQT7u7qZigInE0LFhgkE/ds2ibXNbY7R7oKkEV2slfIEQxfUUuWKFZMwGQeLI
      0QGKmga8uYrY66Knp4ff+73fQ9d1pqenSSaT+P1+3G43fX19SJJEKpUiGo2+7qbuGwdKCf7F
      yCSGcDg2auw37REfZ/tje1LWejbNVHViT8p61RwoJfjszP+BvzL/uptxcFDDuP/2P933ajRL
      49raxX2vZz94YQFYWZxjLZVh8MxZFNvE0HVU1Y1m2CgSrK1n6EgmsQHHsjAsB9VdH73z66vM
      pYu8c/oED+7dJpToJuyVWUrn6E1GuPNwnreHuxi5v0CiLUIoHiXk9UA5jVNY3Kt3f/MxKjiO
      w5UrV9B1nWKxyNGjRwmFQly6dIlYLEYoFCKdThMOhzl//vwLVWNjkdUye9z4V8MLC4BpmcgS
      LMzNEsCiLDoUNzRy5RL9HVGQFe7fuY0tOLi8QRZX0gz3dyDKHlTRxtYqVE0b06qHNqi+IN5C
      mYcPH1Is6giKj7BPZiOdRo2E9+yFDyOBQIBqtUooFGJoaIhqtYosy7jdbpaWlkgmk2+0ovss
      XlgAwqEQFc2ho6OTgEdmanqewYEo+bKGT3GwZS+RUAgAlwRu1YtZzdNxpB+rnCUasxGpb9R2
      HKgUc2SzWY6cfIeeWgnHsXEEmSPDgxSqNQjujdPmsOE4DuVyma6uLlRVRdM0MpkM8XicaDTa
      DIGIRPYnZco3nQOlBOfG/oKAtAfHyR8WZDfS0e/vezWZ3DqLxuy+17MfHCgl+N+me8mZB6rJ
      r5/ZyW2/fu9EnLe7Q3tahWbVuJr+Yk/LfFXsbW9yTJaWV1nP5EnE2wj5VSYm5ugZ6qFS1umO
      qty4t0BnWxhXNIpHL3B7Ns23z51hdnICNZSgIxFmZOQWZ86cRhAETEPDERU8bhclzSSnH5gJ
      6xuJbtb3BV+8eJFwOIwkSXz3u9/lRz/6EadOnWJycpILFy4wNjbGBx98sKsybWwKem6fW74/
      7K0ACDL51BJyuB3LchBFmURXB9FQG0Z1FUHx0+ZXyG9kCbdFkSwHl6NTrJoUSyXKpkRAKG16
      kFeomQ7ltTk80W5OHxvc06YeZnw+H4qiEI/HuX37No7j4PV6WVtbo7Ozk1AoRDh8OAwPe76e
      SPQewe+RMUUfWjVHqVBgXYZssUIybuMICv3HetgoVPAEfMRicSQRent764lvPS6+96tdlMs1
      ajUN/Eew5NY2yL2kUqmQSCTw+Xx8+OGH5PP5ZsKsBw8eIIoiKysrDAwM4PW+2Z/9gVKCb06t
      tPYEvyTdEZWYf2/jqjK5DCn7YPpnDpRGGapO4dIPp736ZUkOnkdx78/goVlVLq59ti9l7zfb
      BGBmcgLF50cr6XT1dmFaJpahYxoWtWqJUFscTdMIeN1UNItSbp1wvB1br+H2+jFNg9LGGumi
      QdCnEI13sJFaoKDBqWOD3B8bIxTvIuxTcIR6yhRbr+L2+CiVSwQDgXqWaEmiUq1gGyahtjbE
      zeOVLNPAslunxb8QjsP9+/eZnp7GcRxisRhnz57lZz/7GYqiYNs2qqoC8Omnnz7zSKvHsXEo
      GYX9avm+sn0GkFx0JNqYzC0ye+cOnoFBnNwyC4sFYp0xjJUlsHVmTRVVMPAoIum1JWYmponG
      EsQH+mlri5FKT1FRPCREEcdxqJYq2I6BonjJZjfIZTSqpSKyL0BmcZloPInXo7JeLlNNp4kk
      EuiZBezwIMFWUug9w+/3I0kShlHfEK8oCoFAgFAoxN27dzlz5gy3b99+3c18pWwTgGg4wFqm
      RG9/L2a1jBoJo7lELDIk4hGqukUxXyThdnCUCPFIcLMQAU8gSiQSQi8X8IUjJNp8VGpaPUu0
      4gdcBIMqluwl7PeglQtULIk2nwdPIErA68bCwggGsUUXrnCQtVSGSrWKBG+8MvYqqFQq9PX1
      YZom4XCYjY0NFEWhvb0dSZKIRCJ8+OGHzzX6H3QOlBK8tjKHr7Ux5oXwBGKI0v6ofBv5DGmn
      tSNs38lupCnJh2d02ku6PWFc+yQANbPK56k/35ey95sX/kSWFmZYW80weOYtJFOjWq0S9Hsp
      axaqDCvpDXo7OzAdsA0dzXLw+1QEBPLpVWbSBc6fPcX43VtEkj0EVYHx8Vk6+tpJpbKcHerg
      6tg8iUiAQCxGPBzEtiwsDsyE9Q2jrgRPTtZDI2KxGO+//z7/7t/9Oz766CN+8pOf8Bu/8Rv8
      4he/4Ac/+MFzlWzjUDEPZu6gFxYA27ZxKyKL83NEZIeKLDA9u0KlWqKnI4YkK9wfu4MjOqiB
      CMvLawz2JhEVHy4c0KtUTbsZhisIEu09XXgkge7uLgTFQyLippAvEenq3LMXPsw0PMCGYWCa
      JouLiywvL/PZZ5+Rz+f5/PPPyeVyTUvcYeCFBSASjlA1BLq6OvC6FWZm5zk21EW+rONTHCzJ
      03SnK6KDqvqwKnmS3Unsao6kLSACkXAYxwHD0Cnm8xDwUNFqtAU9OMgMH+8mVygR8ah79c6H
      llqtRn9/f1MJDgaD/P2///dxuVyUSiXa2trY2Ng4NJ0fDpgSnFpdwtsShBfC5w8j7lPH3shn
      WHdS+1L2fnOglOD/69IKa60zkl6aH7zXy3eG43tWnmWZpNZn96y8V8kLCcDc1ANWcxXeOX0c
      TTeoVDX8HgXdkRAtjUy2QGdnOyCi6zUsJHxqPaXh2vICGxWTMyeOsLS4zNp6nvZEG6oCqbyO
      TzbJVW1ODyT46s4ciYgffzROsi2EZtpUW/thXhrLdlhdXeWXv/xl84jUjz76iB//+Md0dHSQ
      TqdpLAw++eQT/P5n78ZzqB+TdBB5IQGwbRuXJDE3v4CIg4zJ8rpIpVgm0RZAkQXG7k0gWBbh
      iI/VTJmOiBs10oMDaOV6dujc2jKetg5sR6BcKlHL5jDbEgS9Dig+2ttUCvkqsd43/6ieV43H
      48Hn89Hd3c3IyAiKojQ7fygUwuv1cv/+fWq12tcKwEHmhQQg0hbBcRl0JGO4JIH5pTX621zU
      YnEEo4I7ECEc2RwRLA1vME4hu05/LEhJ0hFkLwjQNXgMr1vClLx4pBimuEoyGqRQsxEEARuF
      4ZM95PIFQom9yWHToo6mabS3t+P1evmVX/kVcrkcLpeL73znO9y/f5+uri4URXmjk2LBAVOC
      b00tI7pas8HL0hnxEt3DkOhcPocp1fasvFfJgVKCu9Z/jM85mFvvXieC4kN99x/uX/laDdet
      L/et/P1kzwRgYWGBtbU12tvb6Yi3MfFwHMPxYtSqnHn3Le5cvUyyu4dC0eDEcCdXPr/Ese/8
      CnIty0axhl8soXv66WxTuHr1Bm+9dRZBENCqZRxZJejzgG2C08oO/bw4toHjOFy6dIl8Pk8+
      n+e9997D7/dz8eJFTpyop0lfXFzk2LFj9PX1PX8l1sFUgvfsiCTHLON3qWRrFoIIqj9BOOCm
      MxbCsKGzq5OqpuFVPRjlMgRCaMUCwXAUtywSi8cQHCik5qhUqiytpHgwt8zE/bssrxxMG/M3
      CcdxCAaDiKKI2+3GMAwEQeCtt97iyJEjyLJMLpfj4cOHr7upr5Q9mwFi0Q7kXh/VUg3bstFq
      JTo6OikUS3hFyFo27e09FLLrKL4QnckEAa9Cbj1FvlxDsDQ0dMLRdr773T6qVQ1d13EiHgyh
      FQG6F+i6zrlz55ifnyeZTJLL5VhZWWmmTfzWt76Fohyu5MMHSgnOLU8Q8BwoteWbgSghhfr3
      rfhCLovXaCnB+47+oz+kmn3wuptxYJCP/weov/lH+19RtYzwF//v/tezD7yQAKysrtAejzK/
      nMYopqkKPiKhIPFoPfgtl1nH0jQqkkwpX+JITxJb9lJML5DVJNxOjWTPIBur81RMkVPHjzJy
      9TIDJ95iY2WOQs3mraMdXL41SzzkxRdL0BVvA8sAq+UK3jW2Qa1W4y//8i+Jx+NMTk7yW7/1
      WywuLuI4DlNTU5w5c4abN29y7tw5uru7X6weB7AO5vnNL6YEO1At5Jl/OIHmi5MMq9x/8JC1
      1RVWV2e5Pz5FIVemrb2TtpCfifFxVlMpYslOjHIRly+A3+tGwKFcrmA7DuAgAKIg1N3wip+u
      uJdq1SIU2dtUfocJQRAIBoPEYjFOnTqF1+ult7cXSZLw+XxcuXKF1dVV0un0627qa+GFZgBF
      dCjoNj2DR4glYrgwGBqUcAs1XLEjHBVchKIJChtZZFlm6OhRdFzg2ESTSWJBlWK5RjjShiso
      IQCRtrrHMZFM4q5aCKKIjYsTpzrIbOTwJ95sj+R+4nK5aG9vp7Ozk2w2y9raGvl8nng8zunT
      p/H7/RwgVXBPOVhK8IOv8CsHprmvHcEXRUoc3fd6CtksgUp+3+vZD56YASy9ymIqS293xxPZ
      ATRNw+12o1WKzC2uMXh0EHnznsa1QqFAMBh8oszVjSKd7Qn0zft0TUNxuXl6AgKHhblZkl19
      uOT6Su1/G4GVg7nz7jWR2fy3nd/5YIDvnkjuXTXVEtaP/u+9K+8Vsk0AisUiywtz+CJxUsvz
      VEwJv9eNVs4yu1wg4hPxt3WApdHeHmd9eYF8xcSrOGwUdQb7kty7N82RwT4QBSqFLIovglHK
      UTYdAl4PGxsZPJJAplpFQCHkkTAEF2atyurKAl39w/g8Ci67Qq4msDF6AyUcoyfZCobbS2q1
      Gn/yJ3/C8PAw5XKZ73//+/zoRz8iHo+TzWbp7+/n1q1b/Pqv//oTA9qbxIFaAhWLRQKB1nGp
      3zQO8veyZ6EQLVocRA6UAFhGjeXU+p6UVcznMG2HlaVFTPvlJ0HL1JhbWEKrFEhv7I1CmMuk
      WNvIs5FOUa7tTRBgqZBD1/U9j68qZjPkS1V0rZ4iZ7dYRo35hWVq5frnpj3n8w1KhTyGrrG0
      soamadSq1U3z+rM5UAKwtJxCqxR5+fzQDnp+nXw5j25JLC2vvnSJhmEh6jVmVjco5jdeujwA
      x4F0aplCRWdtdemly7Mtg+kHd5mcW0EwKxS0vcu0nckX2Uivcu/WDUq13UeGGqYNVpW5lQyl
      3AYP7t9ho/B8AuBYBhMPHzA/t4RlVpmcfMjC6nozqfKzOFACIAs2G/kyL70t3oF8Lkt6I89G
      ehXF9fLBdoX1VdZKVSRLp1TRXro8AK1Wo6bplAsb2HsQtVIp5qjqJppWI5XJo0h7l2BArxbR
      TIhEo1QrlV0/V1hfYS2vIdkaxapOONKGVtv98wDlYh5d16hqNdKZPL5gGNHSdzUDtJTgFi/N
      Qf5eDtQM0KLFXtMSgBaHmpYA7DO2ZbK88vJKdosXZ2VlhVIhj/WYzq9XywdrP8BBJDN/n7+4
      vsinF04hCrCxnkINdzA82E1qaZZ00cCu5HD5wpRyGYbOnCPsdb3uZr9R/PIvf0Sks5+hYyfx
      KpBanKWi2YiG1hKA/WZ8aomwkGd2fpaKJWMUUrgzFRKxNkavX2U+Z9EeUXH0ae7PpugYOt0S
      gD2me+gYD8fuIOLgiDI+j4go2KTmUy0r0CvFsRm/extfrIee9ujT/3bAOMjfS0sAWrw0B/l7
      OVBK8GHKW3+QOMjfy4GaAVq02GsO1AzQosVe0xKAFoealgC0ONS0BKDFoUb6gz/4gz9o/DJ5
      5xoVKYzXzrNaslhbXaMtEmRmZhbRqnH77gS2qBAK+JoFVItZaraCViniVlXS6TQ+n2+nug4l
      hXwet/pqD/abnrjL5Mwsoijx4MFdJsanUTx+fGKNq2OzdHdEuHXjJvfGJ7AEhdxGhkgkwuT4
      HSanZvG3JVgcH3nUF8oSAY/M9Mw0kUgEcLh7a4SZ+SViyU7sWoEbN29T1m2ikRAXL12ip6eH
      hekJRm7eZiNXQjIq4ItQSC1wd/wBBgp+scKl27P0diZYmF8kFAryYGKCtliMmekpQuE2BMHh
      zs0bzC6skGjvYG5ulkgkwsxmW1KLs6xky0TDQUa+usjSyiq4fCxO32fs7n0qukN6eYaFxWV0
      W2R1bpLZhQXKmkM0EtwuAA+mp5mfnaa3TWa65Cczew+9nEGJ9nP39i0+/PCDZuefmxrn4cwS
      YZ9I1RT58b////CFYmBZiLbG2N27pDIl9NI645NztHcmuHbxIvOLqyS7upEEh7Gb15lLZVGt
      KqYaIrU4j+jojN65i+QOkM2sMDO3gGTr3B+fQHAHqGZXuPdgCs2ESm6N++OTRNs7UUSBqfEx
      JudWiAUVVjY0NtKrbKSWmZ2bp2ZLUMtz5+593IEok2M3WViYRw7EmZ24xfJ6gXjYw/XrN9Ec
      iVo+zcTDKfzhOG5F4vpXF5lbWKIt2cncxBjTi2t0RlyM3p/DdARCfi8P7t1mPqS+kwwAACAA
      SURBVJVFtqqb7fXx2Y//FENw45MsRsfu4vJGKK4vcn9yBsOGYmaFiQdTBKNJVmYfsLCWo1TI
      0hb2MTu/Rjj8/Pb1qyOjfPzxx/h8Xrq6AqSWLU6e7OP2jRGy5TL9/QN0dHayvJri7TMnGRkZ
      pTMsMJl18f65E1y+dAnDtrb0BQ+dEZWR0REGBwZZuT+CHj3KW0PtXLx8k4WFOd7/4EPikRBa
      boGJe9OYwU6GejtJLa9y4cK7zI+NIrUPcHd0hA8++IDRkat0BAV+euk+Q8eGmZ4Yp6e3G9ks
      8leXb6AJHvo6E8zeuoqr5zQneiNcunaXjUyKwYEBRkdHGBgY5PbYXYq5Dfr6+hifeMgHH37E
      9a8u89773ya1usy5t9/iztg4H3zwHcJBP3fG7vPBhx9w++YNBgYGHl8CiZwZiHNrcgWAb184
      w43JNL0xH4K4/db5lTTvvfsW1fQCFSnE0aNHGervZnFhkUAkDnqV3oEBLl26BOUlvroziyWq
      DIZNlgqAY2NaDjOjtxGjQW6PjrG4tMSXX15CkiS+unKJu7dvcezEKSzTBEFi9NYoE1PzvHf+
      XVaW57h46RISZS5/dQeocOnSKOWle0zkXNz6/E+pyQHWMgXOvXuehZkHfHnpIpIkceXSZUpV
      k/MXTjA1Ns3aWgpRFLl68QtMQeKrK1+RTqcxLRt5MyWLZou8/94ZRq58zqWv7rMxNcrk0hoz
      Ga3uwTWyrOVF3jl9fEt7b9N35CjvnDnBX126iCxJXLl8iYczS7z37jlWFqeZWVrjwoV3GB25
      zq2xCU4dH2JhdpaJ2yPI4RfzDJ8/e4Jffv5zZpa2bx+dnJ1BzM1zc/LJbaWlzBqBaAIECbCf
      6AtbSa8ViSeC9aOuzBqIAo29NV9dGSXYmeTetYs7N27zPkkQMIELH37I5S++aF4OJXuYfzDG
      wOAgAGvZGok2L5I7iK0Vt5dla0xOTDL9YIKC7pBdW+Ff/vN/zsm3z2+7rVrMcuPGDeaX02jl
      HP/2//lXJPqHgR10gK7hd0hN3QFA8cWIh+pxKUFV5Oq16yys1FPoOXqV6yO3aWSE1CoFJmfr
      2/YW7l9jYrVEMbdBV1c3SrCLE/1RROFRdU41w+RSDlVWENQIVmYCf7yfvp5ubNvh7NmzBKMJ
      PIrIw6lJJElCFEVEW+PGyAhlzaK7qwuUIGdO9ANuurpjBLuGSYg5EsfeZenhPfRKgevXriKr
      AXq6u7EdOHv2TH27nAACNtFonMnxCeLdfeDYnD17lkhbBMkuMf5wuf5FLM1z5fJVOgZO0tUR
      JjZwks6ATDKxmV9H9lPLLzI6Nr6tvaoEN+7cp7e7G9uu141ZYWTkJlUDBKPC1avXiMQ7SCSS
      iAJ86+0hfnFrme7Qi+1UW1xcwuv1UC4/SqJkFJfpOv4+v/o3f4fi4tgTz8QGz7I69iVXv7pM
      JNb9RF8AKGbXuHHjBn1nTnL9559z5dIvSfYN0xEJcumrqzyYWUDwhfnOe98iFlJ33Lrqd4lc
      u3YNQ1RRAEFSORJ3M7teb+uNS1/wm3/3P+PWpV9gOXD27WG+/PkX/Ownf0bX0GniQQ9fXb2G
      4biYGRvlk9/6O/zu3/kbjN68SyTRwd/6je9z7cYoOzm3bNvC7Qvzg7/9AyZvj6BZzsFzhM1N
      jrOWyaIE4rx9cuhr779y8TLvf/Dtl6734uUrfPDt91+6HICZB/dIb2TxRDo5c2zgievT90co
      EOHtE09eO6zUiussZS2O9O5hQi9anuAWh5yWGbTFoaa1H+ANw7ZtDKN1kOBuaQnAG4ZhGOTz
      eQRBaP4zNw+vEAUBURRxHKd5Tdd1dEPfvF4/QO9FozsbZdq23ayjgcvlolarIYpfv+iQZRnT
      sqjWqsiStK0cy7ZxbBvbtutlCQK2ZTXrS8QTT7z/03AcpyUAbyKNTu44DrZj4zg2oiAiimKz
      Q9i2jSAIGKax7TlJkp7ovA0a6mKj/J2w7brt5/HnG1axr8NxHDRdQ1VVbMtV7/Bb6hKgme9H
      2hQOQZZxHAfVraJpWrPux9vQ+Ey2CkdLAN5AGl+8YZnN7GiNv1m2hSjUBcHa7KyO4yCK4o4n
      RDaubRWKRnd0AMexEQTx0ck+T8HaMkrvVEfjmmmaINQ32XhUz+ZIL2E7NrZdb0skHEGSJGzb
      xrKsunlcFNF1nWq1+lQBtWyr+T4iIh6Pp6UEv4lYW5Y8tu3gbOY+dXCaHaM+AtKcFWRZaY7Q
      jQ4JjzrNTuULgtD8+eswLQvLfvJex3Hq17YIiCzL2LZNuVJGlOptqrfNIRgIYlkWhUKBYrFI
      oVCgVCphGAayLOP3+5szw+P12LbdFHKXy4XX620JwLMwzYN5+rmwORqLgogkPlr6CAgomx1d
      EAREQUSRFVwuN64to//WZZEsyc0yG4ibywdncwaxbas+Gu8gLA1civLU9bizuRwTNp2Tjfps
      26ZSqSDJ9WWZ1+vFtu1m8lzbtnFwUBQFVVVRNut4mlCKoohpWgiC2IxXay2BnsG//mwMSX59
      H9Gn5wZIRp4/sHDrGlg3DKSGAGx2qq3KoeM4T+RadSlPZqVojM6P/7911rBtG0QQEXccgSVx
      Z+V6q+Ls4DTLFEURB1BkhXAojGVZFIvFZtmyLBPyhZpLJ1mWn2oBEwQBWaor1+KW99/nb1fn
      3p2HtPf10xb8+i8yl8sRDoepVCp4vd49qb9YhEDg6WlGnlXXv/nl+B604cU5PZBgdX6STCbD
      p59+ypdffrkZCTnDqVOnGBjY2VO8dQ0sikJzjbx1dN76c+Nao+M9baRudPytyFJdAbW2KL+2
      YyMJjzq7qtaV08dpCs2W30VRRBKluiXINAn4/Hi9XhzHoVgsbqtf3hycTNOkXC7jcrkwDOOZ
      lh9ZklBV9dUJQKlosDI3yaW5VU6cOopg6uR1iaBiIHn8FNc3CEVC3B6f4fTxI4TDYYqpGe7n
      LTxuN6LbR9gng1EkVZARKsuo4RjlUo1AIIIgiyw9vEPPifO49AzzGyYR1cLrD1Io5whFjpJZ
      m8UQ3axM3SOW6EPHwO124fa14XGKTE7ruF0KWlXD7bLxtXXTnWzb349ml1QqFUqlepzM8nI9
      LslxHO7du4coivT19T3xzNaOJYnSFmuPgPSYJebrTIVbaZhTGzNKQ1cQRbGuXIsSAsI2a0/D
      pPq0pVFjOdbQAaBuynUpLizLQnHVlzXlcvmJMmzbplQqNWcjXdeb7/Q0JEnC4/E0f99nAZA4
      cuwYLqGI6PLiC4QJe2QyE7Og1Kvu7B0kl56nMx5FVh8Ff/UP9lPKlcnm8+RqOi6XTHd3P+nF
      Eoro0Ds4QD6VBRxiyU7CAS/FTI6QXyEeD2PXihQEGbdLIputIfvUzfsC+Nu85Mo6+XwRT2Ni
      El30d7dR1ivkiwX4hghALBbDcRxyuRzHjx9HVVWOHj1KKpV66szV6JjNUV1odEAH07Kb6/9G
      h7IdG4FHy5qdsCwL27GRN02OWzujbdvNQMfHn3e73VSeki5dVVXKlQoutwtHc7bMWnX7vtvl
      xu1yo2las3M/3qatbbBtuzkrPA23272tjYciFqhxguXz8q9+OnrgdABN0ygUCmi6hiRJ9SUK
      dXMlbAqCw7Zlke3Y9fW5wLaI3Qb25rMCT58tGo6prcskURSRZBljh87rOA6SJFHTarjcbhzH
      wa240A0DXdMwTINoWxRJkqhUKk8s37a2w7btpg7wLF+DIAiEw+FHJmHLOhwC8KLsnS7y6tA0
      jWwui2VayLLc7BSmaW46xeoC0DA3Ntiq2D7+Nwee61CSxrKqIWA7WWUsy6p7cW0LBwcBAZfb
      DQ5UKmU8Hg9ej5disbjNgQc7C0Bjtnuan0EQBAKBwDZfR75YaFmBnsXf+R/+7LXVfXogwR/9
      g08ZHR3lxIkTuN1ulpaWcByHUKhu+fD7/Ts+a5omiqIgiVKzE0qShODU19qCKD7hINv6syiK
      2z26XzNGWra9zbLSWCJ9nVVGEITmngFBEDB0vSksXo+Xcrm8o46y1ZrVaO+z2Knz64aBoesH
      QQAcrlz5inffeYvltQzxiJ9sycAt6Ci+CHq5jCw7iKpKLl0mGnFRNkQkq4rkCVHJLWNLbfjd
      JoI7QDGbIZ5MUMhmaYtFWM+W8bvqO77KpTJhvxtDcBN9ga2Ie42u64yPj6MoCj09PfzsZz+j
      p6eHXC7H8PAwp0+f3vE523aa6/JGR2n4BRyRJxThJ5/fslz6GuoKt4UgSk8K02MddSuPC9tW
      b3Dj+lbL1JN12s2yvy7MwuPxPOHlrlYriIL4zReA8voihm4w/nCJWBAeroJP0KgaNYqpNAFP
      hFxmkUiyHVnwksvlmV/N0t0RRypNork7cAtQKBQwq4ssFW0y+TLDRzq5dfshbVE/5YKF29FY
      zdbQYmFcsvqNEADTNLFtm42Njebpie+88w6jo6Pcu3fvqQIADrbtYIl15RZns9M4zq4Ojnse
      msqntL0rqR6VSrnydOfXlpgcqMf3CGzv+C6Xa0dn5FY9oxkU9wweb4Ou61imxVpl8ZsvAJI/
      zkcf97C2OEfRUUiqBo4rguzUiHmDeFxuohEVS1bxqypGrcSgN0Ik6AOSpNdWaYt2UsnryIlu
      lPQKbclOvF6V4aFeFJcLU6ugWQIxMU846AX5m7Hu93q9/M7v/E7z93PnzgHwySefPPM5QRAQ
      pfrIqpv1tbbUCCmQ9vYrb6zft3YySZLqS61dCFtDx2gs0x7v2I+v9xvXt1qjniUAXq8XVVXr
      IRemiSiKaJqG7VislRdbSvCzeFHr0etE0zTS62mCgSC5Qg4c6vqAJNHwA+zW7r8bdEOvLyW2
      KNRu1Y1W2+742hoiXXeW1Wcjy7YwTLMZ9tzoqA3Pr67r27zNDcHa6oXeylaBsWyLaFsUx3G4
      PPdXXF25SMTdxvd7fx2P7GNy8atv/gzwOvkn/+yXSHs8Yu6WP/oHn77ws40ZoBG2qcjKpqnz
      2Z2/Hlvz9TrC1vsba/AGjTX940sTc9OPEAoEUVWVSrVCrVrb1FWEJ/QHURQpb/oPRLb7Nh4P
      ad7WJseBTbOua/P424XsHH/68F9jORYLxVkA/mb/b9PvHjz4ArA6P85SXuHdM0d2/UyxVCTg
      DzR/lkRpR3Pn/fm9OfD6RfnhD39IMBjko48+4vPPP2dlZYV4PM7Q0BBDQ09PCOBRPc21c9M2
      bj9aPjzVlu/YO/oBnoYky2BtL09VVSqVyhPLFtu2cCkuXC7XNgecbdsIj4VpBANBdMOoxwUh
      YBjGNhPns5Y9DeEVRZGA348oiuRrOSznkSl2Y2Wayf/qHxFKeA++ALS3x6kpbsZu3UQUBZaz
      GsmgjMfnY2JigeHjfRTLOm7BQPJ6KGc1HCqEAkEeLmZIhhTUYByPZJKvWLgcHcXfxvCRJ0MM
      XjWNda4gCASDQd5//32uX7/OT3/6U7q6ura59LdSqT5yHG2N5twqADuFFcDOy4qnYdtPrvOf
      thlF2OzI1WoVWZbr63D7UWAdjedEEdXjaeZq0i27uddAkqTmbPOsEA6Xy1WP9d98l8G2ITqV
      BMvGGiLQka+SPFIjqFUOvgAgeQj7ZaL+o2iVAi6/RTIWBtvAtuojSzgcwYWG7A3QlfRRLqxj
      OiJH+r2EPBKW7MUjmqCYxNvCsGNWmVfP8ePH8fl8ZDIZKpUKlUqF8+fP09nZifqMdIvNOCBJ
      2qZIGqaJIAi4dujk9U0iz4kDpmWiyEqzvoYd33bspsOtUX5jDV+pVrEtC7fqxuf1Ua1Wm9sy
      5U3PsWlZYJq4FNc2odpJQG3b3ubFNk0Ty7KawuJxefmPbwe5nZvi4scxxnpEFv5GO7/75+mW
      EvwsbowvNNeRr5ozg4kXek7TNFJrKQDcLndTOW0qmJbZjLh8WWzHwWmEUUDT1m4YRlPpRagH
      5DU6f33PQD0qU3EpWJaFaZiIkthUplVVpVqrorofxfjncrknTKeP2mE/EW7dsP5YlkX5wV0K
      /8V/y8ULfm79agLFdPiHV03C1dZ+gG8cL9rxd0IQn1QuJUl+rrCGZ1HPrveo00mS1Axae3yk
      bpg6mw45x6lbioTt+4VN08QwDPw+/7ZIUo/H89SgOlEQn4jVaIzrWjGPM3cP9fvfJubNAjp+
      HUI1QDhEAqBpGjgOiqrueqr/w3/xlPyW+8gP/8f/iKtXryIIAmfOnOHy5cu4XC4ikQjRaJRk
      cveZ0SzLauoAzQC1XZpAtwXJPUd9W8MoGjT28yKAIDwKzfD7/ciy3AxpBpphzbquN4XX4/Hs
      6PB6VvTqVgQEXCcHOTM+xdLEHNPHffzitEJX4RBlhViYnSK9VuDIiQEKJZ1YOABYpFfWcYcC
      qIJNUXNwCwaCO0BXe/y1tfXUqVMsLCygqirt7e2Ypsns7CxTU1P82q/92q7Slojidtv8Tp3l
      WVYh+wVWxqZpoqrqNu9tY8T3+T3NjeyN7BO1Wo1isfhEOY1ljqIoTatRYxtkA0mSMEyj7une
      4fmGjqT4AugrGezsOuKNm3zqWJROnGTimMoEh2gG8AUj+Nw+cvk8xaJGLZfGcamk56aIDp4i
      EfTidTtk1zOg2K9VAJaWljh27Bi5XA5Jkjhx4gR+v5+bN29uU+6ehSzLTaXw8TibrVi29UQY
      AzRmiudbLDVG9q00LFjlcnlbVGgjQE3X9aYgNtqoqmpTkBqzweM0hGknFdbleqQ4O45DfmqM
      KaNAzHRYP66SUWyEWrW+8+y53vAA09HRUf//8QsnT2771daruAL1tOQnetteiyNseLieujsc
      DhMOhwEYGBh46hbIx1FkBUV+bBP6U6Iqd+r8jWtAU3GWJXlXyw1d11FVtbk10a2qlMolbGv7
      sujx7ZCNv7ndbjweD4VCoVnGTvXuJBRbt302hClby/Bn/2EXppNA1i36ZnQQ6gOCZRiHRwB2
      S1ffYPPnf/x3Pzxw+wFg+wgIz+/gepxGHqHd0AhdaKQzKZfLzawPO/H43mSv10uhWKC6OUI/
      T9jG1tmjUfZCYQrTMej6P8fptU1KF4ZomLmPPiy2BOBZ/NGfXHml9Q10hPlP//q5ly5n6+jd
      MBEK4ovZfh4PddgNjVCIx9uzUxu30kiJuHUTjODsfs+yZVnNCFpRFLEsi/Yf/xXyOQvjWIjO
      H06hOBuUEJjp99GWNQ+3ANwbG6Wzb5hwYPson8lkiEajjM2svfI26brOT3/6U7q7u/H7/Swu
      LmJZFoZhcOHCBaLR3Z0aY5j15YMDyHtg898tu4nQhLrP4PGdYh6PBwcQJakZH2Q7zq6tdjtl
      twvkDX7zn46zMNhOVRDxJtv45PIMH3+ZpVCUD3diLF3XSa8scmfkGiNj9xm9c5/7Y7dYzxZe
      W5tcLhddXV28/fbb5HI5VldXSSaTGIbBZ599tutyGh1wr6M/vw5nl170rV7j7QU4uGSlacFy
      HHvX2eegLlgNXWA+M88v+iQClsiZ0FHa/5v/nICvhjrUQU6IoXceOdwzwJHhE7gEm6kFgUTE
      R1UH0ayg+IKvtV1DQ0NomsapU6eQZZljx44xNDTE0tLSrst4EU/v8yq8O7GTU2onGkF6jZBz
      t9uNoihN+38jonW3tn54tDne5XJRrpb5n7/4n/jenQyy5mBe+SXi8KOASaFUROp5A6JBX4ZG
      ROjJ46Edr//jv/vBKw2F8Kn16TsYfCSA77zzTvPnZ0WA7gWN9f6rmDFk+ZGQNfZc6Lr+RCTp
      87aloa+sFJb51ZE031kTWVdhJOFwqjNJT8WCQo7Qr38X4a//rcMtAC2e5GWsRc+DZdWzVjQ6
      v2VZzQRgT+Npjrut0a2NpV+7v51oZJhAb4AbQo4vSzOc+beXMP/eP0JYX2Pmv/zfiavJN0MA
      Fman8IQTm97dveNVh0KcHkjwT/7eh1y8eJGenh46Ojq4du0a8XicQCCA3++nre2bkbDrZWkI
      QINarfb1z9h2M97fcRwkWcblUprxTVtnFcUwUaNRBMvibSFK5OwnyCPz2JEoRKIM/sv/Bfy+
      N0MAMhsZugMB7o3NI1k2UjKOVCziCYWplYqkNvL0dUSRvD60jTy5WpVoLE5uI4PL48enOEgu
      N+nUOpZhEerspDcZey3v0lCCE4kEt2/fxjRNCoUCExMTdHZ28v77uz+psrF+fjyOZmtU5W6D
      gW3HxrJt5C22+cbztVptW5mNMIzH9yBsxTTNbdtNd3VyzBZzrGEaaLpGtSo0s98piou2cAQA
      yefH6h5CnHsIfUdJnP82zvnv4PV669nhNgeSN8cKZFWJdHQgC24crcSNW2MspTboHRjEo4jM
      TE4wPbtANZ+jo6ONlaJFOBzG55a5PzZKKrVMpKMDBdc3YjeAy+Wio6MD0zQZHh7myJEjlMvl
      XT3bMEWam+nKH09lCPUOtDUN+rOwrPq+XVVVm1nioN6Jq9UqhmE0ozh1XadWqz01crPRvsez
      PQib+4O/DtuxMUyjnqpx09cgihLRSJSg/9EKQFYU7G99j/XTn1J991dAEPH7/fV32FSWdV1v
      7Qd4Fv/dH//8lda3F44wTdMolUpN7+/TlEjLsuo+gq9xcll2/T7V7cbQjW0RorVa7amJr1wu
      11MTCjhOPdf/4zvaiqUihv5soWxYqszNzT2yrBAMBnG5XE9EujqOQ7lSRkBo7hCzLIt8Pt+8
      pyUAz+CgpkbczUyx9Wt/VpiCbhqobjeWZWM/Fjj3tKS1glDPwenz+ajVak+kRm9c31qvYRg7
      RoY2sOx6/QgCsig1k/UGgyFcikK5Wt/m+nWUqxVqlWqz7jdCB9gv/vBffPnKguH2Kgxit2xd
      nz8rLFraPHur0fEa7LSMaaAoSlN3UVWVUCiEpmlNRdfr9T6xaf5ZFqBG51dVFa/XR76QQ5RE
      /F4/ns24n4Bv5zSRWzEtC2tz5miwp9/uwuwU+arF6RPDu7jbILVaINm+O9f+VjYyGdq2hAQU
      i0UCgadZgAwymSrR6M6jw7NG+VedFWJrGMSZM2f44z/+Y4aHh9F1/bnCIBo8Pso3DpXbau9v
      RGU+NccOjxTbrTFG1Wp1RwVaEARcLte2+6rVKsFgsBmn07jeQNO0pyrjpmXhNPUOAVmSCAVC
      1DQNr+fR97bTXodypYxt23jUempEATAMc5ufbk8FoO7Fk/ny539OJNlOxQxi5afwtHUj6iVs
      NYRjmlilNcRQgjZfhNmpCRS3m9Fr12k/9hYxRefm+Awff/rXWJm6g+z1UsrWUFUHURapaRKU
      iuhHiqSKFgFZJLW+gVeoEegcRiytMpmq0BFyobhESoZILNrJysgVRMXDg9kFBo8cJaSKVHQQ
      FAXJKGNZNpMzy/T1xRHVGKeO9u7lR7MrtoZB3LhxA9u26enpYXx8nM8++4zf/u3f3nVZlm01
      R+jGiSvw6AQXwRGQBKnZuRub2B3beXT86JZQ5K0dTNf1HWPxG4dPeL3epmWoQaVSwe/375jp
      rZH+fKcZSBQFVNVX39W1GeWqKFtDJXaevcqV/7+9K+mNI0mvLzJyz1pZXCVS1AKq1bQaksYQ
      enzpgwaYyxx8bV/mMv4Rhs+D+Q3+AT4YmNP4ZhsG7IF7ekajBhruVqulaS3UxrVY+5JLRPiQ
      GcGslVWkyLYoPkBQkazKyiLji/jW91qqqOY4scKM7/sDapbv1ADml1aQzWbwyiKwvAyczBxq
      uwKG5aFc1bFycRE6gP09C7qbgWu5EJGGdjfA2o11OKU5LM/YaEcUjkESRodZXFhw0KjuAKYD
      vVJBbn4Fu3sVLC4tIgg4FmYFXEsHdS0QvYTLZgELs0VAhNh8u4Vs1oGtLUNoBj7SLczOL2Cu
      VMDbt2/hui6Cjo6ICVxbszFTyICT0ZJKJw3ZBnHz5k1cv34dtm1jZWVlqjYIP+j1udOaW4QQ
      CCZ6Cl4i4RIliLNDaeoRIGFkS+XgR6VPPc9TJ0oul0Oz2VR9PGmakjQ63c5Yfs9Y6I8OBNSj
      6FeA+NTodDpwHBdecrp3Op2htYbzIHgMTpMVwrMNXL1QPPZ1fN/HfqUSq7kkw+a0z3cPo7Bn
      YCatEBNEIcyUZCoQ++AkRTvCGBtIc1JKkc1m1YI3DAOe56HVaoHS4cRjnHPslfeUiPcoyJOl
      33Uah3QNhHOOen2wwZGQc6Hssfjtfz06tSD4V7+4c/iTJoRlmkpCtGen7yPLkt/jnKvhE6pp
      Md9/WudriMCeZVk92R3J5CyNKgxD1Ot1ZLPZkYvbD2LfXxzS7iOH7acBIUTpCY+CrutHN4Bv
      vrqP/MUruLQ4h3J5H6XS0Ur0/QFts9FAZmRAi7HvJfv4p01fbm2/QS47C9ft3e1PMwhudUM8
      efIEf/zjH/HLX/4SDx48wMuXL1GtVvHTn/4U632jm4ehv/ILHHB5pn/GOVf06YQk2sGGMTCu
      2O9qpIdkTDOmPBxgg0h2Xs/zBnZvIQRYxGDoxkA2Svb0y/lny7KmHsqR9zzMwaGUwjAMdLvd
      oxvAbGkBhSzBg6+/g4i62HzxHMyk2G9EmHUB3fSQydnY2aqhtLgA1q6iGQCUdUF0EwEDXJ1D
      6ByNRoDy9ht4szOo72wjl8+gJWxcmbXxn/e/w+2PLqEdadBZG7o7g05tG5tNApPVEUSARihM
      jYNZHiqNLnTSRnmrCt0yEdbbuPHZ3+Db3/8HkL2I1aKHBvPRbAZwNAbYGbhmB98/28Hb8s6P
      GgQvLy/j7t27AOJF8POf/xx//vOf8fjxY3DOx+gB9GJYoDmqTz+d4ZGvkzvuKO9YUjZ6Xszq
      lslkRhbEZIqzUCj0GF66hpCONYCDIhpjDK1WC91ud+iwy2HQtLj622w2wTgDAVFt2PK9j2wA
      mUIepuMha+0gv7iMar2BuayFbA7QeRe65YJBQz7bRSFfwF6rgkJxBjO5DMJuE9V2BFP4ILaH
      VqWMpZVlNLo+LlxchG65cDmBYVPcWLuKhaVFAATlnU3YuSxc3QO3IhTz3YJIKgAAEOhJREFU
      FwEBBK06tqttrFxcBAsCUGqjNHMRzb2X+MMPr3ATwPLqVWi6jb1KA65NUCgU0a3tYKZQhG1k
      4RoczkzmRw2CGWOKDSIIArx9+xZ3795FuVyemg8o3dZMSKwST7TBHTG9KMfxbfZDPjefz49c
      /BJySEWi3W4PBKRpDv92u50EsQ5yuRzCMIwV45NYYlJ3SAgB0zThuq7iS9V1vad4dx4Ej8Fp
      BsFXlgrIOMc3PKkSmd7VI85gTBnLHNYoN6541o98Pt/D8tZsNocaDdFi3TMp7RQEAcIwhG3b
      sCwLQRDEypdTKnfKk00KaqcnzM6D4P8HeFeLX6J/oOQkZoIH+DmT+KI/zjBNUy1+LgT298sj
      Zw4446hUKgCAXC4Pz/PAOUen00GtVoPrulMv/jQkIdd7awBht4XtSgvLSwf8mdOouEyr+HJa
      8wC//vt7mLFC7Ozs4M6dO/jTn/6EUqmEzc1NXL9+fSr3Bxh0Zcbt0lxwCD4oMRoT2ybxwASu
      kTwxhBDIZDIwTRPdbreHxVpLguxhSMct8ePkNZoGz/Ommgvu+XxJwc73fYRhOHCd98oAXr3d
      wsrKJbx5+RyW7aLc9EGjFqidx8p8Ds/elOHqDLqbRW13G5SF8PMXYHdqMHNZNMs7yM/NwbWy
      2N94jE5xBUXdR6PWRK5QQqVaw0zBBbVymJs53bnghw8fwvNiUex6vY6XL1+CUopGo4G7d+9i
      bm5yprpJ/fj+fp6BTIsQ0CTB7iGOsjQ6z/Ng27Z6nH6vcUMv8p6pRuPZg4gBqUPxKFkgufBj
      LQI+9DnvlQFQcLzZ2sXG40fwSvPY3K7hJ7fXoYGgVqsDBKjVaqBhgHxxCVHtJQIB2BlXqZU3
      mzW8efYKWdsEEUCntouG76C+tYuriyXsVnfgwz91A1hdXcXGxgaq1SpmZ2dx4cIFeJ6Hzc3N
      sb31kyDtr6dpS9IC04yz4ULTAomCy/AFJEEIUcMmwzDK7x92HUpilmnHcY48nyyEgB+MX/zA
      eRA8Fv/wT/9+KoWwX/3izjupAgPD26HH/YmDMA4sR7KwESTcPOOZ3TKZzMjFLztDBy6dGI3v
      +ypIlQYpmaOPijAMUavVDpdQPTeA0XhfVSKHGUD/0Pik4IKrNOrANSHguG4sxDHCRRFCKHGL
      fjiOo9wl+dx0X5CkSFE6ZxNCCIFWq9WT7uScq2GeE2uHPms4DZXIez+5gp/99WSkt8cBS/S8
      phVCinl+COyk9UEIAS2ppFpJhkcamMwCCXHAEq2yQlQDpXriShFYSfUYiHfrru9D0whMw1Rj
      ldJoKKXwPG+iE0G+f7+7pWlaj2STxNkwgE4ZD7dCGPVtlNbWUBrSBrG1/QpEuFPNH5xGK8TN
      q/N4/vw5nj59inv37uHJkyf46quv4Ps+bty4gU8//XTqALC/EhynJelYvqqxlIZJACszOpL9
      uV6vq8qxTFESEovhSf+dUqoYrqUxSEjq8yAIEEYhhBCDrNaIC3vdbheZzPihlyAI0Gw1IfiI
      1uohGaizYQAsQNuPYDaa2NrdQbmxD58TBHAhOruIzCKWZgwE9Sr+8D+/x9onf4XIj9CpvIGd
      LYBpHny/g6sLsyg3yyDW6bZC1Go17O3tYWdnBxcvXow1clstbGxs4IsvvsBnn3021fWkensa
      h2n/TuIJy0UYhqFys6IoQtfvKp0Bz/N6+rDksLzc0SmlME1zIDhVOmKcqcdpY5zEBYoLZ7Ho
      9qSMcmfDAMwMVkpdkNxHIK4O6lgIhIZGpQZ3ZhWgFjIORWj4uLGuobSwBJcC1bwNw8mgWt7D
      ytIydnYrWJhfAsPptkLcunULnHMVb6ytraHVauHKlSsD87STYhpKQQld14dmTGT2yHEc6Lqu
      ilU9PfmJeyHbGHRdV0FtGnI3H9WS0fW7EFQM7NaHnYLS7TH6BmUOw3kQPAan0QoxX/SwUPQO
      f+KE8H0f1Wo8MzstP6ht20Nz9bquw3FiiSO58/u+DwEBwWP1R41qx+IUlRjVYuF53tiERKfb
      QavVmprZ7uzwAr2H+OTq/Dtd/AqJGN204JyryS3ZNmAYhooPJAeQEEJ1ZlqWBcOcrktzHEIW
      ger6AEfQuFw+kAhzHOEznw0XaAJU97bR4TqW5nuDYB76YNSCMeR3d9KtEL/7zeeqAnz58mV8
      ++23sCwLYRhOrQiZBtUoIA7U14dBzgZzLlR8EAQBXNdV7ka6b0bXdXQ6HSVCQQhROl5CYOrd
      n3E2wFskuzeJFrdMpJVtDjOAw34+Ch+MAXRCgVargn0SosMoWKeKTG4Gb579Bdr8JcyZP45K
      5MOHD7G+vo4gCPD06VPMz8+jUqlMpQjZj1gRHtCJrjR5h7EmcC5gmoZaiJqmqapz+jWWZfUU
      qiQiFiXtFGFyatBDg+00+gX6GGcgQkAkemKccyW1NIqCRX0efjRP/oMxgHajgnorRHnrJbhb
      QnPrJdz8LPJWXHZnpv2jqESurq6i3W5je3sbQgiUSiUsLi5OpQjZD0JS7cxkdG8Q1TSwiCES
      UU/WJT2hJZXa4+vG/0sXKQoTdjaqJzv65CeARjSELELAgzjrAwEhAAgOkbRkpF0aGTynm+t6
      rjdEn3gSfDAGcO36x33fuTX0eaetEvnpp5+qxysrK+rxpIqQw0ApBQHpWdDDcutRFIExBsaY
      GjtMU6IAUByajuPAsqyenVjTNJW/F0KoztJJxO3iGoGGIAjVBJqhGz10K/2pz3a7DU3Thg7H
      E00DUgYw6RzEeRZoDM4CNeKowRbp28shEzkHrMTpkhYE3/ehaRpmZmYQhqGiF5GGwjmHH/hJ
      AO2CAAPD+KMghECQVGyNFJu0/CfTsv1Ta/20igDQ7nTQbrXUcyMWIWJRbFh0sLgm8cGcAEfB
      SalEnkb7g2RuAKB2+TSka+U4jjohZFuDfH0YhsrdCcKgpytVMszJ/h0QolygYerto+7RSBF2
      pVsp5EKWLRz9rHT9G5PrOHFxLbkvllxH9iyNuqczawCbm1swfR/a4iy6tS4o78DO5/H68WMw
      bwE0KGP5yg3U9rbhOCaonQfrNEBNDUT3UMi6J6YS2d/+8OWXX6Jer2Nzc/PI7Q/DILssh1VR
      0wttYBAGvXGDpmkQXMA0TDRbTYAcBNFIrpGuOUgunjT94rAgXCKKosEZ5uTxsOxSpxsX2vpd
      Ic91FcFuXE3m0DQ69jQ6swbQblTwZqsC0ajAJDYcGqJd3kfRc0CLs+AdgfKLb6DNfYxq9RVq
      7TLynoVaZQ+52QsoZFdP9P7S7Q+GYaBQKGBxcfHI7Q/96Ol47BsEVz570puT3nHlLizrANJQ
      pKypaVoIkjYGmcGRp4S8digpGVONcv33JL9mjIHxmOlZZpHSBiDjDhngcs7BOEO9UUexONOT
      dTJNUzFVaISAahT0EFfszBrA8uo1XLrEEYkIu+UmbMqwmC3A1Cn296uYW1wAFhaws7WFfKGA
      0mIWnmWgUyogOIVWiHT7w9raGhqNBmZmZo7V/jAK6cUkhFDiEukGuDTRlXSHJBWJZHY2TTPh
      84nUEI1klAujEDrVwZO0KICetoRhPrhczBrREEYRKBXQqTVwYvWcUMn/sVsXgWq9fyupFM84
      SwQ7wrgzdMQ9nAfBY3BSrRDvuv0hjWHzAIZhgFKKKIpUFocQorh3wihEGEbIJ+qUkkVaph1l
      oJzP51GpVpRiDMGBK8MYS1KmGny/C0IIHNtR1+t3tfwgAOcMQgCmYSi6xrTO1zAIEQtkAECx
      UJyILpExhnqjAZ7EQefzABPi0UYZ9BhTSaNwEyfUApGgP40YhqHqj5eLUQiBZqupUpY6pWi3
      2wOsz2EYKj5/zjk443GRGUnQq0EpryD5nmmacZqVRT2VXOnGyJZpkcwcA4BpmMNHModA8hFN
      yhVKKUUhn0etXkMQBD3Ft/fGAN68fo0Ly/OoVSMUCjIDEKDRALLZ+BdRrVYVERJwmG7A4fjt
      f39/3Nseis9/dhNLOQ1ff/017t27h2+++Qa1Wg31eh2XL1/Gxx9/fKwgOJ1O7EfavUgvhHSR
      q3/AJYoiZLNZNBoNZUBa0u3puZ46IWIFGQrTMMF1jjCMEPEINFF0UZNeYRKPkIP4YRQpVz9b
      hIBANpuFNeXJTAhBLptDp9NBu9NWQft7YgACfn0XW/sm9l9VsV22oLMWqKNj93UDxbkZ+J0m
      qJtFwXOw+XoDpaVV7L7ewLadwasnD1G6eA1zcyWU3z5Dl+bhCB+6ztGBDVMw6BrFk2cvceXK
      EvKzy1heOFk50hcvXoBzjmq1Cs654s5/+vQpoijC7du33+n7Sd9f0hqm6wPDgtN0RsZxHDW4
      IrNKEYvUIL1pmSqgVYZENJiGgYgxRKnTR94LIGKaFG20sjwXsfFpmgYCgpBFyLiecq2mhaZp
      cBwHjHMESX3jvegGjVoV1JkNv9WAbRupHi+Kq9fXQEXs28kyufwjGKYJogHziytYvbSEWq2B
      TLaACwuzWFpehm7Y8CyCiIVod0NcW7uKmWIRzcZoRuF3hfX19biSGobI5/PQNA3r6+u4fft2
      D53IUSF/B9L1kIEq40ypQ04S/kkmNtkmLRe6lDnlgsfzt2Ew4MIQQiCSQDdiUU/gLY0sfs6B
      IabbGWSmKggCdf3jFibjjSA2XiHEeRAMcLx4+gIXL1+BQXu3on/+t69PJga4Mo9Prs4f/sQj
      oD8ITvvdyi1KuP4n8bdN00Qmk0Gj0YjTi0n2hzEWD8hQXYlcGPpBW7TsNk1LKQkhFO8PAYFu
      6KqGIO8vYpEai5SnVpg02xWLM7CPSVJQa9Thd7vQKI1HJ88NYDTOQiuEzPX3cwINg0xrpn8u
      mRv29/dVsSoIAkQsUsFoo9GIawSGebCLk4M+IgCqtUGnujoNTMMcyPpwIWI1SBwYr0binT89
      E3zYZ0lD6hkTQhAxBl2Pe54EF+9LDPDj4O9+/a/v/Jq/+83nuH//Pq5duwbP83D//n1cvnwZ
      xWIRhJBDB7+nRf/i76/6pheR7MFPv1bX4wXbDXwUEldN6vsyxpSubw8Zb5IBopoWM1LzA5YI
      EMBIFGhGBb1ALHNEkutatnWs30tazzhu8QgOsl9Hvup7gKD8Bv+71cSNy8t49OQHfPLxRwCA
      Zm0foLFGQXlrA4X5FczlbFTbDDrvgDp5FHMnk6bknOPRo0e4desWvv/+exiGgR9++AHVahXX
      r1+fWANgUgxbZGxIPlx+TUmvnJIQAhCI5UhFnFmTrceO7Sg9MiEO5JdksBwToMSuDhDv7nLh
      9b+3NLxYjeYgQLdtG7kh+r+jskbDIGNDeV/yMwoh3o8g+Lh4/WYLC3Mz2NrexKvXr1FrttFt
      1fHs6VMUZxfBgjZeb+6gWSuj7UdoN6ondi+ccywvL+PBgwcoFot4/vw57ty5g2KxiO++++6d
      vU/a7x4aB+DwwXmBFGcnpWh32iotKoRAp9uB6xzUCPzAV1kbeapI1jnTMOFY9sidXwbWBy6b
      Bsuykc/lJ17oo6DrOjKZDHK5nGr51nU9HvQ5yzEAD7v4y7MNLF1YQqXWQt6hCIgFLWwB1IAf
      ARlTIKIuPJ2j2mbJzh93Uv7tP/7LO7+n3/3m83d+zTRkDBBGIahG1ULsN4Jh6N9VpY9frVZV
      9TXdSiFbJjzXQ7vTidsNVB2B9wS4h4Fx1nOPhmEin8tNzWQ3Lc60ARwX7yM1ouTs6c/xj9vt
      R9UDdF2HYRhotfuoFlPjhwJCFaXkySDfKy2zNIkRpFuXTyv5cG4A5/ig8UHEAOc4xyicG8A5
      Pmj8H0tZgv1vdCPbAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='STATION LOCATION X MONTH' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOS9d5Rcx3Xn/6l6qbunJw8wGORAgCAJMItJIiWKVKSsLFmS42od5Z+PZPl4
      bdlnLYfjs3t2/VvZXnu9/q3jam3JyjlRlESKOYFgAAiQBIgcZgaTOr1U9fujul6/7ukBQWCG
      BNf3nDkY9Lx+r17VrVs3fO+9YnJyUkspCcOQNE0BEEKgtAINQgoc6QCgAa0VAIEf4DgOruvy
      Yin/rKWkIAgIw7DtM9d18X0fAK01cRwjhCBN0+xHa932Hcdx8DyPOI5RSrX9TQjR9vNKI601
      Wuuu4/d9/6zW93TPqjfqpGmKkyjmvvRtnJFBSq9/DYQhlS98A5Si2OvC9BQA8pJtiGuvPf2N
      q1XCr38bXang33IzrF+DUsqsowaNeUcpJQKBkCIbj+t5Hr7vI4SgVqu1JgQBEjzXQ0oJQKpS
      0hRKxRKO4xAEAZ7nndVkVGpVpGhtrsUmz/MIgoAkSdo+t4tdLBYBMqauVqsIIeYxv5SSQqGA
      lBIpJWmaEscxQDbJUkocx8nm6ZVCWmuUUhnz58fvOA7lchnHWbz1qTca2XylTz3N3P/8NKJY
      pHzNFcihAfre/HpQCh55kOThh6BYxL3+BnAcRJoipk5BEKB6+9pvXC5TuPIy9PQscvVKIq0N
      0wuNXU0pJAizGaSQ5p0Bt1aroZTCbgQrMaWUuK6bSQWlFWmaZhP2YqS/Uua7ruuSpin1Rh20
      RrN0ErNYLFKtVrv+rdFoEIYh5XIZIUT2zp3Mbz+r1+uAOT3shrebAFob4eUirTVJmhqB8iIZ
      1q6v/bdYLFIoFNo+W6wxpkmSCSD3gnUUr7kcd8VyRLkHNTPHyT/5S4SULP/D38C/6ioIAvTQ
      kLnBN7+C+tEd0NuL+He/jF6/EZEmiDQlcVz0hZsBSLVGp0mTwQWtLZAbC0bAOyfHcbXWNBqN
      TC3onBwhBKlKSVIjSZVSpCrFF/OvX4iq1SpxHBMEAWmamoc7jjllmpSXROdKpVKJKIpOq2Zp
      ralWq9mmXOjZlrGDIKDRaABmI+RPFinly67+mOP9xVG3d7bvu9jvo5Si1qi3Ttm+Xpb9t09m
      z0wPniJ84mkQgnRmDmfdqrZx6p2PQrVifh59EDk0DF/6LJw4jnvDjaQ33ESavz73HnbTmWeR
      8Z2emcEVQhAEAVLKeYtqB54kCUopc4xgJGixUDyjFw/DMJOWVtLa3WnJSLDEnDhncSporUlV
      iiMdhBDU6/UzkshKKaIoavusUw0SQlAqlfA8L2OYOI7brnm5N4AQAuccnq+1JggCisUiSZKQ
      JEnb6X+upLU26nXTfnIcF9kxz96GNSz7g98AIXDXrpwvt4eG4chhcFxYuRoeeQAeus9w9MwU
      cttlpH39zYsFxmK1p0BrY1seAWDNGlwpJUEQtOmz9kcpRRiFHV80DJCkCQHBaV88TVNqtdoL
      TpDVP+0GezFkmd9uIsdxkJydLm5Vu87PrOoTRRFJkrSpP3auXu4T4FxI5eaumx10rpQkiVF7
      MXwkhQCliY+exF02iAh8tBQUX3cdIk2J9u7HXb0C0VMCmnbbT/40bLkIBgfhiqvh/rtBSNAp
      eB5YR43W5v7CIVUpIBDC7JPOdUoLAS6YI73RaGQSznEcIx3jCK11m6EqhSA9g/lJ05TZ2dkz
      nkzXOXtvQ9szzMY/K+q2AayqZL1FWmscx8nUq1c684NZUymdTAAuJmmtqTadK3mVq7ZjNwd+
      +09Z/nPvZPhn3p5dP/fV25n81N/S89rrWPYnv5WtrR5ZDm94S+vGV16DmJyAY0fg+ptIymVj
      o2qNVqpNMFkezq9TZou4rpstaP4L9ph3nfaj0HEcEOB7/mkX/kzVkHMlIQSu46K0xjnHxev2
      PmmakjSNN9/3zZw01YPMtbYIG8C6V18Od6oQgiSOiaKIIDj9qf5iKYxCwtDYThkTxgmTn/s2
      6fQc3oqR9rG4LkiJ8E/vXUyDAvzEu43Lvulk0WiUSlGpymxK66HrNqeu4xo3KJgFsLs/jmNS
      pXCbrr1OfddxndN6G/KuwpeCzlUH7kbWRZiPjVj9OEmSTDVaDGZNlUKp1nPOVh08F3Icp6sj
      5FwoSVMq1r1M3hDVyGKBnqsuoXztpUBr45ff9noKl12Es3y4w3ht8aBRexU072n/plQzdpX7
      zLr1O++VuUIrlYr2PI9KpZINOgwbmaGSv5mUklKpRE9PTzboTrIelTiOF3RDvhIob/yDCQrl
      /+84zqL5/q0NM0/QLEGMJFVptvjQYryenp6zjul0I601lVqVemYDCty80GwGqZACkSom/+hT
      RHueY/mnPokcGzXXTJ4i/NcvInrL+O9/DwR+9g52HbTWbcFL13VxHbc1l0IQ+D5JmmQnOQg8
      x0GEkbEBrNSxkttIoHb/sD36S6XSgu5CpRRzc3NLGhTSWpOoFO8cbIYX8ywgs4nyUeDFVFUs
      oyttnqGaEmqxya6RdFr3llLS09OzqBFfMKdao9FAamBqGtlTglKpdYEQLVstSWg88jhqaob4
      +cMEzQ2QPPAQ0XdvB8/Ff8sbIBhpSf+mLeY4rtlMWO3EnMoyvzZCQPMEt9fp5w9S+Zt/wA3D
      kEKhQLlcRimVeYRs0MvqUgDlcrkrY8dxTKVSaT+KloCsx6dLbGPJngdGqnRCKpZCV5dCGujJ
      ot7VkJ27/PpJKSkWi0tic9TrNdCa5Mf3Uf1fn8bduI7e3/04lIz7XKQpav8BKASIVStZ9p8+
      QXL0BIVrr2hFbzdtQK5ZjSj3QKGQW3+N63oUggDZxWvXjfI86UhJ9PBjJDufNEbw7OwscRJn
      N3Ckk7n+rJEnpVzwiBRCUCgUsojpUpLBciztM6ykBDLJuBTuwW60VAaw1iYm6uTUHyvolkL3
      t17FZNde1PgEcRShZ+cQzQ2QPPQotT/7K0S5TM/v/w7e9q1427e2yTZ54RZ6/uSTxvffU8r8
      +UYbcZALGLfd31+1eTS9a67E2/m4OQFSlc4L7hgjz6O3XKZQKCxoSVsczVJJ/Tx1c1MuBeU3
      gNUbgyAgiqK2E/GVQi3Mz/wNtph6v31WrVZFKY0UUHjbG9GNEHfzBuSykYzB9fQMul4HpdC1
      2sKe6/7+7FeV5gK1ZygFLQSDRoTrOkYdAsS6NZR//7eRSZIQdTC//WIcR8zMzmTxgE6yQDLf
      9xd9Il8uynsNLOVtI3savlI2gQ0QIphnVBcKhUVHe6ZpSiMMTfAJjV69ktJvfoTg7W9B52wP
      78pL6blkPT2r+3EmjiHsfE9Mou67Hw4cBK0RaYJzeD/OsUOZaiiEQJzhGmilmPvytzj+7g9T
      /9zX2lRA7fu4VqdaiKR05sUCoCX5XyrV56Xyk1tp2Q0VamMlC52G5xtZ5hdC4nQwjEW5LjZV
      qhXDuE0gmkY3ATgd87X7SZzJ4+YE+PqXkdsuhaBI/S/+knT308iRZRT/w8dxjjyL+OG3wHFw
      3/Z+9LYrm86jM1R9gHjfAfRchXjvvnl/d09nUDqOQ39/f4aDsaSUolarEUVR5g5cSnx/Xiqf
      TgWyHgIpxVnDKjq9PZZeKKhyPlAnJkqzsDu1VCotuqcuTVPCMMRNFWrXHkRPCeeCjfOZf6Hx
      T0+TPrcP4gR18iRq1y7EMw8hasadLh++B7n1UhLHmefbn38zndkM5X//IfzLtxFcsW2eYDvt
      +Tc4MEixUJjH/PV6nWq1mkWMfd9fsg2QV0deaMGsP10pk/TwYhl1IelvE2JsAOx8pEzVwWB7
      HOsKFPOZ3/O8JVFZq7WqAVX++H5qf/E3iN4yvX/8e8j1a+eDDK++Bo4eQR89jHj1Tej+AUQp
      xr3qSpKHH8FZswZn2yVw+KnWO5bKBi2aplSqFQqFYuao6ZwLlaaoqQl0HCMGhghuuq717NxY
      FtwA/X3981xkqunbnZubazMSXwrD1Ko+p2NARzptEvDF0ELS36JBLRbofCStNXGSoJpuzhdS
      DxaK5ZwLxXFMGIbmvlGEThOIY0hTGnfdz/Rf/gN977uN0nAR/fQuuOJqxPs/BEKgLQP7PoWP
      /DL6xEnEwAAUCqhb34780bfA81E3v5VEStImgrdareD7PoWgkPn/aTK/vvPbuPfdYeIF264m
      ecM7UdKh8eguTn3mayz/9Z/DXTvWvgGklGigEAT09vbOAw/FcYxNoOl8+aUIfFnpf6a5AhYX
      dC7P6iSr4r2U0I4XSyZqHTcDQKc3DovF4pIA3mr1Wkuq3nQD5SBA9PXirF9H+I07SI+dIPza
      Nyj0KWg00Huexlm7Dr1yVfu9CgVYt5bk4R00Pvdl3O0XU/jAL6E9l9RxSdMkWyspJVEUEccx
      5XJvZtCrUxO4996OsIGvnfcjL74CvXYT1fseZe6O++i79TWUOzeAvelA/0C7tdy07uv1eoYZ
      6oaxWArq3ABL9az8/fMql8XIny1prVFavSBjni0prYiSOIvdLMTc1oYJgmDRx5Hm/P5aa3Qh
      wH3da8z4gN6ffg/uqjEKBQ1f/4L5Uhyj41YuhonwJ0ghcR2X6Ad3MXnfE/j7jjL65ltJhwbQ
      zUh5J84HIIqilkcriUDlEcIamp7M4Q+/l54brqSwbQvQRQXq6+ubpx9qbdICbUZUnl4KtcC6
      HZf6WXZjWzyTzRs+lw2QKoXWCiQ4XfTxcyWVKgP/db0F3bNCCPr6+rJNsNhUqVXbsUUdXn0x
      NEDpPW9F1KromUn0M3sQl19pEltoj/ArrUhI8F73GorPHyPYfhH092XIhDw40SJBAaIoxA98
      owEMj6IuvgL55COARq/bjFqzEQGkjZDiFRdnvh9x6NAhrZqVHorFIkODQ206vdaaMAyZnZ3N
      8oTjOM6YwsKpl4o6g3NLSXmVy3EcCoXCPAjEi6WkeWQ7cvHxUVprojgiTRWB7y+4DsViMdvM
      i01xEjM1NYUDyIkJ8+Gy5S29voNEmkIUmXxfm3WotVHhpMQREqUVQoOMIvA8YnQbEBHaeSFf
      lMDYAeBohXt4P8Qxat0FKD+g/sBOjn3yzxn+9++j/30mt8DN36RUnO8as2mDvu8TRRGNRsMg
      7jogAkupmrxUlFeDHMc5Z+YHY5jbJOwlIc08H78lu0aFJo4GFj/RvVarmYSaH/8I/dUvAhrx
      jvciXntLS8pqjYgjtOuhHQcKBTh5En3oEGLtOvTwEJ7bcrWrVJGi0YHfhkuzlFdVO4s3ZGq5
      dEjWb2kbr3BdROAjba6B1rgWp23LnHQavvbhVv3RWr9knp+Xi/JH62Lca8mYn5ZrOG+7WFWn
      t7c3E05Wd17MdbNRXw/QDz9gEtabv4sbbwYpkXGEc98PEAeeRY+tIb3hVlS1RvSpP0cdPIjc
      sAHvN3+DtL8PKR0E5kTIz9hCzJ9//zwtpC4Xr7qE9Z/+f5F9PSZxMIpxHemgtCIICvNUnzRN
      qVar8yShTTfLP/B8IJvH/G+J8gxhYeJCCHp7e9uSnBbDhjIGvYnsaq2p1qrmd+kgN21G73/O
      PGvj5iz4JXc/hrzndoRS6EP7oFAk7RtDHTpk1JMDBxAnx3EGBhDHjsKJE/hr15IMDMwrUuZ5
      XttpYIOSnULb6YJcgGa2bJP5zQ1dXAQEXkBPzjdsXZ5zc3NEUZRJkfM5Gqq1plgsZsW9/i2Q
      VQFs1Ndtxj9sIa/8Gi3Geummrm4pcw4IAW+6DbFmrfn/xdvRVp2cnUZYGItuVnC45FXIDRtI
      9+3HvfgixMqViMOHSP7qL2D8JGLTBTi//jGSXLEGRzrmx3EyUGLnO1o+7YyD5Pm67X2kRGqt
      cb32coFRFDE9PT3P932+Mr+lfDDr5S5W9VJQ3maRTeFkMT5LsUZSSgI/wPf8FjTFVmMoltBX
      XWt+iq3EF7X5EvTgCFo66N4B9EWXoesN4tkqqePjvPnN0N+Hfn4/nDwBaYrevw9x6hS+52fS
      PlUpYRS2FWbrdqq5QqKeP4ja97zZeHHC+B/8GUc//FuoiVOIJMY5cRQ5PYnQ2hjB+QmzUAfr
      CswfoZ2qz/lG9shczCJb5zN1e7+enp4lf+84igh3P4W7/znYsIl09VpSLdqKEsiTx2HPLvTI
      cpL3fRgxfgJ6ykhSnF07EBPjqFoDNTGJA4gNG2HFGJw4gdh4AXLZcsIu7ud88YZO6S+lQ7rn
      WWb++E8hSen73Y/hbtpA9ccPoio14t178af2I554GIIC+k3vwpXCgKXyxpItFmU/O5+lviWL
      CbHpi/kNnTcO8/7q/9vI87xFT23sJKUUjf3Pov/uf8DkOIwsR/7Kx2B0LLtG1mvw6b+F5/dB
      sYj++V+BTRdSuOfbyPFjoBTeTduoOEO411xt1mf1GpyPfhwxPo5cuw45MIBTr5PXQfKBr8xb
      13R7qqaATitV9FwFrRR6toLoLTP6Rx8nOTlJcUUf4ocPIMIG1Kpw7w9NZbi8qhCGYddI2/nM
      MLau6ezsbHZy5YFtnbGEV8KGPlMSQtDf35955pY6Kl+pVlEnT8LUpImwnppETE0iVqxsXVit
      wImjoBXUa3D0EK6T4pw4nF3i9xcoX3wxaW0KMXuSZNlKkuXLCdauy4TY6UgIgXdqAnnvndCo
      o695DWr9JrzLttH7sV+BJMW71kCnCzdcZTbMgWchr8E4jlGB8gVE89n29t/zWZc26XEulUol
      ixLm1SD7/853+L9FRbIG72KnNXYjA3hr4K5eg9i0BfY/Cxs3w6o1bdfp/kHEtitgx0MwPAIX
      bUecOtJ+M61x9+zAfeI+UAp3ZIzwNW9FFEstUJuevwnsOjppivza5xFPPmb+cGA/8pc+ihoY
      wr/lpq7j1yvXoa+9CR69HwpF1E1vNCdAXnJ4nte1nOFSY37OhqyxW61WM49EfpzdsrugpUe+
      kjK78pQ3BJciqaUbWben1hpdKiNuuhUu2g6vuh7VN9B+rechPvjziNfeii6V0MtGSUsB+tkn
      EQ3DWxqgNpf5+52Th/GefpR05K3ZfdLUbIBu7m0ZNkxVuCaJqUn09BQMDM0bu0gV9W9/n/DB
      HfS8+zaCX3s92vPQhZIJhOkccMiGlG3Q5KXC4ZwNWVXHYvWBNpXtdKeX3QSvZFJKEYbhkgDc
      OimMTJFjKSTinh+iv/IFSFOYm0O8633opjco45Vjh9Ff/Rw06og3/QTpZVcSXv9G3OeeAkz5
      Qqf5uyVRq7SyE4WgVCxmmz2Mwra1VcUSctMWODVhYhErV8PI8q5jVzOzVD7zZdKjx0GA94mP
      kj7wMDqOTXHczsYINs3xfGZ+S5bR7SmWN+BPp0faEPsrzR7otMnsBlhKUtogAbTWCEfA7qeg
      WeyWp3dBnEBg5nH6v/41jR1PMrJ9DO/QXnPN7d+ErZcQrVhLvGINAoGcnkAeP4iozpr38nzS
      dRcC0Gh2kQEolXrQWuMHAdVmpBkgFQLx9vfjbNwMjRC9/XJUubfr+EW5RPCqywkffozgVVcQ
      f/2bRJ/7olHDkqQdZ2H9yGEYZqCw85UsM9jaRnn7pVMV6kZ2kl9Jm6BznC/FKWbAj2nLg3bZ
      Fehn90CSwvbLTXXm5tjqdz9AOjFFNFYiwxSXejLgm0bgnDiM3LebZNlq5FBkmlxsvJho7QWI
      tgpuraocURQ2hbFs4tJC0mIRrr0xe3a67wBIibNudfsL+D69H/l3lCs15EAf4Z/9d2hqDOLw
      kcN6cGCQUqlVitpWeAvDcFHrxJ8JvRivk5XiaZpmaX55+6Vbqly3zTAPTfgKI8/zsm43i0Gd
      auTM7AxpkoMhpyniyCFIEvTqteicAZ48uYdo3wF6rrsMce+PjBfotbeiVhpD2T1+CO8Lf2vA
      cUKQvuq1JNfdQiKEgVmwMA9IIfFqc8ipCdKRFahiT/Y3degoJz7yCdNh5m/+C3LFMoRSqIOH
      wfeRY6NZdFo99jjhP/5vSBKTFB/FMcUc3EEIg4W3LtGlZArHcSiVSszNzZkXaSY9nAl82BqC
      9vfOvOQ2qEDH5ObJukuXGtq9VLQUJ1h2ukYhSZK0FRnQjoNeu77r99xtF+Juu9Bo9u/6QNu9
      hBA4u3cgmokwQmvkM0+iX/U6VC7RvdPXb3+Cg8/ifu/ziLCB29NH9M6fIx1q6v2+jyz3IFwH
      4ZlYSPLwDqqf+itET4+pATS2gvjRnQAU/+PvgusYLFCatkfchBBZN8WlBpf19PTMA+FBu2t2
      IbKL3snkecpP6uncufmo9yuNFssFagGQQLYmtqUVNBm26blRpTJKzD9hLUkBYm7OGMp9/Wjr
      lOgbbG/h0NNnINK55+eRnnZNXCFxHrnLBLEAUZ3F3XEv6tZ3GUE3OsLyv/7Phif6jS2gTk2h
      K1WTfVatEj/2BDP/+c8B6P/ERylcfEEzDtDFR27h0d2ywBaLbKO9fMaVRae+mLImSql59Tvz
      keAzofNZ9VlIJRDCJOwv1qmVDx7aZyWxqYQh04Tg8ftxD+4FDcmaTYSXXo/yWpvPZr+50kE+
      +iDc/jWIY8R1r0W9/s1oxyW5/HrEyaPIw/vQvQPEN7+dtOn3h5ZrOx/MdBzHdIDp5ImmOkaj
      AUEAA+3dI/2bXg1xgugr42zehHp8l7ERXEFp/06Co4/h/M4nfucPTlcktbOH1mKSPbrz/QQM
      sOvMdXEr2V3XbRurlR5nEsSzG36pEvtTlZrFOstNZgNC+e9bvb+zZtO5UH4esjTYMAQB/tH9
      +I/fj0hiRJogpyegWEbYcXm+keoCZKOB/ML/Rpw8ZiT2iaNw0XZ0bx9KCJJNF6EuvoJk+zXE
      TS+PJa2bbnnRPi4hJbJ/EPn8XkQSm81zw5tIvvMdks/9K0xOIDdvgTwUxPNwt24GLUgPHsG/
      9GK8rVvoWzdIQc0hVIobBAGeu3DRWzuopZCQSZJkfQnOhjJEouO0nyI5Zn4hd+hL1eP3bGev
      TQrSgn3Y3s5LQVJKojhuKwVj0JO5xBSt8R68A2dmCjyf+OZ3Em28yFwLoBVKQOwIhKNxmkxu
      azelQdG+YNuzhRA4bsuu0zTtQq2IVq5D/cxHkdOnUMPL0QcPknz721Cvkxw7hrzscrjoorb7
      6bkqk7/5SdTMLMP/7Y/wr7wUv3YYccSkb7pRGFEIukcTrV78UnR1PxfyPI8wDDOp39nsLV/F
      ojO7aKm9P0KcfakWS47jIjAbu7e3u6/7XKhTxUrShEq1gmimWwKo4RVo6SBUC25CvWYw/lGI
      +9APSNZsIpEOSaFA48YbeeTZ73BwSCCLZTaJfVyuliM5vcHemWillEIL2TpFCyXUCuOxFIUi
      FItQr5s0y2blaV2tgdKI3h6E5+KuXU169DhyaMDwwMgY+ujzBg4dhiHTM9MMDw131SVt+9Tz
      VUfO1+zsDNx1GrbWyMo3uDvfXZ9CtBIqlyqxHWgrc9loNEiTpE0zSFasQW6/Fnf/bhN5Vcqg
      QS2lKQKN6zjEOuJbw8d4xgnQAiDiwLHbmUnmeN2qNyH0wvOdXzutddZayeQetPdC1mNj+L/0
      y6SP78TZtg2xZi26HnLk1/8QXW+w+m//E6Lcw9B/+X2TZ1AITLLX2s0wO4174pBplG1LpHdu
      AMs8Lxe+vhPF2Un5z05XD6fb71atOJ+ZP09BECxJOUN7IgZBQJIkNBoN4iieV09UCUl44eXE
      G7YatSVq4H/5HxCzU+B6pNuvRfsFBHBwbj/PzT5Dns+VVjx1aifbR65kxO8OWehm5MtmlQjT
      XlUSPX+Exu7n6L35WkQhgMsuw7388uZmAVwHf80YqmE0Ap583CTaXLwNCisQU1Okn/8X0skJ
      5A2vMWA4MJn4dJlfewy91JLSqiz5xJzF2IT2Xt3e53yCfneOZanm3zohrECwkVcjUDRCA01d
      XAOpX0BohbNrJ8nUHCKM0a+9heTS6zLH9anGJGkXJGeYhsxFMyzzR1G65W063ToIIZDILM/3
      1L9+i+lv/oj1a8YobNvcdj1AY+9+EuEw+hsfRjy7h/R//TXUarBpE87Hfgt9z13oB+4DIK1U
      jBEMC7sLX65TIK+u2COwW7JHuVzOMtjOhDqDK/nnnS8boFswaCngzpYBXdc0lUuSJHMlO2Ed
      d+9OnMnjqKFR4i2XkRYMVFlOjCO+9xXE7LS50SP3IS6/Dt20JQeCwabkbl8T3/Ep+30IKdBJ
      s2Ie3QWRLSWjtflXjU9R33eYgdteR2HzOrzhAYTW6I4TvvrwU0x/924GbrsZd+KQSXzRGo4e
      hUolg20A4Lq4YRR2rQdkKb8BXqpTIA9xgPZgVv75Z+v/Pp3H53xifktBECyJl8r63C3cxfM8
      SqUS1dlZ/J334ux7ygS/jhnQWrztWpxDzyImTqDSXK5Wo2awNU1M3trejawpr+PAXHs9/kvc
      Nax69nlccZhk3RbiUq9JqNftgU9b1tyqNb7rMv7PX2fyi7ez8S9+l+KFG3n+F36XoZ+8jcGf
      fWfbM4be80ZKl15IcdtmON4L99wFkxMGvzQwCK++ETE5DuPjiNe/EVcrbZoaNKVMpxWed4Va
      abyUTNLJ/LBwMr5FrUZRdM6b80y+u9gnhNY6q4HTjcHte9vGhYstgKwHzDo5rAokGlWco/uz
      ri0CjXP4OeSx55FzM2bsy4eJT2iUFugrb0D3lLP7FmSBt294P/efuItDc88jhcOFcpTXPn4M
      f/ZOANyndyBf8xa0FOAXUH3DtBzZGldIZBihfQ9HOgy84QacniLBxjXER47Pf5kkZfxTf4fw
      PEZ+/WcNXGPNOpzf/o/o6hwML0N7Hnge4qd+HlGtkH71K63SiK7rMrp8dB4soVqtMjtrIKv2
      uFyqk+B0zN/5TNuWaXp6Olu8pZbe1od9uvLradNNeCbBPKVVU6jI9h660OzsIujvH8Bz3UXd
      ADbIle8TYHPB6/U6slGjcPvnkXNTrS8JAWE7KiBesZ543VajWhSKqAsuMtWdW29INDuOkA6l
      5/YQPHJn+zsuHyNdvtLI/qEVqAsuxfEDGo06+sFHCD/3JdxtF1P4mQ+aJBthVQzMMn8AACAA
      SURBVCJIZyo4vT1mA2H8/Qd/6jcQvseaf/pTRE/LY9YVJvOD75N++h9bpRE7+2DZzzqhEN1U
      kcUg66PvtEW6qQR2E87MGGn0UmF47FiSNOnaNsqQQKn0jBp0CFolTfKU5uAI1vZa7HcsFAo0
      Gg0ajUbWKyyrqhEUiS+6Cn/nPRA1wAtQ5X6c4wfbb1LugwfvgScfMxHgq65Hvfdn0VLiJBHO
      nh0Ec1OAQE5NzB+ErRcE6FPHEdNj6GUrcaRD4+77SPc+izo1RfD222BkOIcTA9lfbkOLid4e
      Vv9/fwJSZswvBKRhnbg+i3Q9/J5BsppzcWzyAewN8kCkTndhnhbSx8+VOp+Tb7uUR3Ja5ren
      0ksRxc3G1MQpwcJqkCNNg4ozmZtuQTKjFikQ7UJhMd/RenmKxWJW9t4awWAYLN54MWpgGDkz
      ieobAtcj+MGXkHPG8FU9faT9yxDPfhuapx67n0BU5qB/AOfQs8jZU/aJ6EIR7QeIyBjZ2vNR
      /YOtuQDU+BHS6gyiPIB/y2tRU9O42y5GDPTPg0Z2k+ru2PLs/YQQhHMTVMafN8n5gFfqp2/F
      ZmNeX3c98uCB9vLotpJxN7K6fz6aupiqUOcL2TJ49m95sm1ZnTPpFbWIJIQ4sxLn5zAWpVVb
      WqDTzIddzA2QpilJkmRFjsvlcgZHt6SFIBleAcMrzFCA8OZ34j63C7Qi2XgxyisgevuzHl70
      9eHUZtGFAPLqE0BQINl6JWiF0BrlOui4BV7UgJo7ha5MoU8eRo6upfwHv4d2ZFulaRFFpD+6
      E3XiJO5NN8K6ZjW6uSq1r34L4TgU3v5mdCmgdupIxvwAcW2GsHIKvzyM7h9AfvgX2zdAtyKu
      3YJRdhMshkGchyjkobALFUS1hri95nzD72utcT0PIQVJHKPVmW/O+e+Xkqp00QJgSilTQrHp
      TrYARGv8yjRB1KvoUi+qM5kISAaXk75qFGjm76YpvOMD6PvvxA2reAO9iHu/g+7tJxkcMWXQ
      tQI/QAuBWr2RZGy9+X4cIp/fBXPTgKlr2nJpavTEEXR5GKQHPaVMqKQPPEj09/8AaYp65hmC
      T/w2ulgkengH1U9/HqTAWbca77or2j1Vdg7isBVltmVRoHkce+1lphthaIwxRJukzZ8Ei7UJ
      OguhWua2n3d7nv3sfIIzCCkyhKbruMRxRBTFbVXTupG1LbRuHSBCSjx3fhO4s6VUKWr1mumr
      5ZvIstaaSqWCMzWBd/sXEDOn0MtWEr35/ahCyWyKyozp0VUy1abls08jvvo5w+BvfBviXR/E
      u+sbyNocpAoxPYlbmSU9dACdpDC2En35daSja1vqrOujL7gckcbouSn0/ifb5kIdOkb4me+h
      k5Tg/e9FXn2lCcjNzJqNp0HPzRpdvljEGRvFGV0GjsRZvgwhXdygRNLIgy0FXrG3jc+cj//m
      x/9Aa02xUKRULGXeFFNupNJeWS13QthFWQzmyydigPHwWF0/X+7QjiNvH+SjuudDMEs6rail
      MV6drH/X6UhjTg7P80zCiBCUy70UFinh3er9vuebXm+NOlIKtNJEYYh3+xdxjuw3cOfZU6BS
      xPAy/B9/A+/Ru3CfexIcFz2yAvHVz8PeXYg0xg2ryJER3KPPt6FFCUPU1DQiiWFulvSqm0j7
      myVLktQYwFKaytJ+AT19EmyXy4kZqp/5Hsn+Q4iZKfTsDO7114Prmm7zE5PoOCFppOjpWdyt
      W3DGVhDcdAPFN70esWoMy+xJo4ZSCcJx6Rlahd/bXjbFtamH5XI5C4horak3M/Pz+HCldeax
      yNcMXSyyEU9bn9RmpdlqwPYax3Hwfb8thyAPnXg5QW4qNe5EW6oxSZIz6g8gEMRxTBAEDPab
      OjuLpd5ZF+dUdZpYxfQX+xEIZmZmDAAOELV2G0DMTeM+8QDy8HNm9HGE99jdqOWr0IPDyP4+
      ClsuQJSKsOex+c+sVEjnKsigCduuGUkshODEv3wTIQTLfvptIARKOjgbL0UdfQ7dqBI/s4vk
      2KSZAxfk8DDYLvODg/i//muEX/gK6T9/jvRb38O7/hrkJRchhgfb1ly6BfpXbUUlkeks7/ht
      DhXHcXCFFBQLxazAktaaKI6p5xpiWNXHad7cbpozSTY5E7IeCaCt/ZLFpRQKhTaJH4YhaZri
      Nv3jdhyd0ImX6xRIkwSVpjiue0bSHyzwywiAxYxppGnK4cnDfO3Jb/LYsceJ05gVvaO8+cI3
      cunoNgMzANJt1yDu/AYiTYyH5uKrcHc/1L51wwZibhp9y1vwPYWI62acSYx2XVTvANSrqOPH
      SA4dRUcxaaqQmy5Ar1iNc/QAFIqMvO21TX0/520s9CA2XYYEfDFE9MR+RMGn8OpX4d16czuE
      wfdxr7oC5/6HkIMDyDFjqMs0wXt+D87Jw6j+IeKNlxj4hmtO0Tzza23K6YuT4+N6cGAgM4xS
      pZidncmka17yNn9BAK7jZpL2hZrInQ7VKaXpXGjbXeYN4vz1+QSX/EtAS1Lmu6C8lO7RhejF
      qmNCmjqfZ9PlfqHnT85M8hd3/w8eO7KzDW7QF/TyK9f9IttGLzHPRiMP7UOOH0Wt2oBavhLv
      4R/hPvEAovk91dNH9KYPoHsHKN7zHZxTJ1vPkg7R9muR48cQe54kPXqUdHICPTCI/plfwXn4
      bsQzT4IfkN76DtJLrjp91vfsnInaFgvZdbJWwXnqYdCgLrmKVAlwHSgWEWiC3Y/iPfmAacaB
      IF2zica1t6JyruY88/u+j1sstDrD2AihZcS8wWn1WbuUSimCIMh66HZb5LxaAt2rF1h1p3OT
      dOr0nTCMztMn/53zhV6MFBdC0FvuRaXKFJ96kd/vRmma8vjRJ3n86BPzigzMhnP8cO8dbFEB
      1CvIQhl3bC3pmk2gNXLyOKrUh1pzAWLqJLgeyYrViCPPwvAY6fJVyKkJhDaeJV3qwT/8HCIK
      EStX4Y6uIHpmL9EF2xBhHfH0TlMNolFHPnw3avM2ExdIU2MLdL5rn0n8yZg/jfG+9PeIk0fN
      /5/eif7gr2Y5ySIKcQ/sbTXjQOMcP4icm0YNjJh7NfnJZtRJKQ0c2k501Cx+2ulxkVK24cOt
      YZqv1Z6nvJTubGlzOjpdY4tumwLMyZBv2NeJ8DxfvEMvRBaVaysj50FqZ0taaw5OHyLV85Gy
      EsF13ghq0jCUqs2i6rMEm67AefwBnB9+3ahDA8Mkr/8JmDhs6gHNTSPmpklWrENfdAXuiSPo
      QgndU8Y/1ooUC8fB3X450bW3oE8cNkntljwf0Dg7HoAnHoWhZXDNDTgnDoEQpBdsIy2U2sYr
      Th5FNpkfQEwcQ548glq1ofmBRHdm3gmZVYO2fGMBf1Z7aUEhVJoZvp3eFKU1MsdMbX9rbhTf
      940kR7eV0lgomLXQgs1Tuey7dJH8ncxvN6NloPMtRrAQOY6T2UD2pFussZf9ctfPVwT9bCmt
      aPtM1SuoqZP4j9xtEs8BJscRu3fAUEfR2fEjMD1N4rgkl16HNz0f6iBcB1wXNbYWdd3rkE88
      hC72oG58E+LYEfjyv5ggmpR4h3YhlFGlnT07Cd/1YVR+05T70Y6LaHqKtOOiy60qENrziTdd
      gpydMo2yHYdkw1ZjlzTJznNbuRUwkrdaqxHa+o+iPQGlM9pq/xbHMYVCgaBQoFarZUAwe888
      s+YhFLBwhtdCUr5TvckjRPNqWue9XglUyvVns9h8ODcVyK7XpSu3Mbx7iMnaqfa/L/A9IR20
      I0FpdD00MIeJ8XkbQFRmkc88gVAKceIwyW0fwvMCZDO6q4Fk+WqUdNDSIbnxzYirbwTXQwcF
      5MP3Ipr1RYXvIlXLjhTHDxlbZLRVdl31DVLfdiOz//hZejevIHj3O1H9w+Z6pVA/vovagw8S
      rxrF33YZemQ58eAKdCOConHw5CW/nSMJEMURYdPr08lMWWRWt3dacRyHYqlIFMfMzc2SJHFL
      etNdF0+SJGt4vJCa0+2zfE6CpdO5Os/3Vk556ma3LMbmjaKIubk5RsvL+cDl72e41GJgV7pc
      MHYJbt9I23dkTz+if4T0ulvQGtIwZuJIHXXwYKsYLhgbYfx4C8w2NYGOYxqXXkc6MILq6SXa
      cBHhhq3ZRtNCmGJavsnL1es2ooeWNf/YviG1lOhiOZsLJ4lx56aYfuIwU3tPMX5YodZtRtgy
      OCdOEH/ms8z84EEmv3QHoVsmXr6W43/43znykd+Hap1isThvnpVSuEmSUKvXTCj8NAElrU2W
      Dhpcz8V1XObmKm1V5bTWbeCubqUKrU3QCavO2xud3+v8f35TdNIrSfIDWU3PRqORxQ4WY/w2
      g6zRaHDN6qu5YGgju07uoR7XWT+4lg1D6/GkSzp5FFWbRRZ6cEdWo7RGX3gZ4pojqO9+neps
      zECtjo40DPUiJk9CsYw8NdFyYpbKqN4BEs8nvuqmrqe4JakU3vgRRFgnff/Pok4cQw8OkzTm
      cB+/36RdXnUjqn/IeBvHj+I/sxORJoxe0Iu6/AL6BxPEp/4YMTSCeNeHUNJDpZqZUzGi2qA/
      SnHz0d4uZf61NlB/cez4MW0H21lOxJIQptmzzRuQQhJGYcbM9rj1XI/e3l5TVybXVT6O4zbp
      bQfV6aq0G2Qht6p9ASHES160dzHI2kq2C32apvT392egvrwbd7HeTSnF9PR02xg6PW5Sa6jN
      guOhCiUzhqlJnK9/Bo4dhtGV6Otei/fA7eiwxlSvhzO8it7ZOngBybW3kKxo7xIjtTJNK3rK
      qGYNIEelFB+7F+fkYQOB9nwal15PtHwVoE1vMSEgSRDPPQ2uhz99vE09SsOY5LvfzgCD+ppX
      o971U6T33EP1B/cit26l5z1vMwV7wwhHSIJmxbg8zzUaDWq1Gq5SGkTewM2mpvmZzqS/EIIk
      TVFp1Mb8zatRSlGpVCiXy5lx3I357cR3+8watt2a23XaIK8EynvTCoVCZuzms7yyQGNzIywm
      WWGRJAmhanCicRSlFSuKqyg6JWS9grP3MahXAIEcW0e69kLSwWH0B34RKrNQ7sO7/3ZO+HVu
      v7zAVFmAGGd96QJuWv4mPNleV0qGdfyvfRpx4jD4BZI3vodkw1bcE4cz5gcQcYT/zOPEw6Mo
      6ZAWSshaBfeL/wT79oIUpvr0BZsRGfKg4wWTFC0l4rWvo/fGm0wNUhuwLRWzqud2LixfWde7
      K6WpuW4XITu6BNlusMymtEY1o61aG3XIRDBbDGm7lliVKp/QkTemT6e/2793gt9eKUyfJ1Pn
      1KG3qerkwXt5dW+p4BvW7joVjfO1g59jKjLGcJ83wFtXvZO1h07mYBAajj2P7BtCDSxD+QEM
      LUMIQVos8p1tAVNlmV37XP0ZStN93DD8+rZnuk88iDh6wDB6vYpz7+2oNZuQYX0eKEREofHd
      2w4z48fh0H6DK0pBTZxErl8PfrN4w7Ix9NZtcGAf9A+ir7sp606jO7QJWz2vU12enZslTkzp
      Fzevq1noQYtJHRynBXlIk2SePt6ZHqi1zrLIbDJ3Pg6QD7AttNj283zp81ci2bl0HQfP8+ad
      hFbq52Mli534UqvV0Gh+cOw7GfMDzMbTfP/w1/j56kXknyi0RlRnEYPL2+I54xdfyNTJHfOe
      cbC2j/5ggPHwGIEscGH5UkajsP2iJIYkIe0bandlAunQcqqywUTjEIEssLynB6dUBps4M7wc
      XSqDSlG9g8QXXo7ecjni1AS63Isq99GNbKn7zg0QhqFp/tJ8N9ceCa3FETiORAqJ1oo4bjG8
      1tqE6YW5TrBwBHahyPCZ1vd5pTJ9nvInmcUudbsmLxgWi+wxH0URDepMhuPzrplJZ5n2FCMR
      xqOTJGjXQ5faIcOhrrM72k3B9Y17UyWkTX6pqQqPTN+dXft87RluueB61u4ZgNlptOOgNmzF
      +e4XkRPHiHt6cUdXgNakQ8s5sGE5j0/eQaIN9GbEW84Vb3kH/o6HTZ7xq28lHV6GCOuoUi8K
      jM1SLkOx1EUnMnPardhzmqZG73dcEpXieb5pkGE3gYU6aK1JVC47TAgcIXPM3/6wzkT6vJTv
      9Aa8kqKzi0FSyAX7FZ/JaXi2lKYmsKkBT3q4Yn5SjRQu3vrt6L27EI8/CpMTMDKKvuTa7Bot
      NPdOfp8jjQMtCLzwiIhRWuPI9nHHOuJJ9yCj7/8lnCMH0L0DyAfvRD5tGlOo8eM01m8hvfIG
      Es9h76kW8wNMxCc50ldkXVA2wa/efoPlKRlohExivK9+GnHkgEm8eetPko6uyr4vhMh6TuRV
      yuw0bK6B57j0lErINuZUilSlbQumtKkDmaTJvKQVMGpOf38/xWIxO3Zsql0URW14/vxR/2+F
      tNZNgOEs09PTzM7OZg3nXghEeC7PrFarpKnCkZJAFrhs6Op5120fuoJS/xjK7YH9z8HMNOK5
      Pcj7f5SVRJmJJznSOND2PSEEgROwtrSh68atJnOk5T7iLZeilq9EjB8nna0Rj8+gqg2YOIHy
      C6Qo6un8lrzVnXfDnd+Hb34J7vx+2zOcB+9EPLsLUa8iTx7F/f5XkarFY7Zvcqc9lQdb5jdJ
      W0YYkFUqyLs3W0awAtWO6cmX606ShLm5uWxxuzF7Z1T5fKKFsE3nQp0RdTsvFoy12Pm+QCZ4
      8tLvquHr8B2fp6efRKPZ3LeVy4auNgKtOpd3/xnPT7OPS6S794cY8Ie4bvhmvnfkM/TMhcz2
      SGLPvMeQvwytmuvsuKRDY6idTwGm4YZcZTaOi0efO8BU3IJRCA2Dx5tZXFrjPP0YQsQkr74V
      3Ttg7JP8QOpVUClaCqQju8ZSbOK/nYtSqZTFobINkMGhrXuTMwsqNRqNLJHDPjyKoqzMBrQH
      rs5HxodWNQaVqsywX6yxdkI0tNbMzMxQLpcXreapJa1bDa3b0jA1XDZ4dYvpdet6feF29I77
      YeIElPtQl12DbkKyB70RirJEXbVL6hXBaobmUj54Vw1vrkKtILn96jLR6Aou7X0VcWy8LFKl
      qFXrTeOKJCHxfb43tY97vvpjUpWweeVaxlYWcD2NFA5r1TJG+0PonUQ6Glk9hXjkbtyjB0h+
      /mOkl16LfOpRRNhASwd16TUk0kULKPe0oseWLNrY8mKxWGzbJOLw4cNaY1IiG2EjY4KFjNjO
      5nV5G6ATsmCzufJ6bt61eT5thjRNUbrVmieLTJ+mwJVt6PdC1y1Evu9nOKDFmosojjk1dYrA
      84l1RDWpUHJ78PBRMxUazx2idMXWecajnD5l/PZDy1AjK0BKYh1TSytMRid4dPqebBOsLKzl
      1UNvpP+H38HJZYPNrBxFvePDuMpD6RT/ub3IB+6CNEHVQuLxE3zLr/DnhQmiZvqkFJJLV2/l
      o2/4OVbqAuXPfsbo916A4wmkTkAItJQkv/Bb6OUrkSeOIJ7fix4eJd2whShN6evty4oHWGGu
      tWZqeirjZ4sEzQcasxMgiiN838+Koy6kpuRx5daFJ6XMAl422ga0ZXJ1GsTnE/Nb6d/pztVa
      o1BI6XSt9ZO3lYQjzij1MU9LgVkKoxDHcdhTeZKHJn9MqBp4MuDKwevYdGKQ6R89SOnSLSaR
      JEdqYAgGmnghAc9Wn2LH9P3EOsSTAVvL21kejOHLAgPeEBIH4ghVD9FKIws+ZYqEooCWGnd6
      Gvn1zyLGTxhtIujBaYRcNldn07BgdzPVWWnFzkO7+d4T9/Gr7hrEc3vMEBoNdMFHF5utl1yf
      xh13k56aofDedyCueV1mX5WKpQxOnlf76k3tRGtTT6qT+QFcTa5ziraYn3ZnTwY/cNysnF7n
      4iVJkqlCvu9nVeU6meZ8YnxL5v2M2xfMJk+VMp4vKVEqRcG8008K2SwDrl808y8VRVHEqfgk
      Px6/nVQ3U0vThHsnfkDf6ncR/8Kr2Fl7hEF/mNWFDUjaN6BC8eTEDr538GtEaUzB9+nv62On
      epA3LX83Q96yLFAae33ofcfRSuGuGIbbrm8JuGoFKs0Am9YwM4OjYQOSW6seu4Ocex3Nowef
      oLZpNX1CtGAOmy9BexJmp4guuIL6//wXdK2O6O8j+ND7shiLhTjnybiBa9kJXSwU59kGWmvj
      BtXaJApEcTQPfuD7PoWgkNXi7Ka+dLr4wjA8o+6SZxI7eKnI6MvGKFVa4TmtY9RS5/g6wXzn
      QudSYsae1koptFIcrO3LmD+7Bs0PJr5FrGPsht3Qs4Wbl70FoVvMs/Pkw3xr35dpJGb96o06
      9bDB2LJRDsw9zXBQQHoFRKEH9cwzJNXICM6GQC437kihlFGxRleiD+4DBPQU0ZUKCZoD3nzn
      SJzGqIu2o695DTyzG5atgDe/m2TZqAmk1Ro4G+8lPXYCd9MG463Umt4FmjuGUZR52co95cw7
      lKcmVs24LpM0yVCagR8QFAICP5in33ejzgHYHN9OL1An2MuC37qFq19qykefpW4Z7Jl6RHfm
      PBfG7yx4dTY1jqzR6zWzrIAFc4rjnEdHo9lf3cuGni1sLG1Ba02oGtx9+IcZ81tqhCGzlTkS
      NU4j3AUInJGVJEkDfIkfKohSpNKIJEZ+9+vw4N2AgEuuRF9xDbp/mF13fIGvHHiQO4rzPUtb
      RjdR6B1AvednTNEt6ZLs2w+Hj+GsXwfP7qH8cz+JXjaKGh5C5SLs3QJe9bqxV/r7+ykE85k/
      qzziOA7SkRTcAm6Pm7k1z8UwcxwnK7fXKUEXMq7PJ9dop9fmjMohnsUzEpUiU3lOtoAQAt/z
      CaOIOIkRCNb3bOaxqQea0r51XScFYULxrtvxeJz0qldT6/WZi2a6PieKY9JCwH6vRrGS8sTB
      xzh60SmcNUNsORpxbbwSNwhMptd9dxoVCNDHj6M3XogqFOl9+wd55muHCCdMXEEAF/p9jPYM
      8N7L3oQrXbOFe/tJvv8DGn/3T+g0obBhJc7USRgexvnIx0iaG71ULHVFBVvp31vuJfC791aw
      wtktFucj5haDEW3NyUqlkm2CbgOxR3ceFPZKIRs0tF6gFzP2JE1I4tg0lYsTCv7ZF8CyPu1o
      LkJpzYAzxBtWvIMHJ++imlboqcX0xZLn+1obQqaat945ycqJY8CziN2PUfzQhym6PdST+rxn
      DPtDCNdnXNTYUd/JdDgDBaDgcmTYYVYG3Obobl22MpfrqoEV/NHb/wP/5/7PsefIXv6f0mpu
      7jFpmenTu2j0j5E0E2GSp3ahq82ao8ePgCtgYgJ9/CiMjeH7QddWsVproiikXC4vyPzmGnMK
      Ob/3e7/3B0EQLIlr0oajbYmVbpQvif5KgjlDS29XHXbTQpS3rwxaMaAQFM65jSoYNaXRMHV6
      Up3S7w2ytW87F/ZcxDVPTbJxSvBMX0jomjH0zyW86qk5nKaWKpIYd2wD9WXDHJzd3+btK7pF
      toxspuAGjFcnODhzqP3hQjAjGmweupjewVWIMISJk1Duhzfchlq7Ibu0r1Dm+k1Xc1vPGBfP
      1jLXgQwbqLjOzMgAqU7wnALp03sQnot38VZEdRbWrEXc8kbc/gFKxWLXvAmtNaJZAa8bPyml
      mJuby3jy3Gf+Bcj3fdN28wV6eC2UJvmykYbpe3ZQWLOCwrqxrpdYz5H1nCmts+Jh3cimlTrS
      QSnrpUgpFopdgXIvOEStCZu2VqNRJ0VxbPYkjSRkWc8QA8V+Sl4/YnQdpX27+Ml9Azw+1OBU
      CUZGL8Yp3wnTzSrOUiJ0yo19lxGs99k5voNGWmekuIyR8gC9QQ8AtaQ+r8QKQERK7dhegtl9
      sHoF8fZfQw2MoHvb0ZpCpXhJQm+9kTG/BubKAU+PKBpTTwKCgS1DrPmTTyJTjRgZhuNHEQOD
      qL5+eorzPTp58nPOmvxcRXE0zz5a8g0ghCAIAmq1+ZiP85u0Kex6GuyS9RwJbBDtBe7YxFaJ
      5rWe7xus1TlsfNOXV3N45hj/5+Ev8OSxp0lUwlBpgLdd8gZuWH854WiZQK9kxfgM19WHiVdv
      J16xAfUTaxA//AZi5hRixRhObZrS7h3cNLaOK7f/KolOKLhFDlWf4Wh1PwA9XsnkfHdsgoIS
      jOx5Gi80SpAcOknj+jei8vZUvYb49lcRz+0lXTWG2+MjBGgB+9aO0AisAqWZjibp7R9kqDBm
      nrR2PRrjYDmdtrKQGtqIQqqVCq7r4QuBnp5Bl4rntgHyePFOyg/wdLpxtxzg84KEYPB18wFk
      3UhKOc+f3o0caepwWoPf93y8s5D8eWqEITO1Gf7yx3/HU8f3ZJ9Xoxp//8BnOFU9xtVrLkKM
      9DO1bJj1QxfieCbtkdUb4P2/gPvY3ZDGIIRpinf0AOX+ZbjHDiCnxtnSN4C3ag0n9SnW929k
      tlFj//Rz2SaQQnJlNMRo2HIWyOkJnPGjqLWbW6rfM08j7v4hJDHJ+HGcN7wBN6qhJFR75ttA
      tbjCcLEVQLW1Yl+s19AUeq4CAh1FzP3zZ4nvvQ9nw3pcW8gVWp6CfJHcbmAta7TaOp7dGHhg
      YOAFN0D+7y/GC9Qtovxy2g5n+uzOsTbqdQoDA+fkBfM8j51HnmLXib3z/hYmEfcfeJxLV24m
      cD0iEqaiGUa8XNGpZjea/PEl0Pg77sZtdoNxJ45z4cwoa1/zFrSQbOzdxh3Pf4OjlcNIIdnU
      v5k3jJfwyLdQEkzrWY7UnsARDiuCNfR6nilymwCOS2PbNcj+fnQaU0gOUY3bC/QWvXLbOhcK
      hYz5XwyvNMIGaZLiOg568hTx975vYhITk2YD2HCxNVrL5TKe55EkCZVKpauh8ULHdmcOwOnI
      VkN7MZSvQbQYRuTp6HTBsHO9b5IkZ90AI1UpjUadI9PHF5zjubBGIwkJHJegVqd86DF8/3nS
      dVtMhlZQgkIPVJvdH5vfE7W51u+AnDyBnD5FMjBMI55jc/8FbOxbj0BQVA61EZ/i5CSybiTt
      cytc7vYeIZoxwaii7OGmda9n5LZ3w97d6MuuQo+OkTTTGVclPvundxMr2398MgAAIABJREFU
      A8XpD4YZKrQ6yueLBneC3SzvdiPr7wcTz3FLRcTwELpSQRQ7VCA7iZVKhW6fny2dDveegc5e
      5JFm6aXyHCVpYur+L+I9DV6lftYbwJEGBrC8d8QkMnW5puQVCByPoN5g86NPUKgaz4t65gmi
      G9+Kk6aIYg86NMbtlB/x1FCDuXUeg1WHyw7EDNZsYpRZr5n6BFIIJC6DdU1/XaFoMLF+HeVE
      QG8/DwQPIOIYV0LiCOqqyqONh7nl5ncgbn5T9v6Wim6ZrSNXUY1ncIRL2e9vU7FtmZdu6326
      9a+HjYz/hBDocpnib36M5NEdOBs34OZrAS2WD75zkIudBCOlBGWimYtVSdlSN1XEQMPlkqB9
      kmaRgbMphRgnMbV6ne1jF7F2cDUHpg63/d0RDtevv4qSX2L4yIGM+QFkZZrC/d/HaZYOVK5H
      ZfNFPCR20iAGBCf7/3/23jvKrus68/ydc+PLFVFVKKCQA0GASMyZlCiRoqhgWbJHktv2OExr
      pu2e1pK83O6ZabV7edrTvbrdM15jq7vdbtvytFsOSlSiEsVMAUQgARAAkWPlqlcvvxvOmT/u
      u6/eqyqACAUGtfdaIIEX7j3v3BP22fvb32fw8jrBew/WEZ0DTSY2Q5r4ysMOIVfVs9EcISin
      k4S9XWzdW6VvyqfiCPatMhnLSUpBgbqu44r5JFUQeWNpswMpJWW/yET5IlorOhNLSKrkglnf
      K6HpNw0DNTyOMdDXOFAvx1oxhBoZx/j85z//hcXGpLdmk4G2UrTFsCuBKl+tRcjCcEFMztX6
      nVdjlmXhNiIbV2sRhYxBxk2zsnM55/MXKdZKONJkiZvjAzc/wid2/Az92eVkpwuYw3Mqu0wT
      nOg8ILWiUp3gaK7ahoT0TUG6YyUXh3p5o3SI0eoFUlYWP/RwfUV6DqpBa0XHubMMnBoh5UG2
      qlkyo6h2dbMuXIkolNChj+Wm284dAT6hDpDCoBaUOTl1iFpQoR7WmKlNkrW7SCZSVwVHCcKA
      uudR/ObTXPhH/xwjlcTdvAGIFvvRz/x25AIt9oONDyvADSuDvBGD8a3OQ8Qh4mv9LUKICKEq
      JNtX3MK/6BzkxKn9dIwP02smsNOdSM/DqFYxfQ+R6URXShBGxLe6XIyoyzNdiFQGZyFPVQjO
      dEDVuwCAp+pMe5NoLdFBhU76sZjdvQxhYE2Oz3L/ALkqbJnppdaZQIc+1ZmRqF4gF1EjHi4f
      4vDMAULtM5BYzqC1dD6de22azrD7ivMlUYK1Uf872I+7cS3WsgEmv/YDUts24q5ejr1m5eLl
      AeKDcSy1FL8W1xe8lXYtEZW2bG7j8b3ZAet6TRoS+zoUIOcW1WekzfaRcYzpPMquEAQhsryL
      5PRUpNWVSKGdBF7ooaZGMQMPfIGu1xDmEObgJnqsSSaCcbwgoFSpkjKyFJwCphHdo+AXOFk+
      FVGua1CizA69ioRwEJaDM7Amwv9Mjc1uJIbZ5PEHUEKQ9wqoyeis6QclCt40AQEzfp5h4xxb
      klva3FutrzxRqrWmMDxC6btP42zdhLvtJgb/4+8hpEHt288gGqH3rn/2m4szAYQQzQhSXJgQ
      D/4rgUUvpimtUSq8amyOFIIQMMTsmaiZuWXxJ0BrNdi1WlxfrJRChSHyyF6ssycQjcy0rNUw
      UhlESxBCSMlZs87T/Xk2l2y2FRxsIUCFmBdPc08+wbNpiz8/toux/DSGMMkkEty5dhPrB5Zx
      sXpxVm9AwBGGGTaK/PzyX8BxO0BI/M13IGemEPkJNFDN5vBa8GaeZbXJsPYavay0V3LcOw7A
      TJinoiqkjVlq94zbccULURAEFL/2XfJ/9OfYG9bQ96f/Dm1GQLuuJx6KyLhOvhH95mvu/YaZ
      pkkqlZrH8en7/lue/dWNwQ8R7KB+apiwVCG9Zd2bflcI0awBiP/dKgryZvede63Lmeu6C+LT
      r9bisKBhGHi1KvLMsSabgwCMSglhOTAnUFCTikNJnzdSPnlL8z4xiDBthFfH9ersmKzzhxN5
      qsoDPEr1Ct99bReWZeDZ83FdBVXmO2efRQQmq7tXMdDZw4VbOlCjebpnAlZOTSF9H9VYHJXR
      3h6hNV1ko0KYRt91p/oRgYoOwck+OtLdV9xfSinsmzdgLhvAvbtRAx0qKq8ewe7rxt33DGLX
      86D19U2AmOty7gP3PG9eKPWtsNaEkhCCYKaEP1244u9fTXhtrvlhBEWWUl4SPh0ftGNGiOu1
      GIgXkRjophpKywcIevqRk+OzOl9odlmRAqMv4eVOj5016GuZwz2Gw2ank+eqI83Xql6dw+fP
      s3JFjsmZPEEYkkzYpBIOSoV85fVvEoYKU5oM9Haycc0g9nIblllcHPa4Y6ZAec0mlArwpcYL
      I9fYLBXp2b2bgekxzH7NyzenSTsdrM5uJGFHO2RchXglprWmWq8hN69n4MtfbI6J+ukLnPyN
      3yO3YwOr+0uIBvPcNU0A27ZxHGdBLLbv+42081tvrQcnpRSpresw5OITzi5kQsgFA/GhUoRh
      EMl0En1kMSHfcZDBcJOE625BTo9H6i5CEA6tx9t+P3r0HP7xfeTr0zxnj3HAnGWLrhiavAzo
      m5PMz6v28I4GxvMFpkolzk0NN6oIDYYGunAsSRhGgY5ABZwbHSeZtFmzvB8hBKcGbNZ1b6Pb
      XQpAIqgxOn2G0K/T+5OfkDl9GoA7pkHlOhi454PYhnPJMXY5U1q3cVHFZi/tpe9Xf5bk6qWw
      97tQjBJ/l50ArQkqx3EuG7HQOuIEjflX3mpLpVI4jkMQhlSqFWrV6iWFOhbb5rpPraYapXuE
      IbZtkct2LNoE0FpjNWoBfN9ncvlSRjvvw6579GfXEDg2Y/UzyB5JKbWevz38lwQtpZKmaZJJ
      5JhZsZ7q2RJutU5RhPxxcR/1/pDNVieh0swUPUYmK5ydHm67f1gPeOP0GI5lkE21Y/Mvjk0x
      NNCLbZloIagJj0D7hITYpsOy3g2IwMeqfa/tmneIDXj24Dxmtys11Rj8co77KhIuvb/80ajd
      d2xBHD0I4QJnACllM44fVyq9WZIsBhtdDvd/Iy0m5oIo6ZFJpdGhekeA7CzTwmywF1iWjR/4
      SLE4GmBxMZHv+xya3M8LEz+kpqIFqDM4iJCzzGuuTJBJppmpRi6h6zhks1mklDzt7eKN5QO8
      r+MRTpeHOXfkRVxMhADDgJ5Ol5qnGJlceGcPQtXqvgMRUjb+d8JIMVa/yN6ZFwl1QLfdx87U
      7eTeOI5w7OiLWkNHTySOcR1h84jz6PIkBcpNwtbbgcYO0DroW0XnYrvcqh+zbr1dg1+I+USo
      lwLovV0WnUkinHoYKqSzeC5QrVajGlR5fuIH1NVsxK2iikg92yfVsEIqk6BYj85mc2HYF/xh
      XvEOMVWaQotwHitIwr60szCXEEYgWNazhKSVImNmyZodHC7tb7qo5WqR6uhxPvjcKDJQkElH
      Ihtb7yS0bPQliITfzMIwpFavw2UG/9wkp+m6blOm50pNKRUJLtTrb9vAj03riPQ05nyJXbF3
      ksVVSo7dzl2zGGYYBvnqZNvgX4ihSIhIwceQBqGKVHiMSkCn45C3ArSA0doF6v7CC0c25WCb
      Fl4w/3nfnl7Kvd3L+XL+EL6AHYPb+NS2T5CwHFwjwfcnvtae2NKawPeoEJAJAUMi/DracdEN
      WMi1IBPiqri5lP2mabYhSVtdK/NK/Kx4m425f64EDfpWmu/7FAoFEo0yubd7Ui5k1gJVSoth
      iUSCVD3TVqSyUMUWROTHSs+6F6sLDh+qL+VousxTvZMkzTRLMh0cHNs3i/WXkkw6TcJJonWS
      g6fONDOsaE2/neYX+25hY7Kb/twA9eVr2dS3kYQZKeEoFGqOTvHAcIX7nh0hWQpQUiDTKXRH
      d1vt+LX0UxjOMprH+CrXdZtI0hjC3xotvOQ+E7s3nudRr9ffUQN+IYt3gneq2QsAua7X4ut1
      Ol2sz9zM0eLB5nuhVpiinbZ+pjxLUICGJcrF0ZItxTSTCegf3EnG6ODE9FHemDqMkIIlPT3N
      5Obq1R3YCdh38Cy1uo8KFLquSYvot+10+/CX72xH6yJZ6q5oI8BdcbpEutQ4jCtN2DtIsHF7
      8/1rPQMk3ARhA1woDYNUOo0hIzndSwVojN/5nd/5QnyAjAd9nMSq1Wo3jML7vzdzE+4NA9SF
      YUiftZSETKBUQJfTy23WFgbLDoHjIITJcH6UYjlmXYalKsn76oMkMREI+jKrSQ3ejC0d1nRu
      IOd2gKXR1izLtJSSXCZBreJz7vQUYV0xXavS4yTZ3jmATmVRvYPzzg/d9hLKYYmZYArXhw0T
      Jp3KiQ6+YUh4x0OEgyuipjWgJ47jXLVYoJQySjI6bhtNerVavaRb3LYDxMUDMX/9YqoV/vds
      Sium8tPYlo1tW7i2e02HvIUsfj7O2ATbXjnJNi0Q3VnMPU8iAp9NPf1UPvxp9pvHODi5Dy/0
      WO7ZPDidpEs3Fj7AyPbgNzIVaSvDPcsewpm2eWXqhXn3y6TdWXZp4EB+DG056FwPzlNfRlSK
      BBu3U1i7jilvAonkttx97EzswN39DGlvHNGTRnZ24We7CbfsRGnd5F+9Vr20+PNxhC0Wbbzc
      It58CmEYUiqV8LxZesR3ElnVT4PValXq9RpGzli0CaC1RlXKyG/8FeLUGyAERlcHogE3EBMj
      JJ97ittvvZ8t67ei0LheQHrfC1CcQQtQjosu5rFPHcZfthosB+v8SQYmRhHpqGg9Ki30qXsB
      o2NRKNUEVkuHgc5+wptuxfrR1zBGorJIa3KU0eAc40siZZfRynm2eL2kJ6ZnkaKGgcxk0KZF
      GAZI01q02hStNeVigXBkBGGa6I7O9jht9KFoAgRBQKFQ+KlQZXynmdYR9XwikSAIgoiFuwUZ
      uRjXV6UCjLUkqbSCRpG+AOSFk5ilaeRtDxOs2og1dRJRnIFGxphaFWvkHCAwLpxCd/ZinXyd
      dWhuHkywL1XiyMlhTpwdp1b3Cf0QN2nwL0U/7zHSMFFGv3EAOTPZbIJQiuR0HhoTwFd1LtQv
      kpvTftFU4ZJks1nCMIxE7BpM49faJ+ViAf+b3yD85jfAdjB+4RdhRzvJgTy4D9mq6jKXbqKJ
      NPwplDXyR6dQ1RsP1RZC4HkehUKhORkWEwohhIgIqJavil7QGpXMoePMtGEgXBcRePhHXuLs
      2G7sQ69E8GgiIJqQjeeOxhg+g3XiUASmQ7CztpzJkz4H37hAuVKPIA9SoB3BU1aJYi5Ldd16
      aoUxgkyuGX8KDUm+p32419NJwt6B5me0ZeOvXI9u0M/HzA+JxMIVY1dqlWoVr1gkfOlFKJVg
      ahL10ovzcltiz0+iovhYqmeh8GY8IX6q3CGlGPnqD+m8exvpW94cKboYJhvRiMUOhQohUKaJ
      /vAnEWs2Ml2e5vTAEnRhilVvHKLfchHSiGDJfoGz43u4yU/RmiwSiEgRRofRwVQraESQTrkW
      +147MRv6bLGfyBovrBnkjoE1ANR7l5Dr6MH0PS4O9TKTC0BDri7oqQgcU1NbvwW7dymiWiYY
      WEG4ZOk8Wa7rWSDCMMSr1xGWjVy+HHXuLEiJXLFy3mf1shWzZ4D5cqmzoK3Wwb8YD+9tn0xS
      svzXPgby6tsQJ9uuZlcUQlw39v9yprUmyGR5rjfJnx57kvOvR5z9/dLik6ml/GxyACklx/sk
      4ylN3dAkwtm26EgqFADV049204ijBxFSMp2RzNQWhkD4OuRMNU+sKamloLxxM07/GrLap6d4
      nDA/ylC+Md28Gl7lJHrtVkh1ILRCTo5iTk+gcl34xnKcRj9dyySIa1C01mCayE98ErF2Pbgu
      YvvO+Uwl9z08OwFaqUni/7dyssT8QK2i19dioQoJlcI2r70SalHMuLZVppWcKZ4IMfpwLgQj
      FgsBmjQzi2mtpMIHh9/g3//oT5goTTffP6cC/rBwGpVzGFzTx4klktDQvLCsxj0XErihRFs2
      wdKVUJqBRAp/6Sp48m/h4OsgBN2VQWzDpBrMpzQXQpA2nTYcPyokVCFaC3J2L4eKr3Lcm6JP
      Zllr9OFgEk4MY6Y6MI8fwt77bCSKbdv4t9xFsP2etpLaq7XWPta5HOKh9yC0bmOoa77vuLM1
      wa30JHPdofhwHH/2erYoKeQ1rbzvFIuVxmNrdW0sy8J13SaEd667sxgAuHjSzXVXv3vw6ebg
      z7opcokU+WqJYq3Cf/NHebS3D8uI2nK8KyBwJfdPDCBTKeT4BRCSYPladLGIeONwc0dYOVlm
      8+qV7F6AeGtAOtzryajYJQYj5paAhouVs3zj+F8zWYsSYAJYb/TzqL2FrBCIehXr9d2IeiM5
      Va9hHnoFf83NaKdvUSaAqFZR3/km+uw55H33w85bo4KhUgksE+0mIqX4QIVRxky2Q1BbD8Fx
      Z1/vQxRCXJZA9t1mCwUJYvXHubHsxXKBWneZqChGcXb6IgA7V2zgIzseiCZApcTf7XmaszMj
      hKHCauiCWb5mw49fR07ux+rrbS7exug5apvvRjsuohYNzES2k1+950NMP/dfOD5+unnfLmHx
      mcQy1uZL1K3zlNZvxupZhpHqwFc+z53/YXPwQ5QvOBaOMuR1sm2kB7s7AL99VxGBF6nBXIfF
      C7golVEvPEf4zSchCNAXL2CuXQuv7kc99S1ENof49C9h+kGEjVBSEsoQy7RmFcEbD7DJgb/I
      9Ck/DRYxQ8/yE8UlijfqnCOEaMshxJNvSaabzlSGT9/1KG4jzNqb6eDTdz3Kt/bv5vaOB/jJ
      8ItcmB6jd7zO8akJOhO92C1NFNUyZq1IcPf98PR3wbLhofdz04rN/G7uc3z/J1/FGz5Lj+dx
      n9XBSiOBBNxiEfrWEqYyESQlKDNSbq8dgKga7fX9e8l9+Tk2/Nm/wly2BnHstUYNsyAcXIVO
      ZduwOlfbN7ZtUzt2nOof/HsYG8UQ4Wz4v1RCPfUtGBlGjwzDs0/PaoTFlUVKKSzLakPUtVbl
      /P3gbzdNowJJaBCNwIEQDTz8jemrVhc0DCN2hoc33EPFn8GZc7ZK2i6PbbmP/acP8+LJ1/BD
      n+PA7iE46Jf4VZUh1VL0r30feeJ1sASIAH14H8eWZPmLfV9lavI8v9+7jb6ZAoQNV0MIpO3i
      HHuNYMkg/tKVGMLAlAsn+jJr19D36xsRvZ3Ue+5CJ1IY48OoRIpAOuhXX6G26RYS3T3X1H9S
      SoJ9+1BnooScSLuYmzdhPPxeRFcXIpuLBr8QiM5OjM9+9rNfaEUPxlt3jBpsPRv8/eo/3+Yj
      LwWO3Z7oupF9ppTC8zwGcn04lk3CaZ94UkhmahWePPJt/HDWvVACzhs+ncJhrXJACFTPAMHS
      1Yi9LyHCqCZgwivzf03v4dj0SULbZ7ccZ8IKSIaCDizMXC/CTmCUi5hjF5iRFcZTinx9konK
      eFtbtdbIVJqNdz1Cwk6jTRvdP0S4bDXquR/DM9+H1/agJsfhplswF1CAuRLzikWCPfsgDJHb
      tmP/xm/A0Aq0ZSFWrQKlkZkU0jYuPQHiKIdG//3Av4y1YleklDi23YSNx/USMZpyMWwuM3Y8
      AQwpWdE1RKh9akEcthR0J/vYff5VTk2dnn8tAaab4rbsSoxEGrVkkHDVJuTJo4hiHoTghV6X
      76thunI2yYRJaChOyyqvWCWElWSjGx1YNZr9PVV+mD3N6dpxPFlD60i3OG6z5wVMlicZKV3k
      5r5bcE03auX0FPI7X0PUa1FirjiD3nYbVq7jmtygoKMDuW4d5uabsR97DLLZWQ8m14ER1JC7
      n0ecPdkeBjWNSHK+9WJN90joG7qt/zSZ4zhYltWkh1nM80C9Xm/CepvXFHC2dpw3ygfQWjHg
      LKffXkbSyuCaKQJ16eq4AI0EDKUxRi8isqfwPvJp5J4XEOdPM5IokLIMbEvM+tICqobiZWOa
      9+uAhDAZSwTsWlImaHhnhpR0d3Tg+T6T09NtFWhnC2c4nT/F5t5bog8nkuhsDlGO6NF1rhOR
      SHKtJi0TvXEDhrEJWcxjPv0NqFcJt95JOLACTh6LQq8wq+oQh/Mcq33bmc0EK4IwaMR439m1
      AW+nmabZpPCQUmLb9qIWELVG5OphjWIww9nqcV6a/gGT3ihT/jiHqnspiRIJI41AsK57DcYC
      JMIC2KCT2IGKJAK0wjp2ACPwoFLGu3CKzrERHGvhhW9S1Jk0o8k1mgiagx9md8Z0Mkk4R/4q
      VEGbFoBKpdE/80n01lvR225Df/SThG7immWzhIhceBEGWN/6rxgHd2EcO4D15F9iTI/DyrUQ
      h23jL2ndUGu5xGrRFhoVusmg9k7eEZoDT3BJnd/FNs/zcF23uXPGq398cL3eNsQH7oMze3kt
      /wq+8nAde14Z7PHyIVYlNqC15tblO9lzcS8HR15v+8y63BAPBYNI1bLgaYUYPs2R6il23eYy
      lkyQ9ip4CyTxhGWwd4VET2jqIpy30+kGGYBtW6hQkfUNHC0p25LeZF/btdTq9Yih1SBAGya6
      UZcSR9Wu1KJIkEW9ZiLyE4jp2XOIqFcRI+dQ22+LOJTOnsQUUmAKC6fBAqGCy6f44x8YNugH
      bxRv5vVaTELV6i/PFdK4UROkVqs1w5OxEHhrkce1WlyjcXLmKC9M/LD5uqGYR8sy+1s0I+Xz
      uMmQjrRD1fOxpM3ty+7gwxsep+u1PTAxG7LUwGE5wVfX+9RE5MYlTQe/GNC6GAsEg1391DIO
      fyeHKfklMirZjB5qrfGCqNa4b0kvaFhTtHhsNEvJcMlavfN/3wIQ8avdAbTWqDCKZsp0Dp3O
      IfJRPkJbNrqnH2VasPNOxK13YcZykjH9SajCKx4IV/o5pRVa6bdcBjVekbS+tI5A645nLQI8
      I94VYzcozgkshsU7yfHi4bbX64E3bwKsS20GYKI6zjeO/Q35+hTplEkqaTawSYJMMoe3aSdy
      94+R1ahabCaXYRfnqImweU/XsVFKU6l6oCPZ1G0DOxjo7aSsZqgEFTSaUrWCYztopQiVou77
      zSAKAk5kfA7U69w/aeGfPkrt5tvQc7euRbA4UahMi+DRT2C89H1EvUa47W7CnlnFT3H+TIMW
      xTBQjdUykUjgNaQ3L2Wt0OkrMRHpKCK4PF/LYpsQEtCIK9ARuNaJWTl6Bn8yT+7urUCUihdC
      kE6nm7CF1kTiYtjcCRWEIaV6hYHkUpJmmrXJm1nmRvDow5MHyNengFl6FoBj04eZrI7Tlxug
      8uCHqBx5mQBF0TEoFo+1XV8IQTLhsKxjkFv6djASnMGyAnyjTkuNPaFSzJSKbe2Ld794EhxL
      17lvMoUxM4XQtAVdFtPihS/oGSB84h8A7cR9slyEL/0nzFCFKC/6FZZlY5oWvh8Ai1cDIMSl
      mdNulEUuz5u7G9c9KIUAOQsZh9kB2rqzXu8uEH/fNE3WZDZypnKi7X0blwe6HidtZhvkUICA
      SnAJMisV4IdR9Z8yTaqpJFqFmDokZ6QZC6fbPi+EIJVIMsoplBlQ11APqnRZvfQllnKhfJYg
      nB8giReBePe3VYO3NZ2LfHI3ccld4FqzwfEi1LxO/JdyGep1RFcX1GqIQh7jc5/73BfaIQ8S
      35+P/Jt7E60j+vB4RX+nHYYX7DxNG3JRiEhlJv7T+t34/Te7R2ppL5lVy9tyAUATBdoKirue
      PmodSJ12NyiY8iYQCLJWjgf7PkD3An51Pazz+sRr8xJ2XW43dw0+gG1EdJfKrxJ6EZ1kUjqc
      D8bwWmgU02aae6zV7BwWrJ92CKRmxgkJCHhoyeMUvBmmapPz7iOFjMLnUmAgebDUS2+QQOQn
      sE4fQdaqqO4+1EyJ6rd/iJHLIrLpCJFg2wvKIr1ZPy3IYjIzQ+Vf/VvqX/kGxvJlGKtWQrk0
      nxalVpuljhBC4LoR61q12k450nYYlsY7CuCmtSaID+ktK3z11HnyL73GwM8/elk4dHwWMo3L
      E7OGWpFKphYc3DFUuTWLfj3WmnBLJVLcu/Q9bO26lbJXIqNdjCCM3NgWTkypQm6uJ/g5cwsH
      /PMcJDoMJqTL1tQGqJYRdrRjJLuH0ErB2HnWFupk0tt5NVdhOpihw+nkVrmCjcfOIxqF9EvL
      Fj8YKjLSaZAyMzw6+BH+uvYXjFQvNO+fc7L0p3sxpUktrLPSXc+aRDcMP4NsnL2so6+iU1lm
      vruL4l99HfeufXT/m/8djca8BlKG2I2HdrFHPZ0nPH4CXa0SHjuOuXM7fPBnowmgG755tGpG
      gyZoYD3q9RqpVKT6cmk8+7Xr3N4IU1pBI4vdanZ3B9ntG68Qjv3mn4nL+Frdn1bMVDObvgh9
      0zrJYtBXVnTgDI9i7fsuopRH9Qzg3foQYSqL1Br3yB7k5Ch30s2tdPK8Oc6phGJ1aoh+Zwm1
      6WFyXohIZFDpHB0+iBdeIjg3wurOHKsefID69g8jTYf0gd1N7QEAieCmaZfE4Bps4QCaNbn1
      jFQvAhrXdFmWHWhqLKRkksCoR3KsLYGHuCjG2XozlWdexr1jRyMyd238qfEuaRgG2UYGOAgC
      KssGcf+HjxNeHMZ++IHoHoaBGbkwopkHkKJddS/OZtq2syD0VwhBqBTyGgtMboTpSNaxbfUH
      MHJpUrn0wl9qsVZX5rKfE5KZmRksy2p2evzQWuEkN8r8mSnsl59CTo1F9yzmQUjq934AozCF
      MTna/KyJ5F69lKFcH6FpkKjW6JuYwgwvoIGwdwBx9ACl3UcIy3WEMY5twfHegKGh+0gv0B89
      ziCZ9O2gISRgQ+4mJmvjnCmeJOuk5gmMzPhTlDM9uNKARtBFVWr4Z4dx7nmYgb/+D2iiQIJp
      Xlv5qNaaYrHYVCuKiZOrto39xOMU/+7blH70MumPPQamGVEjtiZp1AKhUM+rY9sOlmVTr88n
      GBLM5gUWs+D7Ws2Qi5N0uhKLXZN4oYhzAFJKMpnMDbuv1hoKeUQ6bdIsAAAgAElEQVSh/bAq
      J4YRvtcsem9rq9bRH6XoyhcwG5z+aE1p+AQzMxcJjZAsIJWGao3TM4c4MV7gA8seIDd8DtEI
      +2gh0CtuQgrJtD/O0Zn91MIqnW6KofSDCCkYrp9qXj8xU6X/1DTGkj781Zuwzh1HlcqU9h0j
      nNmH2HcA8zf/Caq3N3J/rlIXILaYFrOV4yqudgzOnGf6j74EAtxbb8Fcs2K+SqTWs+WQ8eta
      6+bZ4FKNil0mQxpv6jvfaHsr722aZlPIodXeCpdQJ9PoRBpRnJ0EOteFNi2GnRp9JiQaXqsG
      /GwH2k0g/TpWw531dMj3q6f5TvUE+XSNxEMuO88FfGQiQXFtB5NpQb1+gfGZA2TQEAYc6Kjx
      aq6GX/wuq1hLPSw0Fd4DrZj2RymEZUrhDFkzTbbgs+Or+8mNFkG+jv+eDxC892OoI0cIf7gb
      whA9PIweHUH19DTYIa6eSlIpRblSadv541JVAHOwn/RjDzb/LmvV+YfgWHYzFptrtdaa4Ll4
      IdMwm1ihUCks07xija13s13KT73Rg18IgUqm8Xfch7X3OUS1hMp142+/l0k1xeHqYS4uhfUT
      kPShlsngbridHkOiAw8KHnp6nF31Yf66cphag8DWdwTPrLEINmbIrnepN0ZIMHYKWXPZnSvy
      VG46it9XJ7lYPUeP08VgcmlL6zSVsEgpKFEP62yY7iQz2QiiKAVHX0dvvx12v4AUCmVI5PoN
      iOVD0UEerukAXPPqRGqSAhmGBC/uQlcqWA/ci0644Dp0/dP/JWqh1ojhcwuT4woRlS3KBsy1
      NZMqDTkPEGcYBoJIVM4PA5QK8QIf2+SnfhK8nS5fqDThqk2E/UOIWgWdyuIXqlw8vw+d0uQT
      gt3LNEKDafrcZTsIpRBWgmDdLYRH9vDChV3NwR+bEvCKWWaLHWILCycQ9JUkdR3wSq44L3k1
      WZ9miduLJaPst9YaX0WuiK996h05RDoL+cZO1dcPB/fD669hujJiofj0pwmyWbhGV1op1azV
      Vlqjjxyj8odfRPseScvEfM+DzbbFptPZN5dIEhFQps0MaaDRsxnOlhi6ZZgoaRCq4JLwg58m
      a/U5Wwvkb7QppQi0z8XKOfLeNBk7y6DVwdS//iK1LRa8fyPQ8NUFGKL9UQduknDLHRSmn4UF
      +MHCMBKatoXN3Sd8UkdOUrYF9eUuC0XIQhVgyQg7VAiLVNVsOL2mKhgrVqCTCdTqjej73wf7
      9wAiIuXKZdHZbFOr2TCubgJorfF8Dx2GKOUhpYFMJRDZDFSriFy2+VmhQsTpE4hSEb1yzbWJ
      5MUTQywQTox3D0MuHv3fO9l832/TI8jlcosOEAyCgJpXR0oZuQYIpstT/ODCtzhWOEygAgxh
      sDy9krsf3kb/8ChnMQmIfF+BYCi9bn7IVpoMda3i+PTpefdcnhvi0YGP0l+z6Hz1P0DgYweS
      VWIFItNHoEMu1C6SD/Jkq4r7Xj3D+WUZXlkGlZbBL5RmcM8hjLF6RL61fDn1p59GPfcsIjSx
      ttwEDz6CymShgeExrxKTpZSiWMwzMXkGP6hF0I2OHLl//tsIP0CuHIoS41ojX3oGvv2VKEiw
      cu31yaS+U+L+7yRb7LBnHBN3HacJsfZ8j/3juzmcP9DMdQQ64FTxOB3b7uChx36JzrDIxfJp
      Qh2wJDFIt9OHOT6MMT2OSmbw+5cjDJOH1zzE8ckTnM2fbd6zw83x4Y0fZnV6PcbksUh1Eri4
      eQ3pvlXNTHraTHGmeIr73xild6JM92SZMeVydKmFlgKJwZbzHitGoi1GaIXY9TzhgdNQLKIN
      g3DTDuRNm4mhpkorjCsMqce7bq1WZWr6PH5Qa/ZZuZbHWbKcVKJz9pl4ddi/C9GIZIozJ69f
      KPvttCuFLLxVFucDFts832urLQjCgDOlUwsqwZwvn6YeVknJDOuztzQ/YZ86gnNkP0Kr6JA5
      cpags4dV5SL/aOXjPFM5xZnCOUoqz0BnL3lGKAbLSXZ2UbjvAULLZLhfNgc/gCEMbs3tYJX3
      HJBHanjvwRpbx03yS3Kktj/GklN7kfr52Qb29CC6i+hiMWJs6+luJguj5ymu2HX2Ah90tAt7
      /nzxC69WJFOogGWjOnvAMCHb2XxfW9a7cwJEtco0TvzRAf3tLs6RUt4Q+kMhBEk3Iout1euM
      To8zVZqm5rc77iLU2LUQw9ToU6cIvv9jRCqF8fgTyHQK++ThZgwfrTHOHsM4GRXIrDQterfd
      yddyASeLRUpMsXviBUZnTvGAtRUxMBCd+awSzJl0RiJD8OCHsZ7+OqJcwLRtBmo2vbUegpES
      Xv866qUXSPYkoG8p4aMfx7qvgtq3HzG0HLHxpnaU5lWgZg0hyRdmMKTAMp22SSB8n+wzX8c6
      cxqEILzzYYIHPoB+7KMREqBYgGzHu3QCoAnCEFMaKK0IdYhhmG8h0Hq+CSGa6jrxv+1rZDWY
      a0opJvNT/ME3/4RnD++iVCuzel03G2/uRUoBWrP6lWluemYcsc3C8L+Beu3VaLV2ExhPPI5o
      DWmrsI2ASgQ+w6de5FTfaNt9B+hs0pcDZAObabuFFU8Y9CaWEmSyqI/+Mtbxg8iZKVQ+j9r9
      MvLFZ5k8WGDm5CTLfv+zJB68B20YkO1ELB0E5k4n2rLpl+uPWLcuyluZdOQGmJg60wzdp8cn
      SZ45HY0JrTFeeQ617S4QGqOvF4aGUOMT784JEIdc23IRV/H9uXj1xbBYZnbu9a/XlFLkC3l+
      +y9/n2eP7Gq+fuToMLYrGFrRhWuZrHq1QNeFKoa6AKuX0GgIXDyP1oKwsxdzrAFUW6B507I2
      z6USbX8XdPg2pjCpJSPeqEHRS3Yij7ZrhB3d1Lfdi/A9jL/6jxHeHujsFcg1d+DctiMa/K1W
      qRIePYZc0gtL+6FRSHS53byVGtLzvSjpiiYhHZb2rKUaVJHCJFWZcy+t0GPncX74NUS1ggak
      NN+lE6ARaYrBe1pfXe1CnMeQUmKIxYnYtG7bi+kGBUHAy2/s44U3Xml73fdD9u87T3h0mv+x
      Yx192+/Cci7g3nUb1k1rCL/0X+DCeeTRg6gnv0rtgx/GMUyM/ATKTaLrNeTYhUhb0jDp7FuD
      VLtQLXUgJ8OLrDaWYjZCqAJBX2o5ya5lGFOj2C//EDkzBaaFv3E79Zt2oKWERKp5jeSSNO6n
      PoIP1F85gHPLRrCjQV77+rep/NXfYgwtJ/N7/xsincQyr0xNs16vo0KFDAPsE4cwR86inQTW
      hq0EnR14g0P4g8tIXDgPQjCzdh3q4jHcBqpZABjy3TkBYpvtqKsbcIZsMGEvYsBmsX3/+FAY
      BAEHzh4lXKBCT/iaJ16tsH7mNaybPDK//Vno7gIpMVcNoScuIsIAjhxCPfFRKlvvjlwhKRFe
      Hev0UURxmnBgJX0Dy9g8GnBgas/sTmC7JPtWEeYn8cI6pp3EyfZCGGAdegU5NRb1fBhgHdlH
      2D+E37UEdf/7oVpBFKbRm7ahV65j/J/+ayrP76b7f/4HZH/hZwBQ5Qr4AbpSQQdxCPTyMJpm
      vbHnIQD75OvYh/c2D/duuUD1rvdRVDUK9z+AMzGBNk3qXV0kR0fQUiJi9vNM7t09ASAGvl1d
      5OVqmQauxKrVKkopTNO8ZpG3VvN9j4uF85yvnCbMzNCRS5CfaY90aAF5M+J15cJZ1Bf/H+Sj
      j8OttyM2b4PDB8H3YdMWtO1EgYNGZl76PuGFc4jJMZSVRPQP8fDAo6zKrGW0OkxW22wYDTAu
      XGQ06xJi4Id1vLETLOlcjqiUmv611gq8GqIera5h31L0J3+d4PQ5lBbYlo3Z14t0XYzu2bBk
      4mc/hLG0H2PFcnRHBnGF/VaNcWkqxBydBegJQJdmmJo8yvFEBd8o09PXjSsiAq7awCD1Ox/G
      Prwf3CTBA48jxsbG9DuV2eHdZqlUqlkMfz1RKd/3OTS+n+cnvoeno+q8Ws3nqe8d5OJwHpNG
      cRswIBP8v9Y6lpw4EWVVly1D/tY/g0QSce4MeHX0ilVox21eX4cB9o+/jXzpRxExreMS/Pyv
      Ew5FSi9SgP2d/4Y8fZThW2+nPDDY1r5kIkf/hWGsQ7vRlTK6XgMhCG57CO/WCGuvCyUu/PLn
      CPMFBv7wX+CsX4WaKSE6sxElSYtprfEDHzeRIJNKX3ZxCsOQialJTGkg0ST2PIt5/kRD31Jz
      YEnIi8sDAhlNMheHzdxMVmRIp3voyC1FeHWQBsow3v07wFtpl8s7JJNJEIK655Fw3XnvX809
      yrUSP5l6pjn4AVzX4p671uJ9+xg/Z2SpGIIxx2B9Rx+DZUl4utEm0wQhogPnqjXt7Z6cRJ04
      juzpQYwNzxa4eHXE1Dg0JoDITyLPRYPKT86vnwj8Gv6azYjiDHL/i3HDMXY/jdy4nTDVWM2T
      CXSthnQdlGEgujsW/M2BCkCAdQUQaD/woXEQFoaBv/4WZGkGWZimZgleXFZrI+iqUecMZ7hX
      3k422RPhhFpECv9+Alyhaa3xwwDjElxIpmlimuaiFL8XvRnqan5iZyMWT7i9uEhkJg2WiVAa
      Zdapr1tFmMghHnkUnUwh6nWCF19GF4uY99+LcF38L/4x6ugRRHc38r7bEaYVQQJynehlq5CV
      chQ5chLRRAoDEpMTeLl2sTt7Zho9MorvurSyngqlIjcolYF0koE//F10tYo0RFSQnp4/mWLy
      LCFE0328XN/EgLcYhuNnu1B3PoIxM8WYLBB4P5r3vVpxDPer/wmG1iM++nPo5Owh/S2dAK2s
      CaGKUt6Xy/pprQnCACFlRKGBnkdutagWhMzsPkh2+00Idz7Ds2kYlzw4x/UAi1H6mLTSmMIm
      0O0lqL1FjasFWEY0+Bv3kpaJs2kZ9cc+SWhFQ9J/6vvU/+xLoBTq+EmcT3wUdepkJBYxMUHQ
      PQg/txMxPYEeWgvHjyCf/R6g0fc9gn/f45i7fkTXkcPUtaS+bBAsE7fukS2WQEeoy2DJAEZD
      olUNrUN19zX7SGaS1L/+DbynfoDo6SL5uX+CGFrW9puUVggdhZHf7NmGrWxxjbOM1prQTRK6
      SVxdQV6UbZEsgOR0BXN0DDE6CbdsR2/ZHvV14F/l6fE6TbXwi3IFHEFx5EMrhUbfcGi1DkJK
      R06jvIVVSi4F013MM5QQgoybZUtuZ/vrCPrX3It2k9EqPXenKeTRr+6LaM2FQI+NgVII08Ao
      zyBNA2P7juhssGo1cuNN+CvX4+24G+0mEM88hZgaR0xNIJ75Hqp3kPr7fp7ayUmyf/a3dH3x
      S/SeG6YrX0DqZmPxt95J8PBH8B/5GN77P95GcaILRfwXXkKXSqjTZwn27mtrcswsYhhGM9sd
      61QsRK9S9yKXUCufqfw5JqfPUvdKzYUgIVNszGxt+56pBJtfncEINTh2G+muOHvmrd0BpJAI
      o1FDfAUrpSElYUOec27i60aYcG2GfuWjjQdz5a5MGIaXPR9crVmWxc7eu+mwujhVfoNQK1al
      1jOUWE3w8RXIvS+gQw8jP4YIohVR+jWcn3yPmgLuuAvz4YcQF86RXd2DmcvA3qex7tlB/Ykn
      oLMLnckgAT0yivfNJ3GmZxXcUWG06Fg2KlSIMMQcm8AslBE97X68TuXwe5eBZUEQUPnqtzGX
      L8XeuRWSCYxVK1ETE4hEMqIiaf1u4z/SkM0dtJVDaS6ZmOd7hEGd0YkT8bepVPP0dA6RCkCO
      XeDWznX0dC3hfO00prRYl9hI780HMca+hTAN9Ot70EMrUbYDYYjx+c9//gtvVVFHHBkxGsX3
      TX6hOQr1cz8v5zC7zWKBFqfssHW1yWSzOK7bJoT3Zmaa5nUpG8612B92SDJdynN66gQnp48x
      VZ+gs3cN1qbbUGs3YxSnI7bjxnekJVGGhVp3MyKXJeP4WEQkUUJrjOIMeuUaws6e6DthiPcX
      f4n3vR+BCjGSDmSz6LseRG/cgnZdZDoNhRnkhpuQDzwM9XJTHUZJh8o3nqX+3R9grV2Nd/gY
      +d/7v6n/ZC/pj30Q7diYN9+EsXIl9qPvxdi4AfIzYBpgRDAWrTW27eA4TrOeojUUGk8IpRX1
      Wo18YZggaK9Ll6Pn6fzOVzAP78M8+iodfRtZPngXy9yVJGUS4+ArGMNnohzI6AXoH0T1DkAm
      8/Yeglt/nApVs7JsbrnlQtbk3FngvRhP4nmXJ/hqXksptFaYhtnG6rAQA0bc7rn3W0yLgG81
      njv3I547/4NmddWZwknOF8/wsXWfJmWm0C0Z10YDkT3dKKUwVICsFNvf1irK3PbOli/qcgW0
      pj5dh83bsX/hU+jOniijC4i77sHcvgOGhyHQsGEnVItgmKgzI9SffQk8D2/XXuwH7sVatxpr
      49roEA3Q1Yn54H0IoP61b1H9ypPYt+8k8eu/hJIAs5ipudn0uawalmktmPXPHH0dUY0Y8IRX
      x9z7POGqjY0agOi1ls5tagNo23n7o0CtDBRhGF6RqyOEwFqASTg2pVSTEqNVwzd+71K8p9Iw
      ojY0OGUKhULTHzUMg1QqIsFqFRWvVqs3hCF7ojTGnpGXmoMfoiDAmcJJjk2/zpbuHQQrN2Ke
      ONR8+NDA3KswIoKaKSKdFv0vIVAtcGBME/sjT0TJMtPEePxDKNOddzLTz/0Y9eTXown2kY/B
      w49EWJoVFs59d6EmJrFu3YZY0k3vn/5BmxszexGNv/8Aamwc/7WDOJUKpJMYhrxs/W/8eqy6
      k052Uau1T2zpJNr+rYRABXWE5aKlRG2/EzF8Dooz6KVDqLWbZrvgUg/gRlscCWr9N4sEadZa
      U6k0spIqJJ3OkM3Oqg/GD0cpRRAEzUkRKkW5XG4SKsXXChriz/6MP4vwFIKEmyDXoJVfTNNa
      U6hHrMvz3kMzUR2LuHi6+gj7hzBPHYneFALz5OtYqzZS/9HzlJ55icy92zAyKZASf9VNBEui
      1V9oTf7P/w6jp5PMb30WgpD633wV74WXcT70GPbjj6Imp9GVCux5BRoYGrX3FeRD742QppkM
      yf/1H0KowHWafbqQKcD92BPgONh37IR0dBh13cQV8TDFC1jCzdGZG6Ry8QTuiWNY6U7MbfdH
      54yZKZRtk18+iH/2IFa6k+SSVYQr1qE+9RlEqYDu6kUl3qYwaKvFeP54m4tDW4t50I19TKWj
      gd4q9BfDIeLMbdv3YqgtGi0aWy+ahOOSSCTaywpv0ME8ZadxDRdfzXfjOtyuxt9EI6vZMnh8
      L9L30opgusD0t5/HuedOjE9+irCju9nucHKa6S99BbOvl/TD90AY4u/ag7pwEX/XHswtm5n5
      3X+DmimQvmUNlm0DArlxU1tRDJYFb1LBGJ3ZNHrTBhKbb2oGGRKu29SleDOLJ4DWmoy26Pjh
      jxGnj4MQqNsm8X7uM3jnjlCuF9CWBSrAK4wjLQe3axkq1wW5rnnXfdsmQIzbXszBH6/ucYdG
      0UJNuVSiIgSGaUYHcBkNfCkE0jCQLZMivo5hGKRT6UZb1Tx8z42MSAkh6E72sql7K7tGXkC3
      xLX7kgOsy21s8u7rZDomgo7a7ibQFy5gjZzEGMgR9i5DP/pBglxXW+jU6Omi///8rWh3SDgI
      ZeF89An8F17C/sD7UaUyanwCXa+jN25GfuSDICSs33BFGEKlVCOS1qCGlALRlJCN+t9tCIZc
      zQQAEBOjMHy+8YM14uRRtO9RTybQcxKIQaUAjXEvfB+dzyOyWXRDuPBtmwAxs0RrRdf1WExo
      q5RCBxopDVqzVlprAt8n7sZqlSZ9ohDRw7EamUjDiCZKLG4xU5ghkUiQvA7htqsxIQRoeGDZ
      I6TtDIcnX8NXPkvTy7lr4AGSRgYpBNbhPcgTh6KwpZDgJPDXbEV/6+uI/BSGAJk20YNL55Hd
      a8C9fTZmrqXEfO+DmO95gECFGKEi/ZlfQc3M4Dz2CDqTbmufaUYBgwWZmKGBTJsFHqZT6XkL
      yLUCBnW2E3IdMDYSvdDbj3ZcDDtBODmFu/dVUIr6jq0YayMpJlGvU/+T/0z4yh7k2rU4n/mH
      0QH9qu++SHYpypVrtdjdia8NVxAibSReYvNbokbRjiCRhpyVIjVMpIzaHT+8GxFCVkqhKxUy
      B17hgZrHbRt+Bj/XgWskkEg0YNSrGEf2tVAgKrQKCcs1KMw08e5GaRK9+xnYeS/KbS/ZXHjg
      NnZjw8T5wHub8ITWTHfrn7j/mvUVRjunZ2s/XStAcG47VUcX4sOfQux5EVwXfddDaNPC7ejH
      3PtfMQ9FZyIZaoyd74m+PzpG8PIuqFQIDxxEvXEMeeftb38U6HqtGUqdk0torRyC+Ux2c19b
      +Lph01WL6E9mABrbdrSDZdLpRZFWar1vrVLGfPL/Q5w+CkD29X14n/ifCDON0CRRtIc5zH1o
      RX3XPoxCDTNjY3VlwABe+gHy9FGCj/8act9LyAunUCs3EGy7Ey2NphsaD3TDMJr/b+3ThVgB
      0+lZN3HuAL+eXT0iyDVn7xuG0WQ3LbQQhKvXI1atxTt+lol/95d0/+LP4G5chWXORoQsw0Ub
      VuQH5LLIgX7UqdOIzk5kf1Q1966eAPEgV43D9FxrDXm2PpzrXbnDMGyufGGosBaxF7XWqIkx
      jAunZjfHwjTy3AnCTTuan1NOknD1JsRrLyGUQiMIuwfR5SLViRquNLD7W8Kzw+cwvv1ljBNR
      Ibw8dTSCMmy/u5nIayX1WqiPLtdnVxMKjp/b5VygarVKMpmMlEt9H/13X0YfO4K49U7Ee96H
      lhItJJV9r1P47rO4G1fjbFyNeO9jUZw/VPDI47NlmLkc7j/+TcLDh5GrVsKKFcAlJkDz1K5p
      HhDfaRaHJ1kgG9yKKWl9Ld4NYjbnxfhd8oq0Bq7chBCQSoPtQEOpR0uJzs6BIAiBf8vd6FQO
      efE0/qEjeD94EdO1IGujhWw7HGNaEeS5te2nj+Lc+VBbIurtpHoMgqA5CS3LolKpkEql8CYn
      0S89D4UZ9MgIcut29JLIt8996D3YKwdJbIkkYfWqtYhf/8dABHsWQJgvImwTMbgUY3Bp1Cee
      D5a5MBhOEw+gcEHumXeCRRCJ+YOvuStcRuSv9bPXY7KxurSeI67XhBBY2Q6CRz4GuU5EKoXe
      chtq6Yp5n1VxLe6mO6kdOI4eH8coTOLmLGxHE3YOoDt7UN19BI99Ar16Y/v3l62+JirH6+23
      +GA8977xoTpOZDqOE2XzpZgVNTGM9rCv65C4fSskWgp+LKuJ+Q9nSpz8tf+D81/4o+b96s/v
      YuRjv0Lxj//8EuS4DdaFVg2wd6JJIdFidmWf6/dfyuLd4Hp3ANnAKS0mC0RcHSUMidHZCfUa
      sjCBPvk63tot85YjrTUikUBkc+gYz4+IoAqbdqC23RoJT9sOauUGAETjDCBvf6C5+rcuGm/X
      LiBEBIvwPK8pbFEqlTA7Oggefh/qjSOI2+5Ed/dc8hrx828eui0TZ+UgzoqB5jMPzpxHF4p4
      R4+/u0si43qB+EcvmIK/hMWr0NyHnU5nmuokkSulCMOgsSNGlPFKRQXYlmWRy2SvObqxkCml
      KE2M4X7/b5Azk7OvJ9JUH/15tDSjOtxGjW/z95w5g3p1HzKXQZ54HXHmRITHuekW1BOfQDVK
      IuO2JhKJebxFcyVdL/WbLgVeXCxTSlEqlUgmk5TLZZLJJPV6Hd/3CcLgkmHzMAwjeLVsP7zP
      xRQJz6f+k71YN69/dx6CZ7O7YVPf+EqtNYTXakprhIiYie3G9qmUQgrVzA/EHRnvNFziWtdr
      UoUwl/kt8DAP70e+sR+UIrzlTvxNt0Z+vu+jz52N2rPuJsSFk4haBF3Qe19GbLoFuXkHlmU1
      xfsWctvixSCeCJfTPlhIADCeGK0Tyfd9PM9rJhdjQZFL7TJaa8rlMkEQMH3yLNVzIzj37Gi5
      /qV3JyElJvMnx7zaAtvCvu8O4F0SBWq6OMwOvhjkdjWDf64cVGxNniAhKRQKJJNJEm6izSWY
      O3Fu1K4phECmMoT9KxAnX494ewCV7cZ45ccRzQkgXngK1T9E2N2Hev5Zwr/4M1AK/dp+7K5W
      cJhGhAq3seLHg/9SbmD8W+MgQhwwaO2zuP+llHi+TxgGmIbZlIeaa60ULxGbm45qqC9hhmFE
      EydfpHLiHNyzo3lm0FpFrIALqBBdSY3JXHvHToBWl0ZpTaMmct57V2pzIxztCSGAWfhtpYHw
      tC37hm71C5kQAieZorrjPnBc5OQoqqOHoGcA6+Th2Q+GAfr8ObSdQg9fjPD8toEcPo0IuhCu
      iw4C5PKVsOFmbNtuQ7ZeLuITu4dxCaLnewRhSDadQUrJTKFAEAZYjRroZvTmEufFuX0Y+/hx
      f89dmGKOVbFuiOS6ITzPI51OI4SgXCkv6jN5x04AoFE62bDGWJ/rz821S4HU4k5b6LutonpC
      CNKpFI7tvG3hXyklyZ4lVG97kGqlQigiIlhzyVIYuwhAvRgy8W//M6Kjk+zHP4Ac6EcWJxFo
      wqk8iW2bkakEpDPUxf/f3rlH+VVVd/xz7ut37+81k8xMSEISIBGCL8IjCMq7FhEMbQGX0mAX
      oLUuAZG1SrpqFat92q5VKrgUW6VVsa1Sl3XRggg+UBDCWyA8EhLyGJJJJgkz83ve5zn94/zu
      nd9v5jeTmTFCoN1rzT/zu89z99lnn72/+7vHM7Xp9Q+UBEySBP+V/cSv7EMWy8ROjpF4BNO0
      UDLBlhIZx4hWT7jZiJSSSqWC53kdz9QurutiGEbmDtVqNQqFAqViiWqt2u2yc5JDdgIIIbAt
      7bPGSdyxXE83Aab6sJnf3uWYcbfGopDPHzRS27lKOhEtx6HWaCATSSIUxvlrsZ5/Arl5M7Xd
      O4l37oG9r5B4RXKXroXbvgZBoEkEPF3NpYSA1n4gtezTSWrR/cHtqNu/gTE0iHHYYoyLP4Rc
      sAjimNz6n2BseQ41r5/4zAtI3CKq0dAdWSYo8lRGJ/2e7ZT8DcUAABQiSURBVG7WxDFPYRgp
      bL1SqejKu4MYmTxkJ0AqooVNSf30ubg/0B3RCeOTybYdioXCAak5Xk1xbAfTtEgS3R1GDu3B
      f+pF4gcfhLEazrwC1m+/G2vlCqRtYbzvYsz192H19WIUNeZduXnNxjyDCa2Uouk3aTabWI8/
      hLGlVWew9UWMJx5CnX8J1gtPYj7yM62C+/egfJ/KzoTgiWcofPB3cd93rlbmMKJ5789RlQre
      mvOgVJh0v2azieu6xHE8aUOdbrJd181qO5RSNJuT6WJ+HXldTIBUcaVSxHE0oyRXt+tMFQFy
      HIdioTjn3rS/KRFCUCgUiOMIu9kkvuXLqF07QSmsnIHdU8R+/xpkoUAsE9z3vA9x4omYGx6F
      Zp0kXyR8+ynkiqUZvVcQhtTq2seeaMlphR6N4V2d9nfbFsIHtpNUmkR33EHhXatIegeINm6m
      +uV/QYUholjAvfC8Se+WWva0JiM1Ru0Tw7IsisUitVrt1xnKKeWQnwDQ5qIIgbBsULov8YE+
      6kSr0k35c7kchXzhkFP+VBzbJp8vEI+OoSoVoAVH9izMnIS9u3EWLsRxHN0QeslRRPMXoIIm
      ws3jHoBqMJU4ianVqigpEYaBOv4dqK0vws7tsGgJ8qR36ejPUcdiPLU+Y5WzXIueYxfQ3DVG
      eVkB+8kHkGdeiNFbxlzQj6zWMFvAs4kihNAkt63vlEZ6Uqufxv9N0ySXy82KqGCm8rpLhKW+
      fBCFk7lxJkh7oqubcjtOjlKpdMjinWD8fRu1GuH3v0fywP2I0f3YrqELTC68hPxFH8SyLOI4
      7oAlw8wRmUmS0Gg2dGd1hOYUkhJRr6KKpQxaIITA3PQMxnNPIvJ57KGXMpYIADVvAP/8y0hy
      HmrfK6gwxFx0mN6LTPOOac21YRiEYYhl6bBqoVCgXq9PwnbNVToSYqI7qcIhLam1cJ3cjCzb
      VHsFy7IolUpZQUy385IkoVavdaUmf7Uk3bgWy2UKH7iU3Kc/i33qOxCOA339iJVv6VjZ2vc5
      s5nUadGKZZqM/ffP2PnZm4kbAXJenwaVSUXl9v/B//lDNO55gOpjW/BlAVXq7XAtZf9CZDpZ
      +udjLF44rfKn7+i6LoHvEwR6v5MywDWbTQqFwkGDmygUURxnGLdDhhZlYklkWuEFYpKSpoPt
      2A7SlB1wiPbf26MM7REkwzC0tZkmYlRv1PGDAJkkhGFIuVR+1XoAdxMhBLbrYixZQnj5H5Hs
      HMQo92IvPjwzBHOhZ0wnehptSRKJv2kbjQ0vIqt1zN4SANHgLvb9w9cpHlakaGuC2mBsDPuq
      K3G2Po2oVZD9iwhOOINIgTkLrJVpmvjD+9lxy3c4/Jq1uL1l6hu3Mvi3/0z/B89n/nmnz3K0
      phaByFrNwkGYAO0Zxdkqx7iS65h/Gk/ujPSoFoni5Gun1tEwdPf6NL0/0Rp2PquOMXfLJKbH
      NJvNjqxmHMeMVcYol8sHtfhltpLyHdkDC5B9/dlqmMpcxt8PfIIwREoNBVEoFly9lr7LLsRa
      NJAday9bzMCffhzrlWHU3Xfpnr6eR7J0Bf6KYxFxSGLniIXIergZhpHlWNL7dXtWwzBIHJvi
      qpUI2yIIAsKRMfytLxMODWeu3XTvEcsEcwYd5ifq6Zz2AO0PkxakGFOwJk91bkpGlYW9WhMg
      RVemE0MIMeNES4qkhHHMf3qNdELZjpNlNLs9bxAGjI6OUi73aL+4kXLuCMqlEu6vQX1+qIlU
      uk7aDwMNkRjai5ISc+HAlOco3ye558eoXUNY55yFWHnM+G8tcGIWdKAFe04kwebtOMuXkhhi
      0sSd4uFIXhnFKhbAdaYF5ev7JhgzyHNMlDmtAJmCCqE3ojN4oXZ3p9uKYQiDOIkxDYuU/SvN
      AczmubSLY2KaFlE0scZXUJwm4pMkSbbhqlYr9PbOAwF+s4lpWdjOa2f9D7YkScJYrUrOdsh7
      HvXhfQxefQMqTljyrRsRady+3tBYfM/THTktE3PNBZB++rZrCiEwa03kyBjGEYtJf6386BcM
      3fBFBq66jN4Pv39qa94MiHftxjricE2d+MyzVO69j+TIo+hZexGiOA1+aI4F9rPeBGsCqRab
      W0uRrWkoTVKrkLTIpaD7Uq2tgomTc9pcmJn73Ol9lFJZ657Ur01dmUKhMG2Wtxn4WahNSkm1
      WiHn5Ogp91AulWbcwPn1IH4YgoIwiqjUakjbIn/aagqnr0a0ikvUth00Pv83NP/uH2Hvvuzc
      WCbELehxuxiGwfD1f82uD68jemxDZhTdo4+kcOrxeKuOzfQg/VZJkmT6NHLT19n90XXUf/Aj
      RBDi33EXjfWPs+ert+M/s3Ha95lr4dasVwCdkBq34lO5J+1ujOM42I5Ds9HMisy7iWkYFPMF
      6kIQ+D5KSqQxXnQilco2rmmxTurqxK0wmZSSUIZYyiZpLcdCCJxcjrw3fSPrvOsRBgG+72fv
      oJTC6UKe9XqXgudhGgZBGKAUhEox/7oPd0AX4uc3Er+wCSwTZ8cgRn9fh+Gb6epsH30kS77y
      eeIkoZ0MTSnV2uF1MSw5B+e0U5C1Br3zF5JbuVw3twsCcJyOlqvZPnQO5alz3gOkfv+UIcQW
      dMF1PWzbJo6jTLEmSoo8dByHUrGkmYCDIGs8ZximpjCRib6nYWQTSd9fkEyIBBktEiaBLlzp
      7e2d0V4ijmMq1QpSKXrLPVlk5Y0oaSbWD3wNf5gYGBjei3/bfyDyHrnLLkWVitl3bT92vD4C
      RKWOGq1gHbEE1Xap9v1Bxgze1iNCCKFdoKHdWMsOB8tCJAmq3kAUdPup5K67SNavx1i5EuuS
      S1AtSPW46zv7FXrOE6BD0Sb8lg7SdG4RtKC/uRylYkl3WBeahjC16kmSUK1VCdOO4G2I0Ikg
      q/T4dINVKpYwTIN6o4HneuRblIYzfbc0OfNGFqV0s+mxsRbdSxeXM834qtZ4p6Fpq21sRBQh
      lSIxjUmTo/1eaVUHY3VG7n2Q+WvORnjjTZYE4D/1AtaCPqwF82n+6nmcFcswesswNERwww1Q
      rYLj4Hzyk4jVq7u+l2y5wTP53jOaMhPBZ1NBjtuPTZXUtp1Jx6THmaaJ5+nCE8dxyDnjlUJC
      aPaxnp5eDZsVk4tSJj5LGtnJFwrk83ncnEu5WCI3C3Rn+3XeiDIxoxoEQatrems137ef8M57
      kJs2I6Ri7O77eeU/70ZFLXdy3yj1796JGtWwDDZvJrrpJpJbbsHaNaQNGAI1Mga1NtZqITpq
      qFU0ObQZ7dzD9o98iqG/+BKNx55h8GOfYd/N39T3dRyE1yr0sW3ENAU1s6kSnLZBxkTkZbdk
      VLsYhoGT0wjGuNW5xG6Rn04swRNCUC73YFsWSZJ0pPEn3sexHSzL0qvEhOdLjzEtXSubrihC
      jJftzSjs9n9AdNw/aG1gtdtSq+tCetPQ+ZTG175J89+/R7zxRZxTVjN04zeoP7aBeRechfBy
      jH37B+z/8m3YSxfjHXMk0be+hXz0UdTLL+uOK6tXEz39HKOf+3vC9Y+TO2kVIt9JX254OfJv
      PRph646W4/93SfaNUDzjZLxVbyYZGaN87mlYSxeB52EsWQKeh/2ecxGrVk0G7KXvmWaOhG4M
      Emzciuk4iNxkY3xAB7cbhn4qa5okCVES681r6zy/2cQ0LWzbzhRYCI1yNA2DkZGRDneqUCiQ
      y+U6riuEIOfkaJiNTpLUNjeoVCgilcS27Ez5U3mjWvPZimx1Uxfo76r3ZJ0haaNY1P53oYDh
      uSz5/LVIP8DoLSHiGG/RfMqnHU/hnSfoa6XfSgho5UiijZtJBnchh/eR7NmL1T+ZlZluG1bb
      4rDPXpN904V/cd24JRcCcdxx2KtWTW3da3UQAjPvkbQiVM1nN/PSH6yj571nsOQL108694AT
      YLYEpnEUdVhegCSJUcrAcXJEkS6Q9lxvErFqaqm7ZZfTVWIiKjD93Q98yi2GhvYl/v8tvxal
      FFEY4bTKGMMo0r0RlMJq67joXnoR9glvx1i8CFUsYBfHcfzxsy/gf/s72EmC3LYdc+EA1sUX
      Q6GAsG2M884jThLcs95FvGMnZv98rOWT+YxSSbWqXSWzVb1SQdXriIEBVFsgYirlVzsGqd/8
      T2AaFK79OGKxJs5yFi+g/FunUjrz5EnnCnWACTBbeEOW7GpTwPaqnjAMcHI5kjimXq9ngCfQ
      iloqlTr4ICcWsbiu2yoSMfUHbHOJug3M69n1yTaNarxyaqqinhmL0I3mHCen+yUIgTkR2lEo
      YJ64qvv5hqH/pNQNM8IQtWgR9uWXQ6OBNA2EAOOwAcrXX5W9R1cJI3Z//ibsZYuZ/9HfzyJG
      QggYHMT/4s2o/fuxzjkH+0NrqW7YTH7FMoyi1/Vy8eatxBs36WjRtu1Yhy/Sjzy/h6U3fmrS
      c/iPPcP+r98+tyZ545ngicXl48koGIcj5/MFDMPUKwG6vjWtAkrxPD09PR2uSnuITY+9pitJ
      5LibY1pm5hKldBvtK8BrCV6bqwRhQL3RwPcD/FZ1VhSFNJ7aQPXOe5DFAk7f/FlP7HScFZro
      N46jA9LSC6VInnmO6L5fYg70YR6xFPuYN2E1xjCefhy15UWMFUej1j9Ictu/wtNPIfJFovWP
      QBBgDAzotq17hzWZby6X6QjVOntvvBVZb1I6/yxidJ7HNAyS+x8guf9+PcFGRrBOP419P30U
      d+lC3c+g7Z1SMXvKqFoD65gV5N59duaOTSW1nzzI2H/dM/swqFZ+mcEVTNMaT05JSRRHHUqr
      ldzA87wWLUaI63pELcy3niD5rn56upp0C0mGUYRtWezZN4xAQyk8z6NYKHaQO72eRCnF6Njo
      pM2+2WhS/bO/JNm0Bee0U+n7q0/juC5yhkm69jh5inSNNm2Ee38IrgfvXYPq74L/GR2jcv0N
      yJd3kjv3HPLXfwL27CH+3Gd053fDwLhgDerR9bB3GCUVfmiiGj6iVMS7/jrEs79C/fJ+6OnF
      /NjVqCOPIoxDLMNCDe9HeC6qmNd9oBMJoxXYPURw85egXsdcfRLOJ67Rya+2R5ODu2j+/EHy
      7z4TsUgX3Mi0/e4MjJ5IJOGOnbPPBOvBHM/mJUmMaMV9FW3dWVpd3dP4vGyhA0FPDM/zshVi
      OgKmqX7LOQ5xMg7JAF1KhxAUDpDxPVQlimOiOJ78g2VhLhgg2fEyxsIBzZdpmjPOUEdRRKPR
      wLIsHMdBNX3UD74Hzz4NoIvoL7tiEngQ29ZVXfv2Yxy2QI9pzoF8Xk8A00TMm4cqFGAvKASq
      1WRcNZvILVswHn1EdyNpNlG/egJx1HINKREgB3pbiTAdhap95Zs07vwxPVddifsn1yP37cd8
      y5tRTmf0RghB5dZ/w7/vQZLdw/Ssu3o87zRT6IxpYB+1dHYTIHV9MrRfW3LEEJ1tRS2jhexE
      oQyN0szl3BbhaZAp9sSIz2zENAz65/VllUzQ4uucgeWfLpfxWkicxJruo4vPLB2H/LUfw929
      Bw5fRCPwMWwbb4bIVNu2KRaLBEGgC8zjOGsVCkCgx05ISXj3j4m3bse9aA3G4kUU1l2L3L2H
      6LEn2X/lNZSu+gj2lX+IXL8eccQyxJlnYS5fgfzFfVh9/Th7x4gffgTjqCOxTz0Fufl5VGUM
      HAeWLM0SZQCyrW+NEAI5MooKI2S9jli5EuOY7ggfpRTeGacSD+7CfefqA35LISWqVtdEw+YE
      1orZuECpSyJVZ3M7WkmO1F0RwuhA56V+n2GaWQgOoG9+30EJUaZRjUajTqlU7shSTiVRFOn0
      f8sqvpb7BakUY11cn4milMq6Wtq2TV9f/7TtYoHsmikCViml8U6PPUxy1x2QcxG/937U0iNQ
      u4epXLsOVa3hXvI7eB+9AqRE/vQnRLfdhvIDOP1svE98PFPMScoXx1CpIkIfsXcIVW8QP/Qw
      ynWxLl2L6h2neY9bpZRmpYp8egM4DtIt4Lx1JeoAyNt0/ziTMsnG93/IyFdvo7z2IspXfqBj
      QzyrFSD1q4US2uq3fMpcLodA4PuasiItgmjHDJWKJWxH8/xUqtWDykWv8wQO9iwL28MwJGiB
      3zzPm5az8jclSimqtSpNv9kVijAxAz8OK1czYseJIo3BMgwj651s2TbeyadSf9NKTYVvaZ58
      USpirlhOsmMQ600rtDGTEvnEE4goRJgCI6jpZ0r/2r41AKaJISTiu7cidg2CaaH2N4mrPlgO
      1hVXtIU1BWYcEd36DeKHHwHXxfvj67oqv9o5pPccCxdksIyZZHuFEMS79qCaTeKdQ5N+n/Ue
      IAuNCoEwNCZEA9QEOdfNYvvp7Ew/aBiG424KYsbYnNnIbJTXtu2MfSAlXerp6ckiSa+GKKV5
      eOqtopt2cFgqKfI2jZ5lRmiG93AcB9u2NdOb73fw6oSGThhaKeCwkKf4mXXQaCD6+nQrW8PA
      eNvbkJt0iNFYtQoqVRrf/i6qVsO7fC3isHHWByEEYstGxOA2HcKNY0xTw5+Tl17CCsOsi7xh
      CETTJ9m6TVeY1eskW7dhn3B8ZwK22WT0hi+gwpDeP1+HcfTyjvtNiu8HAfGTTyHKZcw3r6T8
      kUvJnXwcubceOzkRNtdK+0QmCASJEaOkwrItQKCkJFbjnR+75QYAojBCJq9dsTlMzlv4vn9Q
      m13M5P4pFEFrG5Mw9ihdWYVSWdg5TfP7vj/tZI2iKHMxUzhKR5IQobtLqrYmH25O/ykJrX+J
      s89BLDsChEAtX064Z5hEKZTrEu0Zxuzvy64pwpDEtBDvOCPbz8gogXqEWHksieOg2sY4yecx
      1lyA3LpVT4yTTsxgMVk9dxRjnnw8KgiIpcRMz6/VkZUqxmEDunFGS+TLOwmf2oAoFsgdvgiK
      RcyTjiMRQk+0Nvlf8A2h/tomxCYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='STATION LOCATION X QUARTER' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='STATION LOCATION X YEAR' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Storia 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
